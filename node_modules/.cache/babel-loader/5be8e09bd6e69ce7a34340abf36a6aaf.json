{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\TopBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { checkUserRequest, logoutRequest } from \"../redux\";\nimport { useHistory } from \"react-router\"; // import\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Divider from \"@material-ui/core/Divider\"; // 색 적용은 나중에 해보기\n// import { createTheme } from '@material-ui/core/styles';\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       light: '#ffd149',\n//       main: '#3f50b5',\n//       dark: '#002884',\n//       contrastText: '#fff',\n//     },\n//     secondary: {\n//       light: '#ff7961',\n//       main: '#f44336',\n//       dark: '#ba000d',\n//       contrastText: '#000',\n//     },\n//   },\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nfunction TopBar() {\n  _s();\n\n  const history = useHistory();\n  useEffect(() => {\n    // 렌더링\n    checkUserRequest();\n    let thisPath = this.location.pathname;\n    console.log(thisPath); // 현재 경로가 '/'라면 Home으로 이동\n\n    if (thisPath === \"/\") {\n      this.props.history.push(\"/Home/all\");\n    }\n  }, []);\n  const classes = useStyles(); // 사용자에게 보여지는 부분\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          className: classes.menuButton,\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          children: \"Kotudy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      variant: \"middle\",\n      component: \"li\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TopBar, \"u62eZExBWgeLCZ18uHJiSSIFkFk=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = TopBar;\n\nconst mapStateToProps = state => {\n  return {\n    userStatus: state.authentication.status\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutRequest: () => {\n      return dispatch(logoutRequest());\n    },\n    checkUserRequest: () => {\n      return dispatch(checkUserRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\n\nvar _c;\n\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/TopBar.js"],"names":["React","useEffect","useState","connect","checkUserRequest","logoutRequest","useHistory","makeStyles","AppBar","Toolbar","Typography","Button","IconButton","MenuIcon","Divider","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","TopBar","history","thisPath","location","pathname","console","log","props","push","classes","mapStateToProps","state","userStatus","authentication","status","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { checkUserRequest, logoutRequest } from \"../redux\";\r\nimport { useHistory } from \"react-router\";\r\n// import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\n// 색 적용은 나중에 해보기\r\n// import { createTheme } from '@material-ui/core/styles';\r\n\r\n// const theme = createTheme({\r\n//   palette: {\r\n//     primary: {\r\n//       light: '#ffd149',\r\n//       main: '#3f50b5',\r\n//       dark: '#002884',\r\n//       contrastText: '#fff',\r\n//     },\r\n//     secondary: {\r\n//       light: '#ff7961',\r\n//       main: '#f44336',\r\n//       dark: '#ba000d',\r\n//       contrastText: '#000',\r\n//     },\r\n//   },\r\n// });\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction TopBar() {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    // 렌더링\r\n    checkUserRequest();\r\n    let thisPath = this.location.pathname;\r\n    console.log(thisPath);\r\n\r\n    // 현재 경로가 '/'라면 Home으로 이동\r\n    if (thisPath === \"/\") {\r\n      this.props.history.push(\"/Home/all\");\r\n    }\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Kotudy\r\n          </Typography>\r\n          <Button color=\"inherit\">로그인</Button>\r\n          <Button color=\"inherit\">회원가입</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Divider variant=\"middle\" component=\"li\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userStatus: state.authentication.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutRequest: () => {\r\n      return dispatch(logoutRequest());\r\n    },\r\n    checkUserRequest: () => {\r\n      return dispatch(checkUserRequest());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n"]},"metadata":{},"sourceType":"module"}