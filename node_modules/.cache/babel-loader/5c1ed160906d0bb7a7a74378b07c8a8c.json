{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jyeo\\\\Desktop\\\\project\\\\Literacy-Improvement-Project\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\page\\\\Word.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport TopBar from \"../components/TopBar\";\nimport WordDefinition from \"../components/WordDefinition\";\nimport WordExample from \"../components/WordExample\";\nimport WordSide from \"../components/WordSide\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { oneWordRequest } from \"../redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  padding: {\n    paddingBottom: theme.spacing(1)\n  }\n}));\n\nfunction Word({\n  wordStatus,\n  oneWordRequest\n}) {\n  _s();\n\n  useEffect(() => {// 렌더링\n  }, []);\n  let wordName = [];\n  let pronunciation = [];\n  let pos = [];\n  let sense = [];\n  const itemLoad = wordStatus.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (wordName.push(item.word), pronunciation.push(item.pronunciation), pos.push(item.pos), sense.push(item.sense))\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this));\n  const {\n    word\n  } = useParams();\n  const classes = useStyles(); // 사용자에게 보여지는 부분\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [wordName[0], \" [\", pronunciation[0], \"]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 9\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), wordName.map((word, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [wordName[index], \"[\", pronunciation[index], \"]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: pos[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), sense[index].map((item, i) => /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [i + 1, \".\", item.definition]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uBA85\\uC0AC  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"1. \\uC624\\uB298\\uC758 \\uBC14\\uB85C \\uB2E4\\uC74C \\uB0A0.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"2. \\uB2E4\\uAC00\\uC62C \\uC55E\\uB0A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Word, \"h2ayHuDQIrx9VBfHyPx8wdlGWUA=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = Word;\n\nconst mapStateToProps = state => {\n  return {\n    // userID: state.authentication.status.currentUser,\n    wordStatus: state.oneWord.status.wordStatus\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    oneWordRequest: word => {\n      return dispatch(oneWordRequest(word));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Word);\n\nvar _c;\n\n$RefreshReg$(_c, \"Word\");","map":{"version":3,"sources":["C:/Users/Jyeo/Desktop/project/Literacy-Improvement-Project/Literacy-Improvement-Web/frontend/Literacy-Web/src/page/Word.js"],"names":["React","useEffect","TopBar","WordDefinition","WordExample","WordSide","connect","useParams","oneWordRequest","makeStyles","Grid","useStyles","theme","root","padding","spacing","paddingBottom","Word","wordStatus","wordName","pronunciation","pos","sense","itemLoad","map","item","index","push","word","classes","paper","i","definition","mapStateToProps","state","oneWord","status","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport TopBar from \"../components/TopBar\";\r\nimport WordDefinition from \"../components/WordDefinition\";\r\nimport WordExample from \"../components/WordExample\";\r\nimport WordSide from \"../components/WordSide\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { oneWordRequest } from \"../redux\";\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    padding: {\r\n        paddingBottom: theme.spacing(1),\r\n    }\r\n}));\r\nfunction Word({ wordStatus, oneWordRequest }) {\r\n    useEffect(() => {\r\n        // 렌더링\r\n\r\n    }, []);\r\n    let wordName = [];\r\n    let pronunciation = [];\r\n    let pos = [];\r\n    let sense = [];\r\n    const itemLoad = (\r\n        wordStatus.map((item, index) => (\r\n            <div key={index} >\r\n                {\r\n                    (\r\n                        wordName.push(item.word),\r\n                        pronunciation.push(item.pronunciation),\r\n                        pos.push(item.pos),\r\n                        sense.push(item.sense)\r\n                    )}\r\n            </div>\r\n        )\r\n        ))\r\n    const { word } = useParams();\r\n    const classes = useStyles();\r\n    // 사용자에게 보여지는 부분\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={3}>\r\n                        <h3>{wordName[0]} [{pronunciation[0]}]</h3>\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n\r\n                    </Grid>\r\n                    {wordName.map((word, index) => (\r\n                        <Grid item key={index} xs={12} className={classes.paper}>\r\n                            <h4>{wordName[index]}[{pronunciation[index]}]</h4>\r\n                            <h4>{pos[index]}</h4>\r\n                            {sense[index].map((item, i) => (\r\n                                <h5>{i+1}.{item.definition}</h5>\r\n                            ))}\r\n\r\n                        </Grid>\r\n                    ))}\r\n                    <Grid item xs={12} className={classes.paper}>\r\n                        <h4>명사  </h4>\r\n                        <h5>1. 오늘의 바로 다음 날.</h5>\r\n                        <h5>2. 다가올 앞날</h5>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // userID: state.authentication.status.currentUser,\r\n        wordStatus: state.oneWord.status.wordStatus,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        oneWordRequest: (word) => {\r\n            return dispatch(oneWordRequest(word));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Word);\r\n"]},"metadata":{},"sourceType":"module"}