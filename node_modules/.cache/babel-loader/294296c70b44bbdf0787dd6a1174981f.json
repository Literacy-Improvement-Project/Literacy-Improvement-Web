{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jyeo\\\\Desktop\\\\project\\\\Literacy-Improvement-Project\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\page\\\\MyPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport MySearch from \"../components/MyPage/MySearch\";\nimport MyDictionary from \"../components/MyPage/MyDictionary\";\nimport { dictionaryWordsRequest, searchWordsRequest } from \"../redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}));\n\nfunction MyPage({\n  dictionaryWordsList,\n  searchWordsList,\n  dictionaryWordsRequest,\n  searchWordsRequest\n}) {\n  _s();\n\n  useEffect(() => {\n    // 렌더링\n    dictionaryWordsRequest();\n    searchWordsRequest();\n  }, []);\n  const classes = useStyles(); // 사용자에게 보여지는 부분\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MySearch, {\n            searchWordsList: searchWordsList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MyDictionary, {\n            dictionaryWordsList: dictionaryWordsList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyPage, \"v7TDUGheAkBmKIQo9Gj65jeexyQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = MyPage;\n\nconst mapStateToProps = state => {\n  return {\n    // userID: state.authentication.status.currentUser,\n    searchWordsList: state.myPage.status.searchWordsList,\n    dictionaryWordsList: state.myPage.status.dictionaryWordsList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchWordsRequest: () => {\n      return dispatch(searchWordsRequest());\n    },\n    dictionaryWordsRequest: () => {\n      return dispatch(dictionaryWordsRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"sources":["C:/Users/Jyeo/Desktop/project/Literacy-Improvement-Project/Literacy-Improvement-Web/frontend/Literacy-Web/src/page/MyPage.js"],"names":["React","useEffect","connect","MySearch","MyDictionary","dictionaryWordsRequest","searchWordsRequest","makeStyles","Grid","useStyles","theme","root","padding","spacing","MyPage","dictionaryWordsList","searchWordsList","classes","mapStateToProps","state","myPage","status","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,SAASC,sBAAT,EAAiCC,kBAAjC,QAA2D,UAA3D;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADP;AAD+B,CAAZ,CAAD,CAA5B;;AAMA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,mBAAF;AAAuBC,EAAAA,eAAvB;AAAwCX,EAAAA,sBAAxC;AAAgEC,EAAAA;AAAhE,CAAhB,EAAsG;AAAA;;AAClGL,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAI,IAAAA,sBAAsB;AACtBC,IAAAA,kBAAkB;AACrB,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMW,OAAO,GAAGR,SAAS,EAAzB,CAPkG,CASlG;;AACA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEQ,OAAO,CAACN,IAAxB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,eAAe,EAAEK;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,YAAD;AAAc,YAAA,mBAAmB,EAAED;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA1BQD,M;UAOWL,S;;;KAPXK,M;;AA4BT,MAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACH;AACAH,IAAAA,eAAe,EAAEG,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBL,eAFlC;AAGHD,IAAAA,mBAAmB,EAAEI,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBN;AAHtC,GAAP;AAKH,CAND;;AAQA,MAAMO,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHjB,IAAAA,kBAAkB,EAAE,MAAM;AACtB,aAAOiB,QAAQ,CAACjB,kBAAkB,EAAnB,CAAf;AACH,KAHE;AAIHD,IAAAA,sBAAsB,EAAE,MAAM;AAC1B,aAAOkB,QAAQ,CAAClB,sBAAsB,EAAvB,CAAf;AACH;AANE,GAAP;AAQH,CATD;;AAUA,eAAeH,OAAO,CAACgB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CR,MAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MySearch from \"../components/MyPage/MySearch\";\r\nimport MyDictionary from \"../components/MyPage/MyDictionary\";\r\nimport { dictionaryWordsRequest, searchWordsRequest } from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction MyPage({ dictionaryWordsList, searchWordsList, dictionaryWordsRequest, searchWordsRequest }) {\r\n    useEffect(() => {\r\n        // 렌더링\r\n        dictionaryWordsRequest();\r\n        searchWordsRequest();\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n\r\n    // 사용자에게 보여지는 부분\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <MySearch searchWordsList={searchWordsList}>\r\n                        </MySearch>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <MyDictionary dictionaryWordsList={dictionaryWordsList}>\r\n                        </MyDictionary>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // userID: state.authentication.status.currentUser,\r\n        searchWordsList: state.myPage.status.searchWordsList,\r\n        dictionaryWordsList: state.myPage.status.dictionaryWordsList,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchWordsRequest: () => {\r\n            return dispatch(searchWordsRequest());\r\n        },\r\n        dictionaryWordsRequest: () => {\r\n            return dispatch(dictionaryWordsRequest());\r\n        },\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPage);\r\n"]},"metadata":{},"sourceType":"module"}