{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\WordMeaning\\\\MainWordMeaning.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport \"./MainWordMeaning.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainWordMeaning({\n  handleMorpheme,\n  item\n}) {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n  const [searchBox, setSearchBox] = useState(\"\");\n\n  const handleChange = ({\n    target\n  }) => {\n    setSearchBox(target.value);\n  };\n\n  const checkMorpheme = e => {\n    handleMorpheme(searchBox);\n    setChecked(true);\n  };\n\n  const morpheme = {\n    pos: [],\n    name: []\n  };\n\n  const morphemeLoad = () => {\n    for (let i = 0; i < item.length; i++) {\n      if (i % 2 == 0) {\n        morpheme.pos.push(item[i]);\n      } else {\n        morpheme.name.push(item[i]);\n      }\n    }\n  };\n\n  const searchPage = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputs\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" \\uBB38\\uC7A5 / \\uB2E8\\uC5B4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: \"search\",\n      id: \"filled-basic\",\n      label: \"\\uC6D0\\uD558\\uB294 \\uB2E8\\uC5B4\\uB098 \\uBB38\\uC7A5\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n      value: searchBox,\n      autoFocus: true,\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search_button\",\n      onClick: checkMorpheme,\n      children: \"\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n\n  const searchSuccess = morpheme.pos.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        margineft: 10\n      },\n      children: [\"[\", morpheme.pos[index], \"] \", morpheme.name[index]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/Word/${morpheme.name[index]}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uB354 \\uC54C\\uC544\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title\",\n      children: \" \\uC774\\uAC74 \\uBB34\\uC2A8 \\uB73B\\uC774\\uC9C0? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: searchPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: !checked ? null : searchSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainWordMeaning, \"fgg0x4dkHT2rM2iq6TTvtdKasD8=\");\n\n_c = MainWordMeaning;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainWordMeaning\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/WordMeaning/MainWordMeaning.js"],"names":["React","useState","TextField","Grid","Link","MainWordMeaning","handleMorpheme","item","checked","setChecked","searchBox","setSearchBox","handleChange","target","value","checkMorpheme","e","morpheme","pos","name","morphemeLoad","i","length","push","searchPage","searchSuccess","map","index","margineft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport \"./MainWordMeaning.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function MainWordMeaning({ handleMorpheme, item }) {\r\n  const [checked, setChecked] = useState(false);\r\n  const [searchBox, setSearchBox] = useState(\"\");\r\n\r\n  const handleChange = ({ target }) => {\r\n    setSearchBox(target.value);\r\n  };\r\n\r\n  const checkMorpheme = (e) => {\r\n    handleMorpheme(searchBox);\r\n    setChecked(true);\r\n  };\r\n\r\n  const morpheme = {\r\n    pos: [],\r\n    name: [],\r\n  };\r\n\r\n  const morphemeLoad = () => {\r\n    for (let i = 0; i < item.length; i++) {\r\n      if (i % 2 == 0) {\r\n        morpheme.pos.push(item[i]);\r\n      } else {\r\n        morpheme.name.push(item[i]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const searchPage = (\r\n    <div className=\"inputs\">\r\n      <div> 문장 / 단어</div>\r\n      <TextField\r\n        className=\"search\"\r\n        id=\"filled-basic\"\r\n        label=\"원하는 단어나 문장을 입력해 주세요.\"\r\n        value={searchBox}\r\n        autoFocus\r\n        onChange={(e) => handleChange(e)}\r\n      />\r\n      <button className=\"search_button\" onClick={checkMorpheme}>\r\n        검색\r\n      </button>\r\n    </div>\r\n  );\r\n  const searchSuccess = morpheme.pos.map((item, index) => (\r\n    <div key={index}>\r\n      <h1 style={{ margineft: 10 }}>\r\n        [{morpheme.pos[index]}] {morpheme.name[index]}\r\n      </h1>\r\n      <Link to={`/Word/${morpheme.name[index]}`}>\r\n        <button>더 알아보기</button>\r\n      </Link>\r\n    </div>\r\n  ));\r\n  return (\r\n    <div className=\"header\">\r\n      <span className=\"title\"> 이건 무슨 뜻이지? </span>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          {searchPage}\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          {!checked ? null : searchSuccess}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}