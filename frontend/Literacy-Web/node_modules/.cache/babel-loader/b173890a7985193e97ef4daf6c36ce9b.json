{"ast":null,"code":"import * as types from \"./types\";\nconst initialState = {\n  status: {\n    valid: false,\n    loading: false,\n    item: []\n  }\n};\nexport default function morpheme(state = initialState, action) {\n  switch (action.type) {\n    case types.MORPHEME_CHECK:\n      return { ...state,\n        status: { ...state.status,\n          loading: true\n        }\n      };\n\n    case types.MORPHEME_CHECK_SUCCESS:\n      return { ...state,\n        status: { ...state.status,\n          valid: true,\n          loading: false,\n          item: action.result\n        }\n      };\n\n    case types.MORPHEME_CHECK_FAILURE:\n      return { ...state,\n        status: { ...state.status,\n          loading: false,\n          valid: false\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/redux/morpheme/reducer.js"],"names":["types","initialState","status","valid","loading","item","morpheme","state","action","type","MORPHEME_CHECK","MORPHEME_CHECK_SUCCESS","result","MORPHEME_CHECK_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,KADH;AAEJC,IAAAA,OAAO,EAAE,KAFL;AAGJC,IAAAA,IAAI,EAAE;AAHF;AADS,CAArB;AAQA,eAAe,SAASC,QAAT,CAAkBC,KAAK,GAAGN,YAA1B,EAAwCO,MAAxC,EAAgD;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,KAAK,CAACU,cAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHL,QAAAA,MAAM,EAAE,EACJ,GAAGK,KAAK,CAACL,MADL;AAEJE,UAAAA,OAAO,EAAE;AAFL;AAFL,OAAP;;AAOJ,SAAKJ,KAAK,CAACW,sBAAX;AACI,aAAO,EACH,GAAGJ,KADA;AAEHL,QAAAA,MAAM,EAAE,EACJ,GAAGK,KAAK,CAACL,MADL;AAEJC,UAAAA,KAAK,EAAE,IAFH;AAGJC,UAAAA,OAAO,EAAE,KAHL;AAIJC,UAAAA,IAAI,EAAEG,MAAM,CAACI;AAJT;AAFL,OAAP;;AASJ,SAAKZ,KAAK,CAACa,sBAAX;AACI,aAAO,EACH,GAAGN,KADA;AAEHL,QAAAA,MAAM,EAAE,EACJ,GAAGK,KAAK,CAACL,MADL;AAEJE,UAAAA,OAAO,EAAE,KAFL;AAGJD,UAAAA,KAAK,EAAE;AAHH;AAFL,OAAP;;AAQJ;AACI,aAAOI,KAAP;AA7BR;AA+BH","sourcesContent":["import * as types from \"./types\";\r\n\r\nconst initialState = {\r\n    status: {\r\n        valid: false,\r\n        loading: false,\r\n        item: [],\r\n    },\r\n};\r\n\r\nexport default function morpheme(state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.MORPHEME_CHECK:\r\n            return {\r\n                ...state,\r\n                status: {\r\n                    ...state.status,\r\n                    loading: true,\r\n                },\r\n            };\r\n        case types.MORPHEME_CHECK_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: {\r\n                    ...state.status,\r\n                    valid: true,\r\n                    loading: false,\r\n                    item: action.result,\r\n                },\r\n            };\r\n        case types.MORPHEME_CHECK_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: {\r\n                    ...state.status,\r\n                    loading: false,\r\n                    valid: false,\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}