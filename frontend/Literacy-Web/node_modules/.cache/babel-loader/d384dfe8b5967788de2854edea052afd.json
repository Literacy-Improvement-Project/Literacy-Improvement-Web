{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jyeo\\\\Desktop\\\\project\\\\Literacy-Improvement-Project\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\MyPage\\\\MyDictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"../redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n    // width: '100%',\n    // maxWidth: '100ch',\n    height: '42ch',\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: '20px',\n    border: '1px solid #D9D9D9'\n  },\n  inline: {\n    display: 'inline'\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: 'center',\n    // height: '7ch',\n    color: theme.palette.text.secondary,\n    display: 'flex',\n    borderBottom: '1px solid #D9D9D9'\n  },\n  button: {\n    float: 'right'\n  },\n  test: {\n    border: '1px solid #D9D9D9'\n  }\n}));\nexport default function MyDictionary({\n  dictionaryWordsList\n}) {\n  _s();\n\n  useEffect(() => {// 렌더링\n  }, []);\n  const classes = useStyles(); // 사용자에게 보여지는 부분\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uB0B4 \\uB2E8\\uC5B4\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), dictionaryWordsList.map((word, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: word.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: word.morpheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: word.mean\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n} //props 내용물 설정되면 출력형식 바꿔야함\n\n_s(MyDictionary, \"v7TDUGheAkBmKIQo9Gj65jeexyQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = MyDictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyDictionary\");","map":{"version":3,"sources":["C:/Users/Jyeo/Desktop/project/Literacy-Improvement-Project/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/MyPage/MyDictionary.js"],"names":["React","useEffect","makeStyles","Grid","useStyles","theme","root","paddingTop","spacing","paddingLeft","paddingRight","paddingBottom","height","backgroundColor","palette","background","paper","borderRadius","border","inline","display","textAlign","color","text","secondary","borderBottom","button","float","test","MyDictionary","dictionaryWordsList","classes","map","word","index","morpheme","mean"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAgB,UAAhB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADV;AAEFC,IAAAA,WAAW,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFX;AAGFE,IAAAA,YAAY,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd,CAHZ;AAIFG,IAAAA,aAAa,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd,CAJb;AAKF;AACA;AACAI,IAAAA,MAAM,EAAE,MAPN;AAQFC,IAAAA,eAAe,EAAER,KAAK,CAACS,OAAN,CAAcC,UAAd,CAAyBC,KARxC;AASFC,IAAAA,YAAY,EAAE,MATZ;AAUFC,IAAAA,MAAM,EAAE;AAVN,GAD+B;AAarCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GAb6B;AAgBrCJ,EAAAA,KAAK,EAAE;AACH;AACAK,IAAAA,SAAS,EAAE,QAFR;AAGH;AACAC,IAAAA,KAAK,EAAEjB,KAAK,CAACS,OAAN,CAAcS,IAAd,CAAmBC,SAJvB;AAKHJ,IAAAA,OAAO,EAAE,MALN;AAMHK,IAAAA,YAAY,EAAE;AANX,GAhB8B;AAwBrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GAxB6B;AA2BrCC,EAAAA,IAAI,EAAE;AACFV,IAAAA,MAAM,EAAE;AADN;AA3B+B,CAAZ,CAAD,CAA5B;AAiCA,eAAe,SAASW,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAA+C;AAAA;;AAC1D7B,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM8B,OAAO,GAAG3B,SAAS,EAAzB,CAL0D,CAM1D;;AACA,sBACI;AAAK,IAAA,SAAS,EAAE2B,OAAO,CAACzB,IAAxB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKKwB,mBAAmB,CAACE,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,kBACrB,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,SAAS,EAAEH,OAAO,CAACf,KAAtC;AAAA,gCACI;AAAA,oBAAKiB,IAAI,CAACA;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKA,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,CALL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,C,CACD;;GAzBwBP,Y;UAKJzB,S;;;KALIyB,Y","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { } from \"../redux\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(5),\r\n        paddingRight: theme.spacing(5),\r\n        paddingBottom: theme.spacing(5),\r\n        // width: '100%',\r\n        // maxWidth: '100ch',\r\n        height: '42ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: '20px',\r\n        border: '1px solid #D9D9D9',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    paper: {\r\n        // padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        // height: '7ch',\r\n        color: theme.palette.text.secondary,\r\n        display: 'flex',\r\n        borderBottom: '1px solid #D9D9D9',\r\n    },\r\n    button: {\r\n        float: 'right',\r\n    },\r\n    test: {\r\n        border: '1px solid #D9D9D9',\r\n    }\r\n}));\r\n\r\n\r\nexport default function MyDictionary({ dictionaryWordsList }) {\r\n    useEffect(() => {\r\n        // 렌더링\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n    // 사용자에게 보여지는 부분\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={3}>\r\n                    <h3>내 단어장</h3>\r\n                </Grid>\r\n                <Grid item xs={9}></Grid>\r\n                {dictionaryWordsList.map((word, index) => (\r\n                    <Grid item xs={12} className={classes.paper}>\r\n                        <h4>{word.word}</h4>\r\n                        <h5>{word.morpheme}</h5>\r\n                        <h4>{word.mean}</h4>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n//props 내용물 설정되면 출력형식 바꿔야함"]},"metadata":{},"sourceType":"module"}