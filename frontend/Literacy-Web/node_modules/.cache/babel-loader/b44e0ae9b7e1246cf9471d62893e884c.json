{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jyeo\\\\Desktop\\\\project\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\WordRanking.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { userRankingRequest, wordRankingRequest } from \"../redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, Typography, CardActions, CardContent, Card, ButtonGroup } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n    marginTop: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    // width: '100%',\n    // maxWidth: '100ch',\n    maxheight: \"100\",\n    // backgroundColor: \"#3d3d3d\",\n    borderRadius: \"20px\",\n    border: \"1px solid #D9D9D9\"\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: \"left\",\n    fontWeight: \"900\",\n    marginBottom: \"10px\",\n    // height: '7ch',\n    // display: \"flex\",\n    borderRadius: \"20px\",\n    borderBottom: \"1px solid #D9D9D9\",\n    borderTop: \"1px solid #D9D9D9\",\n    // borderBottom: \"1px solid #D9D9D9\",\n    \"&:hover\": {\n      backgroundColor: \"#63ccff\"\n    }\n  },\n  number: {\n    textAlign: \"right\",\n    fontWeight: \"600\",\n    width: \"35px\",\n    marginRight: \"100px\",\n    display: \"inline-block\",\n    fontFamily: \"BMHANNApro\",\n    fontSize: \"12px\"\n  },\n  word: {\n    textAlign: \"left\",\n    fontWeight: \"900\",\n    marginRight: \"50px\",\n    display: \"inline-block\",\n    fontFamily: \"BMHANNAp\",\n    fontSize: \"20px\"\n  },\n  word2: {\n    textAlign: \"left\",\n    fontWeight: \"900\",\n    marginLeft: \"100px\",\n    color: \"#6666FF\",\n    display: \"inline-block\",\n    fontFamily: \"BMHANNAp\",\n    fontSize: \"15px\"\n  },\n  word3: {\n    textAlign: \"right\",\n    fontWeight: \"400\",\n    marginLeft: \"100px\",\n    display: \"inline-block\",\n    fontFamily: \"BMHANNApro\",\n    fontSize: \"15px\"\n  },\n  cover: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    marginBottom: \"10px\"\n  },\n  img: {\n    maxWidth: \"50px\",\n    height: \"auto\",\n    display: \"block\",\n    borderRadius: \"70%\"\n  },\n  subimg: {\n    display: \"inline-block\",\n    marginBottom: \"-7px\",\n    marginTop: \"5px\",\n    marginLeft: \"10px\",\n    maxWidth: \"25px\",\n    height: \"auto\",\n    borderRadius: \"70%\"\n  },\n  card: {\n    width: \"30%\",\n    maxWidth: \"200px\",\n    // backgroundColor: \"#ffff6c\",\n    \"&:hover\": {\n      // width: \"11%\",\n      // display: \"block\",\n      backgroundColor: \"#63ccff\" // border: \"1px solid #6ca8a8\",\n\n    }\n  }\n}));\n\nfunction WordRanking({\n  userRanking,\n  userRankingRequest,\n  wordRanking,\n  wordRankingRequest\n}) {\n  _s();\n\n  useEffect(() => {\n    // 렌더링\n    wordRankingRequest();\n    userRankingRequest();\n  }, []);\n  const classes = useStyles(); // 단어페이지 이동 핸들러\n\n  const onClickOneWord = word => {\n    window.location.replace(`/Word/${word}`);\n  };\n\n  let wordlist = []; // wordranking데이터\n\n  let datalen = 0;\n  let datalen2 = 0;\n  let userlist = []; // userranking데이터\n  //데이터 복사 -> [0] : 단어,닉네임 [1] : 점수, [2] : 이미지\n\n  if (wordRanking && wordRanking.length > 0) {\n    wordlist.push(wordRanking[0][0]);\n    wordlist.push(wordRanking[1][0]);\n    datalen = wordlist[0].length;\n  }\n\n  if (userRanking && userRanking.length > 0) {\n    userlist.push(userRanking[0][0]);\n    userlist.push(userRanking[1][0]);\n    userlist.push(userRanking[2][0]);\n    datalen2 = userlist[0].length;\n  } //top3로 분류\n\n\n  let top3word = [[], []];\n  let top3user = [[], [], []];\n\n  if (datalen > 2) {\n    top3word[0].push(wordlist[0][0]);\n    top3word[1].push(wordlist[1][0]);\n    top3word[0].push(wordlist[0][1]);\n    top3word[1].push(wordlist[1][1]);\n    top3word[0].push(wordlist[0][2]);\n    top3word[1].push(wordlist[1][2]);\n  } else if (datalen == 2) {\n    top3word[0].push(wordlist[0][0]);\n    top3word[1].push(wordlist[1][0]);\n    top3word[0].push(wordlist[0][1]);\n    top3word[1].push(wordlist[1][1]);\n  } else if (datalen == 1) {\n    top3word[0].push(wordlist[0][0]);\n    top3word[1].push(wordlist[1][0]);\n  }\n\n  if (datalen2 > 2) {\n    top3user[0].push(userlist[0][0]);\n    top3user[1].push(userlist[1][0]);\n    top3user[2].push(userlist[2][0]);\n    top3user[0].push(userlist[0][1]);\n    top3user[1].push(userlist[1][1]);\n    top3user[2].push(userlist[2][1]);\n    top3user[0].push(userlist[0][2]);\n    top3user[1].push(userlist[1][2]);\n    top3user[2].push(userlist[2][2]);\n  } else if (datalen2 == 2) {\n    top3user[0].push(userlist[0][0]);\n    top3user[1].push(userlist[1][0]);\n    top3user[2].push(userlist[2][0]);\n    top3user[0].push(userlist[0][1]);\n    top3user[1].push(userlist[1][1]);\n    top3user[2].push(userlist[2][1]);\n  } else if (datalen2 == 1) {\n    top3user[0].push(userlist[0][0]);\n    top3user[1].push(userlist[1][0]);\n    top3user[2].push(userlist[2][0]);\n  }\n\n  console.log(top3user);\n  console.log(top3word);\n  console.log(wordRanking);\n  console.log(userRanking);\n  console.log(wordlist);\n  console.log(userlist); //top3표시하는 컴포넌트\n\n  function WordBasicCard(props) {\n    let image = \"rd-place.png\";\n    if (props.value2 === 1) image = \"st-place.png\";else if (props.value2 === 2) image = \"nd-place.png\";\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      sx: {\n        minWidth: 275\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.img,\n          src: image // alt={'img'}\n          ,\n          loading: \"lazy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: props.value1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [props.value3, \" \\uBA85\\uC774 \\uC120\\uD0DD\\uD588\\uC5B4\\uC694!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: () => onClickOneWord(props.value1),\n          children: \"\\uB2E8\\uC5B4 \\uC790\\uC138\\uD788 \\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  }\n\n  function UserBasicCard(props) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      sx: {\n        minWidth: 275\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: props.value2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.img,\n          src: props.value4 // alt={'img'}\n          ,\n          loading: \"lazy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: props.value1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [props.value3, \" \\uC810\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this);\n  } // 사용자에게 보여지는 부분\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB2E8\\uC5B4\\uB7AD\\uD0B9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cover,\n        children: top3word[0].map((item, index) => /*#__PURE__*/_jsxDEV(WordBasicCard, {\n          value1: top3word[0][index],\n          value2: index + 1,\n          value3: top3word[1][index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), wordlist.length ? wordlist[0].map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cover,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            color: \"textPrimary\",\n            className: classes.number,\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            color: \"textPrimary\",\n            className: classes.word,\n            children: wordlist[0][index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            color: \"textPrimary\",\n            className: classes.word2,\n            children: [wordlist[1][index], \" \\uBA85\\uC774 \\uC120\\uD0DD\\uD588\\uC5B4\\uC694!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: () => onClickOneWord(wordlist[0][index]),\n            className: classes.word3,\n            children: \"\\uB2E8\\uC5B4 \\uC790\\uC138\\uD788 \\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC720\\uC800\\uB7AD\\uD0B9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cover,\n        children: top3user[0].map((item, index) => /*#__PURE__*/_jsxDEV(UserBasicCard, {\n          value1: top3user[0][index],\n          value2: index + 1,\n          value3: top3user[1][index],\n          value4: top3user[2][index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), userlist.length ? userlist[0].map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cover,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.subimg,\n            src: userlist[2][index] // alt={'img'}\n            ,\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            color: \"textPrimary\",\n            className: classes.number,\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            color: \"textPrimary\",\n            className: classes.word,\n            children: userlist[0][index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            color: \"textPrimary\",\n            className: classes.word2,\n            children: [userlist[1][index], \" \\uC810\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WordRanking, \"v7TDUGheAkBmKIQo9Gj65jeexyQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = WordRanking;\n\nconst mapStateToProps = state => {\n  return {\n    wordRanking: state.ranking.status.wordRanking,\n    userRanking: state.ranking.status.userRanking\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    wordRankingRequest: () => {\n      return dispatch(wordRankingRequest());\n    },\n    userRankingRequest: () => {\n      return dispatch(userRankingRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WordRanking);\n\nvar _c;\n\n$RefreshReg$(_c, \"WordRanking\");","map":{"version":3,"sources":["C:/Users/Jyeo/Desktop/project/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/WordRanking.js"],"names":["React","useEffect","useState","connect","useSelector","userRankingRequest","wordRankingRequest","makeStyles","Grid","Button","Typography","CardActions","CardContent","Card","ButtonGroup","useStyles","theme","root","paddingTop","spacing","paddingLeft","paddingRight","paddingBottom","marginTop","marginLeft","marginRight","maxheight","borderRadius","border","paper","textAlign","fontWeight","marginBottom","borderBottom","borderTop","backgroundColor","number","width","display","fontFamily","fontSize","word","word2","color","word3","cover","justifyContent","img","maxWidth","height","subimg","card","WordRanking","userRanking","wordRanking","classes","onClickOneWord","window","location","replace","wordlist","datalen","datalen2","userlist","length","push","top3word","top3user","console","log","WordBasicCard","props","image","value2","minWidth","value1","value3","UserBasicCard","value4","map","item","index","mapStateToProps","state","ranking","status","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,UAAvD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SACEC,MADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,IALF,EAMEC,WANF,QAOO,mBAPP;;AASA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADR;AAEJC,IAAAA,WAAW,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFT;AAGJE,IAAAA,YAAY,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd,CAHV;AAIJG,IAAAA,aAAa,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd,CAJX;AAKJI,IAAAA,SAAS,EAAEP,KAAK,CAACG,OAAN,CAAc,CAAd,CALP;AAMJK,IAAAA,UAAU,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,CANR;AAOJM,IAAAA,WAAW,EAAET,KAAK,CAACG,OAAN,CAAc,CAAd,CAPT;AAQJ;AACA;AACAO,IAAAA,SAAS,EAAE,KAVP;AAWJ;AACAC,IAAAA,YAAY,EAAE,MAZV;AAaJC,IAAAA,MAAM,EAAE;AAbJ,GADiC;AAgBvCC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,SAAS,EAAE,MAFN;AAGLC,IAAAA,UAAU,EAAE,KAHP;AAILC,IAAAA,YAAY,EAAE,MAJT;AAKL;AACA;AACAL,IAAAA,YAAY,EAAE,MAPT;AAQLM,IAAAA,YAAY,EAAE,mBART;AASLC,IAAAA,SAAS,EAAE,mBATN;AAWL;AACA,eAAW;AACTC,MAAAA,eAAe,EAAE;AADR;AAZN,GAhBgC;AAgCvCC,EAAAA,MAAM,EAAE;AACNN,IAAAA,SAAS,EAAE,OADL;AAENC,IAAAA,UAAU,EAAE,KAFN;AAGNM,IAAAA,KAAK,EAAE,MAHD;AAINZ,IAAAA,WAAW,EAAE,OAJP;AAKNa,IAAAA,OAAO,EAAE,cALH;AAMNC,IAAAA,UAAU,EAAE,YANN;AAONC,IAAAA,QAAQ,EAAE;AAPJ,GAhC+B;AAyCvCC,EAAAA,IAAI,EAAE;AACJX,IAAAA,SAAS,EAAE,MADP;AAEJC,IAAAA,UAAU,EAAE,KAFR;AAGJN,IAAAA,WAAW,EAAE,MAHT;AAIJa,IAAAA,OAAO,EAAE,cAJL;AAKJC,IAAAA,UAAU,EAAE,UALR;AAMJC,IAAAA,QAAQ,EAAE;AANN,GAzCiC;AAiDvCE,EAAAA,KAAK,EAAE;AACLZ,IAAAA,SAAS,EAAE,MADN;AAELC,IAAAA,UAAU,EAAE,KAFP;AAGLP,IAAAA,UAAU,EAAE,OAHP;AAILmB,IAAAA,KAAK,EAAE,SAJF;AAKLL,IAAAA,OAAO,EAAE,cALJ;AAMLC,IAAAA,UAAU,EAAE,UANP;AAOLC,IAAAA,QAAQ,EAAE;AAPL,GAjDgC;AA0DvCI,EAAAA,KAAK,EAAE;AACLd,IAAAA,SAAS,EAAE,OADN;AAELC,IAAAA,UAAU,EAAE,KAFP;AAGLP,IAAAA,UAAU,EAAE,OAHP;AAILc,IAAAA,OAAO,EAAE,cAJJ;AAKLC,IAAAA,UAAU,EAAE,YALP;AAMLC,IAAAA,QAAQ,EAAE;AANL,GA1DgC;AAkEvCK,EAAAA,KAAK,EAAE;AACLP,IAAAA,OAAO,EAAE,MADJ;AAELQ,IAAAA,cAAc,EAAE,cAFX;AAGLd,IAAAA,YAAY,EAAE;AAHT,GAlEgC;AAuEvCe,EAAAA,GAAG,EAAE;AACHC,IAAAA,QAAQ,EAAE,MADP;AAEHC,IAAAA,MAAM,EAAE,MAFL;AAGHX,IAAAA,OAAO,EAAE,OAHN;AAIHX,IAAAA,YAAY,EAAE;AAJX,GAvEkC;AA6EvCuB,EAAAA,MAAM,EAAE;AACNZ,IAAAA,OAAO,EAAE,cADH;AAENN,IAAAA,YAAY,EAAE,MAFR;AAGNT,IAAAA,SAAS,EAAE,KAHL;AAINC,IAAAA,UAAU,EAAE,MAJN;AAKNwB,IAAAA,QAAQ,EAAE,MALJ;AAMNC,IAAAA,MAAM,EAAE,MANF;AAONtB,IAAAA,YAAY,EAAE;AAPR,GA7E+B;AAsFvCwB,EAAAA,IAAI,EAAE;AACJd,IAAAA,KAAK,EAAE,KADH;AAEJW,IAAAA,QAAQ,EAAE,OAFN;AAGJ;AACA,eAAW;AACT;AACA;AACAb,MAAAA,eAAe,EAAE,SAHR,CAIT;;AAJS;AAJP;AAtFiC,CAAZ,CAAD,CAA5B;;AAmGA,SAASiB,WAAT,CAAqB;AACnBC,EAAAA,WADmB;AAEnBhD,EAAAA,kBAFmB;AAGnBiD,EAAAA,WAHmB;AAInBhD,EAAAA;AAJmB,CAArB,EAKG;AAAA;;AACDL,EAAAA,SAAS,CAAC,MAAM;AACd;AACAK,IAAAA,kBAAkB;AAClBD,IAAAA,kBAAkB;AACnB,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMkD,OAAO,GAAGxC,SAAS,EAAzB,CAPC,CASD;;AACA,QAAMyC,cAAc,GAAIf,IAAD,IAAU;AAC/BgB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAyB,SAAQlB,IAAK,EAAtC;AACD,GAFD;;AAIA,MAAImB,QAAQ,GAAG,EAAf,CAdC,CAckB;;AACnB,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,QAAQ,GAAG,EAAf,CAjBC,CAiBkB;AAEnB;;AACA,MAAIT,WAAW,IAAIA,WAAW,CAACU,MAAZ,GAAqB,CAAxC,EAA2C;AACzCJ,IAAAA,QAAQ,CAACK,IAAT,CAAcX,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,CAAd;AACAM,IAAAA,QAAQ,CAACK,IAAT,CAAcX,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,CAAd;AACAO,IAAAA,OAAO,GAAGD,QAAQ,CAAC,CAAD,CAAR,CAAYI,MAAtB;AACD;;AACD,MAAIX,WAAW,IAAIA,WAAW,CAACW,MAAZ,GAAqB,CAAxC,EAA2C;AACzCD,IAAAA,QAAQ,CAACE,IAAT,CAAcZ,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,CAAd;AACAU,IAAAA,QAAQ,CAACE,IAAT,CAAcZ,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,CAAd;AACAU,IAAAA,QAAQ,CAACE,IAAT,CAAcZ,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,CAAd;AACAS,IAAAA,QAAQ,GAAGC,QAAQ,CAAC,CAAD,CAAR,CAAYC,MAAvB;AACD,GA9BA,CAkCD;;;AACA,MAAIE,QAAQ,GAAG,CAAC,EAAD,EAAK,EAAL,CAAf;AACA,MAAIC,QAAQ,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAf;;AAEA,MAAIN,OAAO,GAAG,CAAd,EAAiB;AACfK,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYD,IAAZ,CAAiBL,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAM,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYD,IAAZ,CAAiBL,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAM,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYD,IAAZ,CAAiBL,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAM,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYD,IAAZ,CAAiBL,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAM,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYD,IAAZ,CAAiBL,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAM,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYD,IAAZ,CAAiBL,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACD,GAPD,MAOO,IAAIC,OAAO,IAAI,CAAf,EAAkB;AACvBK,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYD,IAAZ,CAAiBL,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAM,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYD,IAAZ,CAAiBL,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAM,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYD,IAAZ,CAAiBL,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAM,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYD,IAAZ,CAAiBL,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACD,GALM,MAKA,IAAIC,OAAO,IAAI,CAAf,EAAkB;AACvBK,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYD,IAAZ,CAAiBL,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAM,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYD,IAAZ,CAAiBL,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACD;;AAED,MAAIE,QAAQ,GAAG,CAAf,EAAkB;AAChBK,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACD,GAVD,MAUO,IAAID,QAAQ,IAAI,CAAhB,EAAmB;AACxBK,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACD,GAPM,MAOA,IAAID,QAAQ,IAAI,CAAhB,EAAmB;AACxBK,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBF,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAjB;AACD;;AAEDK,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAnFC,CAyFD;;AACA,WAASO,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAIC,KAAK,GAAG,cAAZ;AACA,QAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwBD,KAAK,GAAG,cAAR,CAAxB,KACK,IAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwBD,KAAK,GAAG,cAAR;AAC7B,wBACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEjB,OAAO,CAACJ,IAAzB;AAA+B,MAAA,EAAE,EAAE;AAAEuB,QAAAA,QAAQ,EAAE;AAAZ,OAAnC;AAAA,8BACE,QAAC,WAAD;AAAA,gCACE;AACE,UAAA,SAAS,EAAEnB,OAAO,CAACR,GADrB;AAEE,UAAA,GAAG,EAAEyB,KAFP,CAGE;AAHF;AAIE,UAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,KAAnC;AAAA,oBACGD,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,gBARF,eAWE;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAAA,qBACGJ,KAAK,CAACK,MADT;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE,QAAC,WAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,OAAO,EAAE,MAAMpB,cAAc,CAACe,KAAK,CAACI,MAAP,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AACD,WAASE,aAAT,CAAuBN,KAAvB,EAA8B;AAC5B,wBACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEhB,OAAO,CAACJ,IAAzB;AAA+B,MAAA,EAAE,EAAE;AAAEuB,QAAAA,QAAQ,EAAE;AAAZ,OAAnC;AAAA,6BACE,QAAC,WAAD;AAAA,gCACA,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,KAAnC;AAAA,oBACKH,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA,gBADA,eAIE;AACE,UAAA,SAAS,EAAElB,OAAO,CAACR,GADrB;AAEE,UAAA,GAAG,EAAEwB,KAAK,CAACO,MAFb,CAGE;AAHF;AAIE,UAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,gBAJF,eAUE;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,KAAnC;AAAA,oBACGP,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,gBAXF,eAcE;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAAA,qBAA6BJ,KAAK,CAACK,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD,GA9IA,CAiJD;;;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAErB,OAAO,CAACtC,IAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEsC,OAAO,CAACV,KAAxB;AAAA,kBACGqB,QAAQ,CAAC,CAAD,CAAR,CAAYa,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBACf,QAAC,aAAD;AACE,UAAA,MAAM,EAAEf,QAAQ,CAAC,CAAD,CAAR,CAAYe,KAAZ,CADV;AAEE,UAAA,MAAM,EAAEA,KAAK,GAAG,CAFlB;AAGE,UAAA,MAAM,EAAEf,QAAQ,CAAC,CAAD,CAAR,CAAYe,KAAZ;AAHV;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE;AAAA;AAAA;AAAA;AAAA,cAXF,EAYGrB,QAAQ,CAACI,MAAT,GACCJ,QAAQ,CAAC,CAAD,CAAR,CAAYmB,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBACd;AAAK,QAAA,SAAS,EAAE1B,OAAO,CAACV,KAAxB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,SAAS,EAAEU,OAAO,CAAC1B,KAArC;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,OAAO,EAAC,IADV;AAEE,YAAA,YAAY,MAFd;AAGE,YAAA,KAAK,EAAC,aAHR;AAIE,YAAA,SAAS,EAAE0B,OAAO,CAACnB,MAJrB;AAAA,sBAMG6C,KAAK,GAAG;AANX;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,UAAD;AACE,YAAA,YAAY,MADd;AAEE,YAAA,KAAK,EAAC,aAFR;AAGE,YAAA,SAAS,EAAE1B,OAAO,CAACd,IAHrB;AAAA,sBAKGmB,QAAQ,CAAC,CAAD,CAAR,CAAYqB,KAAZ;AALH;AAAA;AAAA;AAAA;AAAA,kBATF,eAgBE,QAAC,UAAD;AACE,YAAA,YAAY,MADd;AAEE,YAAA,KAAK,EAAC,aAFR;AAGE,YAAA,SAAS,EAAE1B,OAAO,CAACb,KAHrB;AAAA,uBAKGkB,QAAQ,CAAC,CAAD,CAAR,CAAYqB,KAAZ,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAuBE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,OAAO,EAAE,MAAMzB,cAAc,CAACI,QAAQ,CAAC,CAAD,CAAR,CAAYqB,KAAZ,CAAD,CAF/B;AAGE,YAAA,SAAS,EAAE1B,OAAO,CAACX,KAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,CADD,gBAqCC;AAAA;AAAA;AAAA;AAAA,cAjDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuDE;AAAK,MAAA,SAAS,EAAEW,OAAO,CAACtC,IAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEsC,OAAO,CAACV,KAAxB;AAAA,kBACGsB,QAAQ,CAAC,CAAD,CAAR,CAAYY,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBACf,QAAC,aAAD;AACE,UAAA,MAAM,EAAEd,QAAQ,CAAC,CAAD,CAAR,CAAYc,KAAZ,CADV;AAEE,UAAA,MAAM,EAAEA,KAAK,GAAC,CAFhB;AAGE,UAAA,MAAM,EAAEd,QAAQ,CAAC,CAAD,CAAR,CAAYc,KAAZ,CAHV;AAIE,UAAA,MAAM,EAAEd,QAAQ,CAAC,CAAD,CAAR,CAAYc,KAAZ;AAJV;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,eAYE;AAAA;AAAA;AAAA;AAAA,cAZF,EAaGlB,QAAQ,CAACC,MAAT,GACCD,QAAQ,CAAC,CAAD,CAAR,CAAYgB,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBAChB;AAAK,QAAA,SAAS,EAAE1B,OAAO,CAACV,KAAxB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,SAAS,EAAEU,OAAO,CAAC1B,KAArC;AAAA,kCACE;AACE,YAAA,SAAS,EAAE0B,OAAO,CAACL,MADrB;AAEE,YAAA,GAAG,EAAEa,QAAQ,CAAC,CAAD,CAAR,CAAYkB,KAAZ,CAFP,CAGE;AAHF;AAIE,YAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,YAAY,MAArC;AAAsC,YAAA,KAAK,EAAC,aAA5C;AAA0D,YAAA,SAAS,EAAE1B,OAAO,CAACnB,MAA7E;AAAA,sBACC6C,KAAK,GAAC;AADP;AAAA;AAAA;AAAA;AAAA,kBAPF,eAUE,QAAC,UAAD;AAAY,YAAA,YAAY,MAAxB;AAAyB,YAAA,KAAK,EAAC,aAA/B;AAA6C,YAAA,SAAS,EAAE1B,OAAO,CAACd,IAAhE;AAAA,sBACCsB,QAAQ,CAAC,CAAD,CAAR,CAAYkB,KAAZ;AADD;AAAA;AAAA;AAAA;AAAA,kBAVF,eAaE,QAAC,UAAD;AAAY,YAAA,YAAY,MAAxB;AAAyB,YAAA,KAAK,EAAC,aAA/B;AAA6C,YAAA,SAAS,EAAE1B,OAAO,CAACb,KAAhE;AAAA,uBACCqB,QAAQ,CAAC,CAAD,CAAR,CAAYkB,KAAZ,CADD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,CADD,gBAuBD;AAAA;AAAA;AAAA;AAAA,cApCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmGD;;GA1PQ7B,W;UAYSrC,S;;;KAZTqC,W;;AA2PT,MAAM8B,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACL7B,IAAAA,WAAW,EAAE6B,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAqB/B,WAD7B;AAELD,IAAAA,WAAW,EAAE8B,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAqBhC;AAF7B,GAAP;AAID,CALD;;AAOA,MAAMiC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLjF,IAAAA,kBAAkB,EAAE,MAAM;AACxB,aAAOiF,QAAQ,CAACjF,kBAAkB,EAAnB,CAAf;AACD,KAHI;AAILD,IAAAA,kBAAkB,EAAE,MAAM;AACxB,aAAOkF,QAAQ,CAAClF,kBAAkB,EAAnB,CAAf;AACD;AANI,GAAP;AAQD,CATD;;AAUA,eAAeF,OAAO,CAAC+E,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClC,WAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { userRankingRequest, wordRankingRequest } from \"../redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  CardActions,\r\n  CardContent,\r\n  Card,\r\n  ButtonGroup\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    // width: '100%',\r\n    // maxWidth: '100ch',\r\n    maxheight: \"100\",\r\n    // backgroundColor: \"#3d3d3d\",\r\n    borderRadius: \"20px\",\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  paper: {\r\n    // padding: theme.spacing(2),\r\n    textAlign: \"left\",\r\n    fontWeight: \"900\",\r\n    marginBottom: \"10px\",\r\n    // height: '7ch',\r\n    // display: \"flex\",\r\n    borderRadius: \"20px\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n    borderTop: \"1px solid #D9D9D9\",\r\n\r\n    // borderBottom: \"1px solid #D9D9D9\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#63ccff\",\r\n    },\r\n  },\r\n  number: {\r\n    textAlign: \"right\",\r\n    fontWeight: \"600\",\r\n    width: \"35px\",\r\n    marginRight: \"100px\",\r\n    display: \"inline-block\",\r\n    fontFamily: \"BMHANNApro\",\r\n    fontSize: \"12px\",\r\n  },\r\n  word: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"900\",\r\n    marginRight: \"50px\",\r\n    display: \"inline-block\",\r\n    fontFamily: \"BMHANNAp\",\r\n    fontSize: \"20px\",\r\n  },\r\n  word2: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"900\",\r\n    marginLeft: \"100px\",\r\n    color: \"#6666FF\",\r\n    display: \"inline-block\",\r\n    fontFamily: \"BMHANNAp\",\r\n    fontSize: \"15px\",\r\n  },\r\n  word3: {\r\n    textAlign: \"right\",\r\n    fontWeight: \"400\",\r\n    marginLeft: \"100px\",\r\n    display: \"inline-block\",\r\n    fontFamily: \"BMHANNApro\",\r\n    fontSize: \"15px\",\r\n  },\r\n  cover: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  img: {\r\n    maxWidth: \"50px\",\r\n    height: \"auto\",\r\n    display: \"block\",\r\n    borderRadius: \"70%\",\r\n  },\r\n  subimg: {\r\n    display: \"inline-block\",\r\n    marginBottom: \"-7px\",\r\n    marginTop: \"5px\",\r\n    marginLeft: \"10px\",\r\n    maxWidth: \"25px\",\r\n    height: \"auto\",\r\n    borderRadius: \"70%\",\r\n  },\r\n  card: {\r\n    width: \"30%\",\r\n    maxWidth: \"200px\",\r\n    // backgroundColor: \"#ffff6c\",\r\n    \"&:hover\": {\r\n      // width: \"11%\",\r\n      // display: \"block\",\r\n      backgroundColor: \"#63ccff\",\r\n      // border: \"1px solid #6ca8a8\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction WordRanking({\r\n  userRanking,\r\n  userRankingRequest,\r\n  wordRanking,\r\n  wordRankingRequest,\r\n}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    wordRankingRequest();\r\n    userRankingRequest();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  // 단어페이지 이동 핸들러\r\n  const onClickOneWord = (word) => {\r\n    window.location.replace(`/Word/${word}`);\r\n  };\r\n\r\n  let wordlist = []; // wordranking데이터\r\n  let datalen = 0;\r\n  let datalen2 = 0;\r\n  let userlist = []; // userranking데이터\r\n\r\n  //데이터 복사 -> [0] : 단어,닉네임 [1] : 점수, [2] : 이미지\r\n  if (wordRanking && wordRanking.length > 0) {\r\n    wordlist.push(wordRanking[0][0]);\r\n    wordlist.push(wordRanking[1][0]);\r\n    datalen = wordlist[0].length;\r\n  }\r\n  if (userRanking && userRanking.length > 0) {\r\n    userlist.push(userRanking[0][0]);\r\n    userlist.push(userRanking[1][0]);\r\n    userlist.push(userRanking[2][0]);\r\n    datalen2 = userlist[0].length;\r\n  }\r\n\r\n\r\n\r\n  //top3로 분류\r\n  let top3word = [[], []];\r\n  let top3user = [[], [], []];\r\n\r\n  if (datalen > 2) {\r\n    top3word[0].push(wordlist[0][0]);\r\n    top3word[1].push(wordlist[1][0]);\r\n    top3word[0].push(wordlist[0][1]);\r\n    top3word[1].push(wordlist[1][1]);\r\n    top3word[0].push(wordlist[0][2]);\r\n    top3word[1].push(wordlist[1][2]);\r\n  } else if (datalen == 2) {\r\n    top3word[0].push(wordlist[0][0]);\r\n    top3word[1].push(wordlist[1][0]);\r\n    top3word[0].push(wordlist[0][1]);\r\n    top3word[1].push(wordlist[1][1]);\r\n  } else if (datalen == 1) {\r\n    top3word[0].push(wordlist[0][0]);\r\n    top3word[1].push(wordlist[1][0]);\r\n  }\r\n\r\n  if (datalen2 > 2) {\r\n    top3user[0].push(userlist[0][0]);\r\n    top3user[1].push(userlist[1][0]);\r\n    top3user[2].push(userlist[2][0]);\r\n    top3user[0].push(userlist[0][1]);\r\n    top3user[1].push(userlist[1][1]);\r\n    top3user[2].push(userlist[2][1]);\r\n    top3user[0].push(userlist[0][2]);\r\n    top3user[1].push(userlist[1][2]);\r\n    top3user[2].push(userlist[2][2]);\r\n  } else if (datalen2 == 2) {\r\n    top3user[0].push(userlist[0][0]);\r\n    top3user[1].push(userlist[1][0]);\r\n    top3user[2].push(userlist[2][0]);\r\n    top3user[0].push(userlist[0][1]);\r\n    top3user[1].push(userlist[1][1]);\r\n    top3user[2].push(userlist[2][1]);\r\n  } else if (datalen2 == 1) {\r\n    top3user[0].push(userlist[0][0]);\r\n    top3user[1].push(userlist[1][0]);\r\n    top3user[2].push(userlist[2][0]);\r\n  }\r\n\r\n  console.log(top3user);\r\n  console.log(top3word);\r\n  console.log(wordRanking);\r\n  console.log(userRanking);\r\n  console.log(wordlist);\r\n  console.log(userlist);\r\n\r\n\r\n\r\n\r\n\r\n  //top3표시하는 컴포넌트\r\n  function WordBasicCard(props) {\r\n    let image = \"rd-place.png\";\r\n    if (props.value2 === 1) image = \"st-place.png\";\r\n    else if (props.value2 === 2) image = \"nd-place.png\";\r\n    return (\r\n      <Card className={classes.card} sx={{ minWidth: 275 }}>\r\n        <CardContent>\r\n          <img\r\n            className={classes.img}\r\n            src={image}\r\n            // alt={'img'}\r\n            loading=\"lazy\"\r\n          />\r\n          <br></br>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {props.value1}\r\n          </Typography>\r\n          <br></br>\r\n          <Typography variant=\"body2\">\r\n            {props.value3} 명이 선택했어요!\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size=\"small\" onClick={() => onClickOneWord(props.value1)}>\r\n            단어 자세히 보기\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n  function UserBasicCard(props) {\r\n    return (\r\n      <Card className={classes.card} sx={{ minWidth: 275 }}>\r\n        <CardContent>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n            {props.value2}\r\n          </Typography>\r\n          <img\r\n            className={classes.img}\r\n            src={props.value4}\r\n            // alt={'img'}\r\n            loading=\"lazy\"\r\n          />\r\n          <br></br>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {props.value1}\r\n          </Typography>\r\n          <br></br>\r\n          <Typography variant=\"body2\">{props.value3} 점</Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <h3>단어랭킹</h3>\r\n        <div className={classes.cover}>\r\n          {top3word[0].map((item, index) => (\r\n            <WordBasicCard\r\n              value1={top3word[0][index]}\r\n              value2={index + 1}\r\n              value3={top3word[1][index]}\r\n            ></WordBasicCard>\r\n          ))}\r\n        </div>\r\n        <br></br>\r\n        {wordlist.length ? (\r\n          wordlist[0].map((item, index) => (\r\n            <div className={classes.cover}>\r\n              <Grid item xs={6} className={classes.paper}>\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  gutterBottom\r\n                  color=\"textPrimary\"\r\n                  className={classes.number}\r\n                >\r\n                  {index + 1}\r\n                </Typography>\r\n                <Typography\r\n                  gutterBottom\r\n                  color=\"textPrimary\"\r\n                  className={classes.word}\r\n                >\r\n                  {wordlist[0][index]}\r\n                </Typography>\r\n                <Typography\r\n                  gutterBottom\r\n                  color=\"textPrimary\"\r\n                  className={classes.word2}\r\n                >\r\n                  {wordlist[1][index]} 명이 선택했어요!\r\n                </Typography>\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={() => onClickOneWord(wordlist[0][index])}\r\n                  className={classes.word3}\r\n                >\r\n                  단어 자세히 보기\r\n                </Button>\r\n              </Grid>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n\r\n\r\n      <div className={classes.root}>\r\n        <h3>유저랭킹</h3>\r\n        <div className={classes.cover}>\r\n          {top3user[0].map((item, index) => (\r\n            <UserBasicCard\r\n              value1={top3user[0][index]}\r\n              value2={index+1} \r\n              value3={top3user[1][index]} \r\n              value4={top3user[2][index]}\r\n            ></UserBasicCard>                \r\n          ))}              \r\n        </div>\r\n        <br></br>\r\n        {userlist.length ? (\r\n          userlist[0].map((item, index) => (\r\n          <div className={classes.cover}>\r\n            <Grid item xs={6} className={classes.paper}>\r\n              <img\r\n                className={classes.subimg}\r\n                src={userlist[2][index]}\r\n                // alt={'img'}\r\n                loading=\"lazy\"\r\n              />\r\n              <Typography variant=\"h4\" gutterBottom color=\"textPrimary\" className={classes.number}>\r\n              {index+1}\r\n              </Typography>\r\n              <Typography gutterBottom color=\"textPrimary\" className={classes.word}>\r\n              {userlist[0][index]}\r\n              </Typography>\r\n              <Typography gutterBottom color=\"textPrimary\" className={classes.word2}>\r\n              {userlist[1][index]} 점\r\n              </Typography>\r\n            </Grid>\r\n          </div>\r\n          ))\r\n        ) : (\r\n        <div></div>\r\n        )}\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    wordRanking: state.ranking.status.wordRanking,\r\n    userRanking: state.ranking.status.userRanking,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    wordRankingRequest: () => {\r\n      return dispatch(wordRankingRequest());\r\n    },\r\n    userRankingRequest: () => {\r\n      return dispatch(userRankingRequest());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WordRanking);"]},"metadata":{},"sourceType":"module"}