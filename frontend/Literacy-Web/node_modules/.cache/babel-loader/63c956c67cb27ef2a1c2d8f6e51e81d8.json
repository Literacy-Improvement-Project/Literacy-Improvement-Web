{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jyeo\\\\Desktop\\\\project\\\\Literacy-Improvement-Project\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\MyPage\\\\MyDictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport { Typography, Card, CardActions, CardContent, Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n    // width: '100%',\n    // maxWidth: '100ch',\n    // height: \"42ch\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"20px\",\n    border: \"1px solid #D9D9D9\"\n  },\n  inline: {\n    display: \"inline\"\n  },\n  paper: {\n    //padding: theme.spacing(2),\n    textAlign: \"center\",\n    // height: '7ch',\n    color: theme.palette.text.secondary,\n    display: \"inline-block\",\n    borderBottom: \"1px solid #D9D9D9\",\n    width: \"40%\"\n  },\n  button: {\n    float: \"left\",\n    border: \"none\",\n    backgroundColor: \"white\",\n    borderRadius: \"5px\",\n    width: \"150px\",\n    height: \"2.5rem\",\n    fontSize: \"1.5rem\",\n    fontWeight: \"400\",\n    textAlign: \"left\"\n  },\n  deletebutton: {\n    float: \"right\",\n    border: \"none\",\n    width: \"3rem\",\n    height: \"2rem\",\n    borderRadius: \"5px\",\n    color: \"white\",\n    fontSize: \"0.85rem\",\n    fontWeight: \"400\",\n    opacity: \"0.6\",\n    backgroundColor: \"#FF0101\"\n  },\n  test: {\n    border: \"1px solid #D9D9D9\"\n  }\n}));\nexport default function MyDictionary({\n  dictionaryWordsList,\n  handleDelete\n}) {\n  _s();\n\n  useEffect(() => {// 렌더링\n  }, []);\n  let wordName = [];\n  let wordForDelete = \"\";\n  const itemLoad = dictionaryWordsList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: wordName.push(item)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this));\n  const classes = useStyles();\n\n  const wordDelete = word => {\n    handleDelete(word);\n  };\n\n  console.log(wordName);\n  let ttt = [\"김정원\", \"김태식\", \"김또깡\"];\n  const myWordList = ttt.map((word, index) => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 6,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: \"Word of the Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: \"be nev lent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.pos,\n          color: \"textSecondary\",\n          children: \"adjective\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"p\",\n          children: [\"well meaning and kindly.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), '\"a benevolent smile\"']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          children: \"Learn More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this)); // 사용자에게 보여지는 부분\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3 // direction=\"column\"\n      ,\n      justifyContent: \"center\",\n      alignItems: \"flex-start\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uB0B4 \\uB2E8\\uC5B4\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), myWordList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n} //props 내용물 설정되면 출력형식 바꿔야함\n\n_s(MyDictionary, \"v7TDUGheAkBmKIQo9Gj65jeexyQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = MyDictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyDictionary\");","map":{"version":3,"sources":["C:/Users/Jyeo/Desktop/project/Literacy-Improvement-Project/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/MyPage/MyDictionary.js"],"names":["React","useEffect","makeStyles","Grid","Link","Typography","Card","CardActions","CardContent","Button","useStyles","theme","root","paddingTop","spacing","paddingLeft","paddingRight","paddingBottom","backgroundColor","palette","background","paper","borderRadius","border","inline","display","textAlign","color","text","secondary","borderBottom","width","button","float","height","fontSize","fontWeight","deletebutton","opacity","test","MyDictionary","dictionaryWordsList","handleDelete","wordName","wordForDelete","itemLoad","map","item","index","push","classes","wordDelete","word","console","log","ttt","myWordList","card","title","pos"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Card, CardActions, CardContent, Button } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n    // width: '100%',\r\n    // maxWidth: '100ch',\r\n    // height: \"42ch\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: \"20px\",\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  paper: {\r\n    //padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    // height: '7ch',\r\n    color: theme.palette.text.secondary,\r\n    display: \"inline-block\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n    width: \"40%\"\r\n  },\r\n  button: {\r\n    float: \"left\",\r\n    border: \"none\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"5px\",\r\n    width: \"150px\",\r\n    height: \"2.5rem\",\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: \"400\",\r\n    textAlign: \"left\",\r\n  },\r\n  deletebutton: {\r\n    float: \"right\",\r\n    border: \"none\",\r\n    width: \"3rem\",\r\n    height: \"2rem\",\r\n    borderRadius: \"5px\",\r\n    color: \"white\",\r\n    fontSize: \"0.85rem\",\r\n    fontWeight: \"400\",\r\n    opacity: \"0.6\",\r\n\r\n    backgroundColor: \"#FF0101\",\r\n  },\r\n  test: {\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n}));\r\n\r\nexport default function MyDictionary({ dictionaryWordsList, handleDelete }) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n\r\n  let wordName = [];\r\n  let wordForDelete = \"\";\r\n  const itemLoad = dictionaryWordsList.map((item, index) => (\r\n    <div key={index}>{wordName.push(item)}</div>\r\n  ));\r\n  const classes = useStyles();\r\n\r\n  const wordDelete = (word) => {\r\n    handleDelete(word);\r\n  };\r\n\r\n  console.log(wordName);\r\n  let ttt = [\"김정원\", \"김태식\", \"김또깡\"]\r\n  const myWordList = ttt.map((word, index) => (\r\n    <Grid item key={index} xs={6} >\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n            Word of the Day\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            be\r\n            nev\r\n            lent\r\n          </Typography>\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            adjective\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            well meaning and kindly.\r\n            <br />\r\n            {'\"a benevolent smile\"'}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size=\"small\">Learn More</Button>\r\n        </CardActions>\r\n      </Card>\r\n      {/* <Link to={`/Word/${ttt[index]}`}>\r\n        <button className={classes.button}>{ttt[index]}</button>\r\n      </Link>\r\n      <Button\r\n        className={classes.deletebutton}\r\n        onClick={() => wordDelete(ttt[index])}\r\n      >\r\n        삭제\r\n      </Button> */}\r\n    </Grid>\r\n  ));\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        // direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <h3>\r\n            내 단어장\r\n          </h3>\r\n        </Grid>\r\n        {myWordList}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n//props 내용물 설정되면 출력형식 바꿔야함\r\n"]},"metadata":{},"sourceType":"module"}