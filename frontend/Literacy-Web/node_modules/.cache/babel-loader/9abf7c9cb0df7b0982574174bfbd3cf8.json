{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\login\\\\OAuthRedirectHandler.js\",\n    _s = $RefreshSig$();\n\n// 리다이렉트될 화면\n// OAuthRedirectHandeler.js\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { kakaoAuthRequest } from \"../../redux\";\nimport { useHistory } from \"react-router\"; //import Spinner from \"./Spinner\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OAuthRedirectHandler({\n  kakaoAuthRequest,\n  isLoggedIn\n}) {\n  _s();\n\n  const history = useHistory();\n  useEffect(async () => {\n    await kakaoAuthRequest(code);\n  }, []); // 인가코드\n\n  let code = new URL(window.location.href).searchParams.get(\"code\");\n  console.log(code);\n\n  if (isLoggedIn === true) {\n    // 카카오 로그인 되면\n    history.push(\"/Home\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hello kakao\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n\n_s(OAuthRedirectHandler, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = OAuthRedirectHandler;\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.kakaoAuth.status.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    kakaoAuthRequest: code => {\n      return dispatch(kakaoAuthRequest(code));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OAuthRedirectHandler);\n\nvar _c;\n\n$RefreshReg$(_c, \"OAuthRedirectHandler\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/login/OAuthRedirectHandler.js"],"names":["React","useEffect","useState","connect","useSelector","useDispatch","kakaoAuthRequest","useHistory","OAuthRedirectHandler","isLoggedIn","history","code","URL","window","location","href","searchParams","get","console","log","push","mapStateToProps","state","kakaoAuth","status","mapDispatchToProps","dispatch"],"mappings":";;;AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;;;;AAEA,SAASC,oBAAT,CAA8B;AAAEF,EAAAA,gBAAF;AAAoBG,EAAAA;AAApB,CAA9B,EAAgE;AAAA;;AAC9D,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AAEAN,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMK,gBAAgB,CAACK,IAAD,CAAtB;AACD,GAFQ,EAEN,EAFM,CAAT,CAH8D,CAO9D;;AACA,MAAIA,IAAI,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,QAAP,CAAgBC,IAAxB,EAA8BC,YAA9B,CAA2CC,GAA3C,CAA+C,MAA/C,CAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;;AAEA,MAAIF,UAAU,KAAK,IAAnB,EAAyB;AACvB;AACAC,IAAAA,OAAO,CAACU,IAAR,CAAa,OAAb;AACD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAjBQZ,oB;UACSD,U;;;KADTC,oB;;AAmBT,MAAMa,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLb,IAAAA,UAAU,EAAEa,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBf;AAD9B,GAAP;AAGD,CAJD;;AAMA,MAAMgB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLpB,IAAAA,gBAAgB,EAAGK,IAAD,IAAU;AAC1B,aAAOe,QAAQ,CAACpB,gBAAgB,CAACK,IAAD,CAAjB,CAAf;AACD;AAHI,GAAP;AAKD,CAND;;AAOA,eAAeR,OAAO,CACpBkB,eADoB,EAEpBI,kBAFoB,CAAP,CAGbjB,oBAHa,CAAf","sourcesContent":["// 리다이렉트될 화면\r\n// OAuthRedirectHandeler.js\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { kakaoAuthRequest } from \"../../redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n//import Spinner from \"./Spinner\";\r\n\r\nfunction OAuthRedirectHandler({ kakaoAuthRequest, isLoggedIn }) {\r\n  const history = useHistory();\r\n\r\n  useEffect(async () => {\r\n    await kakaoAuthRequest(code);\r\n  }, []);\r\n\r\n  // 인가코드\r\n  let code = new URL(window.location.href).searchParams.get(\"code\");\r\n  console.log(code);\r\n\r\n  if (isLoggedIn === true) {\r\n    // 카카오 로그인 되면\r\n    history.push(\"/Home\");\r\n  }\r\n\r\n  return <div>hello kakao</div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.kakaoAuth.status.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    kakaoAuthRequest: (code) => {\r\n      return dispatch(kakaoAuthRequest(code));\r\n    },\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(OAuthRedirectHandler);\r\n"]},"metadata":{},"sourceType":"module"}