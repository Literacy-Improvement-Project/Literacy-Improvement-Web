{"ast":null,"code":"import axios from \"axios\";\nimport { KAKAO_AUTHORIZE, KAKAO_AUTHORIZE_SUCCESS, KAKAO_AUTHORIZE_FAILURE } from \"./types\";\n/* KAKAO AUTH */\n\nexport function kakaoAuthRequest(code) {\n  return dispatch => {\n    // Inform Login API is starting\n    dispatch(kakaoAuth()); // API REQUEST\n\n    return axios.get(\"http://localhost:8080/kakaoAuth/\", {\n      params: {\n        code: code\n      }\n    }).then(response => {\n      // SUCCEED\n      dispatch(kakaoAuthSuccess(response.data)); // 성공해서 토큰 받으면 저장해주기\n\n      console.log(response.data);\n    }).catch(error => {\n      // FAILED\n      dispatch(kakaoAuthFailure());\n    });\n  };\n}\nexport function kakaoAuth() {\n  return {\n    type: KAKAO_AUTHORIZE\n  };\n}\nexport function kakaoAuthSuccess() {\n  return {\n    type: KAKAO_AUTHORIZE_SUCCESS\n  };\n}\nexport function kakaoAuthFailure() {\n  return {\n    type: KAKAO_AUTHORIZE_FAILURE\n  };\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/redux/kakaoAuth/actions.js"],"names":["axios","KAKAO_AUTHORIZE","KAKAO_AUTHORIZE_SUCCESS","KAKAO_AUTHORIZE_FAILURE","kakaoAuthRequest","code","dispatch","kakaoAuth","get","params","then","response","kakaoAuthSuccess","data","console","log","catch","error","kakaoAuthFailure","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,eADF,EAEEC,uBAFF,EAGEC,uBAHF,QAIO,SAJP;AAMA;;AACA,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AACrC,SAAQC,QAAD,IAAc;AACnB;AACAA,IAAAA,QAAQ,CAACC,SAAS,EAAV,CAAR,CAFmB,CAInB;;AACA,WAAOP,KAAK,CACTQ,GADI,CACA,kCADA,EACoC;AACvCC,MAAAA,MAAM,EAAE;AACNJ,QAAAA,IAAI,EAAEA;AADA;AAD+B,KADpC,EAMJK,IANI,CAMEC,QAAD,IAAc;AAClB;AACAL,MAAAA,QAAQ,CAACM,gBAAgB,CAACD,QAAQ,CAACE,IAAV,CAAjB,CAAR,CAFkB,CAGlB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACD,KAXI,EAYJG,KAZI,CAYGC,KAAD,IAAW;AAChB;AACAX,MAAAA,QAAQ,CAACY,gBAAgB,EAAjB,CAAR;AACD,KAfI,CAAP;AAgBD,GArBD;AAsBD;AAED,OAAO,SAASX,SAAT,GAAqB;AAC1B,SAAO;AACLY,IAAAA,IAAI,EAAElB;AADD,GAAP;AAGD;AAED,OAAO,SAASW,gBAAT,GAA4B;AACjC,SAAO;AACLO,IAAAA,IAAI,EAAEjB;AADD,GAAP;AAGD;AAED,OAAO,SAASgB,gBAAT,GAA4B;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEhB;AADD,GAAP;AAGD","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  KAKAO_AUTHORIZE,\r\n  KAKAO_AUTHORIZE_SUCCESS,\r\n  KAKAO_AUTHORIZE_FAILURE,\r\n} from \"./types\";\r\n\r\n/* KAKAO AUTH */\r\nexport function kakaoAuthRequest(code) {\r\n  return (dispatch) => {\r\n    // Inform Login API is starting\r\n    dispatch(kakaoAuth());\r\n\r\n    // API REQUEST\r\n    return axios\r\n      .get(\"http://localhost:8080/kakaoAuth/\", {\r\n        params: {\r\n          code: code,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        // SUCCEED\r\n        dispatch(kakaoAuthSuccess(response.data));\r\n        // 성공해서 토큰 받으면 저장해주기\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        // FAILED\r\n        dispatch(kakaoAuthFailure());\r\n      });\r\n  };\r\n}\r\n\r\nexport function kakaoAuth() {\r\n  return {\r\n    type: KAKAO_AUTHORIZE,\r\n  };\r\n}\r\n\r\nexport function kakaoAuthSuccess() {\r\n  return {\r\n    type: KAKAO_AUTHORIZE_SUCCESS,\r\n  };\r\n}\r\n\r\nexport function kakaoAuthFailure() {\r\n  return {\r\n    type: KAKAO_AUTHORIZE_FAILURE,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}