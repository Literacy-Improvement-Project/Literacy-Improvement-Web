{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\WordMeaning\\\\MainWordMeaning.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport \"./MainWordMeaning.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport { useSpeechRecognition } from \"react-speech-kit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainWordMeaning({\n  handleMorpheme,\n  item\n}) {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n  const [searchBox, setSearchBox] = useState(\"\"); // 음성인식\n\n  const [value, setValue] = useState(\"\");\n  const {\n    listen,\n    listening,\n    stop\n  } = useSpeechRecognition({\n    onResult: result => {\n      // 음성인식 결과가 value 상태값으로 할당됩니다.\n      setValue(result);\n    }\n  });\n\n  const handleChange = ({\n    target\n  }) => {\n    setSearchBox(target.value);\n  };\n\n  const checkMorpheme = e => {\n    handleMorpheme(searchBox);\n    setChecked(true);\n  };\n\n  const morpheme = {\n    pos: [],\n    name: []\n  };\n\n  const morphemeLoad = () => {\n    for (let i = 0; i < item.length; i++) {\n      if (i % 2 == 0) {\n        morpheme.pos.push(item[i]);\n      } else {\n        morpheme.name.push(item[i]);\n      }\n    }\n  };\n\n  morphemeLoad();\n\n  const searchPage = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputs\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" \\uBB38\\uC7A5 / \\uB2E8\\uC5B4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: \"search\",\n      id: \"filled-basic\",\n      label: \"\\uC6D0\\uD558\\uB294 \\uB2E8\\uC5B4\\uB098 \\uBB38\\uC7A5\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n      value: searchBox,\n      autoFocus: true,\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: checkMorpheme,\n      variant: \"contained\",\n      children: \"\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onMouseDown: () => listen({\n        interimResults: false\n      }),\n      onMouseUp: stop,\n      children: \"\\uD83C\\uDFA4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), listening && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uC74C\\uC131\\uC778\\uC2DD \\uD65C\\uC131\\uD654 \\uC911\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n\n  const searchSuccess = morpheme.pos.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        margineft: 10\n      },\n      children: [\"[\", morpheme.pos[index], \"] \", morpheme.name[index]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/Word/${morpheme.name[index]}`,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        children: \"\\uB354 \\uC54C\\uC544\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \" \\uC774\\uAC74 \\uBB34\\uC2A8 \\uB73B\\uC774\\uC9C0? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: searchPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: !checked ? null : searchSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainWordMeaning, \"xNcwiRE4q8tAqlLZXL8qR6HgV2s=\", false, function () {\n  return [useSpeechRecognition];\n});\n\n_c = MainWordMeaning;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainWordMeaning\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/WordMeaning/MainWordMeaning.js"],"names":["React","useState","Button","TextField","Grid","Link","useSpeechRecognition","MainWordMeaning","handleMorpheme","item","checked","setChecked","searchBox","setSearchBox","value","setValue","listen","listening","stop","onResult","result","handleChange","target","checkMorpheme","e","morpheme","pos","name","morphemeLoad","i","length","push","searchPage","interimResults","searchSuccess","map","index","margineft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,mBAAlC;AACA,OAAO,uBAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,oBAAT,QAAqC,kBAArC;;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAzB,EAAmD;AAAA;;AAChE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C,CAFgE,CAGhE;;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEe,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA;AAArB,MAA8BZ,oBAAoB,CAAC;AACvDa,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpB;AACAL,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACD;AAJsD,GAAD,CAAxD;;AAOA,QAAMC,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACnCT,IAAAA,YAAY,CAACS,MAAM,CAACR,KAAR,CAAZ;AACD,GAFD;;AAIA,QAAMS,aAAa,GAAIC,CAAD,IAAO;AAC3BhB,IAAAA,cAAc,CAACI,SAAD,CAAd;AACAD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHD;;AAKA,QAAMc,QAAQ,GAAG;AACfC,IAAAA,GAAG,EAAE,EADU;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAAjB;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACzB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,IAAI,CAACqB,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,UAAIA,CAAC,GAAG,CAAJ,IAAS,CAAb,EAAgB;AACdJ,QAAAA,QAAQ,CAACC,GAAT,CAAaK,IAAb,CAAkBtB,IAAI,CAACoB,CAAD,CAAtB;AACD,OAFD,MAEO;AACLJ,QAAAA,QAAQ,CAACE,IAAT,CAAcI,IAAd,CAAmBtB,IAAI,CAACoB,CAAD,CAAvB;AACD;AACF;AACF,GARD;;AASAD,EAAAA,YAAY;;AACZ,QAAMI,UAAU,gBACd;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,EAAE,EAAC,cAFL;AAGE,MAAA,KAAK,EAAC,iGAHR;AAIE,MAAA,KAAK,EAAEpB,SAJT;AAKE,MAAA,SAAS,MALX;AAME,MAAA,QAAQ,EAAGY,CAAD,IAAOH,YAAY,CAACG,CAAD;AAN/B;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAED,aAAjC;AAAgD,MAAA,OAAO,EAAC,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAaE;AAAA,gBAAMT;AAAN;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,WAAW,EAAE,MAAME,MAAM,CAAC;AAAEiB,QAAAA,cAAc,EAAE;AAAlB,OAAD,CAF3B;AAGE,MAAA,SAAS,EAAEf,IAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,EAqBGD,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAyBA,QAAMiB,aAAa,GAAGT,QAAQ,CAACC,GAAT,CAAaS,GAAb,CAAiB,CAAC1B,IAAD,EAAO2B,KAAP,kBACrC;AAAA,4BACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA,sBACIZ,QAAQ,CAACC,GAAT,CAAaU,KAAb,CADJ,QAC2BX,QAAQ,CAACE,IAAT,CAAcS,KAAd,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,SAAQX,QAAQ,CAACE,IAAT,CAAcS,KAAd,CAAqB,EAAxC;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,KAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,kBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,kBACG,CAACtB,OAAD,GAAW,IAAX,GAAkBwB;AADrB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAvFuB3B,e;UAKcD,oB;;;KALdC,e","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport \"./MainWordMeaning.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSpeechRecognition } from \"react-speech-kit\";\r\n\r\nexport default function MainWordMeaning({ handleMorpheme, item }) {\r\n  const [checked, setChecked] = useState(false);\r\n  const [searchBox, setSearchBox] = useState(\"\");\r\n  // 음성인식\r\n  const [value, setValue] = useState(\"\");\r\n  const { listen, listening, stop } = useSpeechRecognition({\r\n    onResult: (result) => {\r\n      // 음성인식 결과가 value 상태값으로 할당됩니다.\r\n      setValue(result);\r\n    },\r\n  });\r\n\r\n  const handleChange = ({ target }) => {\r\n    setSearchBox(target.value);\r\n  };\r\n\r\n  const checkMorpheme = (e) => {\r\n    handleMorpheme(searchBox);\r\n    setChecked(true);\r\n  };\r\n\r\n  const morpheme = {\r\n    pos: [],\r\n    name: [],\r\n  };\r\n\r\n  const morphemeLoad = () => {\r\n    for (let i = 0; i < item.length; i++) {\r\n      if (i % 2 == 0) {\r\n        morpheme.pos.push(item[i]);\r\n      } else {\r\n        morpheme.name.push(item[i]);\r\n      }\r\n    }\r\n  };\r\n  morphemeLoad();\r\n  const searchPage = (\r\n    <div className=\"inputs\">\r\n      <div> 문장 / 단어</div>\r\n      <TextField\r\n        className=\"search\"\r\n        id=\"filled-basic\"\r\n        label=\"원하는 단어나 문장을 입력해 주세요.\"\r\n        value={searchBox}\r\n        autoFocus\r\n        onChange={(e) => handleChange(e)}\r\n      />\r\n      <Button color=\"primary\" onClick={checkMorpheme} variant=\"contained\">\r\n        검색\r\n      </Button>\r\n      <div>{value}</div>\r\n      <Button\r\n        variant=\"contained\"\r\n        onMouseDown={() => listen({ interimResults: false })}\r\n        onMouseUp={stop}\r\n      >\r\n        🎤\r\n      </Button>\r\n      {listening && <div>음성인식 활성화 중</div>}\r\n    </div>\r\n  );\r\n  const searchSuccess = morpheme.pos.map((item, index) => (\r\n    <div key={index}>\r\n      <h2 style={{ margineft: 10 }}>\r\n        [{morpheme.pos[index]}] {morpheme.name[index]}\r\n      </h2>\r\n      <Link to={`/Word/${morpheme.name[index]}`}>\r\n        <Button color=\"primary\" variant=\"contained\">\r\n          더 알아보기\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h3 className=\"title\"> 이건 무슨 뜻이지? </h3>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          {searchPage}\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          {!checked ? null : searchSuccess}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}