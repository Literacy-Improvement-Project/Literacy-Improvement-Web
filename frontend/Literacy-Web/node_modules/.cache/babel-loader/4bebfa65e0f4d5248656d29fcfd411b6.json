{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\quiz\\\\QuizItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Button, Grid, Typography } from '@mui/material';\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./quiz.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuizItem({\n  quizList,\n  quizTemp,\n  maxNumQuiz,\n  postQuizResult\n}) {\n  _s();\n\n  // const [quizCorrectCount, setQuizCorrectCount] = useState(0)\n  // const [quizWrongCount, setQuizWrongCount] = useState(0)\n  let quizCorrectCount = 0;\n  let quizWrongCount = 0;\n  const quizContent = useRef(null); // carousel slider\n\n  const showing_class = \"showing\";\n  const firstQuiz = document.querySelector(\".quiz-multiple:first-child\");\n\n  function slide() {\n    const currentSlide = document.querySelector(`.${showing_class}`);\n\n    if (currentSlide) {\n      currentSlide.classList.remove(showing_class);\n      const nextSlide = currentSlide.nextElementSibling;\n\n      if (nextSlide) {\n        nextSlide.classList.add(showing_class);\n      } else {\n        firstQuiz.classList.add(showing_class);\n      }\n    } else {\n      console.log(firstQuiz);\n      firstQuiz.classList.add(showing_class);\n    }\n  }\n\n  const gotoSummary = () => {\n    const summary = {\n      numberOfQuestions: maxNumQuiz,\n      numberOfCorrect: quizCorrectCount,\n      numberOfWrong: quizWrongCount,\n      quizList: quizList\n    };\n    console.log(\"postQuizResult\");\n    postQuizResult(quizCorrectCount); // setTimeout(() => {\n    //   history.push({\n    //     pathname: \"/Summary\",\n    //     state: summary,\n    //   });\n    // }, 1000);\n  }; // toast Alert (answer/wrong)\n\n\n  const toastAnswer = () => toast(\"정답입니다!\");\n\n  const toastWrong = () => toast.error(\"틀렸습니다!\");\n\n  const handleClickSelect = (select, index) => {\n    slide(); // Check Answer & get score\n\n    if (select === quizList[index].word_mean) {\n      //setQuizCorrectCount(quizCorrectCount + 1)\n      quizCorrectCount += 1;\n      toastAnswer();\n    } else {\n      // setQuizWrongCount(quizWrongCount + 1)\n      quizWrongCount += 1;\n      toastWrong();\n    }\n\n    console.log(quizCorrectCount + quizWrongCount); // Check LastQuiz\n\n    if (quizCorrectCount + quizWrongCount === maxNumQuiz) {\n      gotoSummary();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [quizList.map((quiz, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-multiple\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        ref: quizContent,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: [index + 1, \" of \", maxNumQuiz]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"quiz-question-sub\",\n            children: \"\\uC54C\\uB9DE\\uC740 \\uB73B\\uC744 \\uACE0\\uB974\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"quiz-question\",\n            children: quiz.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"multiple-answer-list\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"multiple-answer-item\",\n              onClick: () => {\n                handleClickSelect(quizTemp[index][0], index);\n              },\n              variant: \"outlined\",\n              children: quizTemp[index][0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"multiple-answer-item\",\n              onClick: () => {\n                handleClickSelect(quizTemp[index][1], index);\n              },\n              variant: \"outlined\",\n              children: quizTemp[index][1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"multiple-answer-item\",\n              onClick: () => {\n                handleClickSelect(quizTemp[index][2], index);\n              },\n              variant: \"outlined\",\n              children: quizTemp[index][2]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"multiple-answer-item\",\n              onClick: () => {\n                handleClickSelect(quizTemp[index][3], index);\n              },\n              variant: \"outlined\",\n              children: quizTemp[index][3]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      transition: Flip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizItem, \"qYwz0CJxwLNv2KfE89VzRieieo0=\");\n\n_c = QuizItem;\nQuizItem.defaultProps = {\n  quizList: [],\n  quizTemp: [],\n  maxNumQuiz: 0\n};\nexport default QuizItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizItem\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/quiz/QuizItem.js"],"names":["React","useEffect","useState","useRef","useSelector","Button","Grid","Typography","ToastContainer","toast","Flip","QuizItem","quizList","quizTemp","maxNumQuiz","postQuizResult","quizCorrectCount","quizWrongCount","quizContent","showing_class","firstQuiz","document","querySelector","slide","currentSlide","classList","remove","nextSlide","nextElementSibling","add","console","log","gotoSummary","summary","numberOfQuestions","numberOfCorrect","numberOfWrong","toastAnswer","toastWrong","error","handleClickSelect","select","index","word_mean","map","quiz","word","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Button, Grid, Typography  } from '@mui/material';\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./quiz.css\";\r\n\r\n\r\nfunction QuizItem({quizList, quizTemp, maxNumQuiz, postQuizResult}) {\r\n\r\n  // const [quizCorrectCount, setQuizCorrectCount] = useState(0)\r\n  // const [quizWrongCount, setQuizWrongCount] = useState(0)\r\n  let quizCorrectCount = 0;\r\n  let quizWrongCount = 0;\r\n\r\n  const quizContent = useRef(null);\r\n\r\n  \r\n  // carousel slider\r\n  const showing_class = \"showing\";\r\n  const firstQuiz = document.querySelector(\".quiz-multiple:first-child\");\r\n\r\n  function slide() {\r\n    const currentSlide = document.querySelector(`.${showing_class}`);\r\n    if (currentSlide) {\r\n      currentSlide.classList.remove(showing_class);\r\n      const nextSlide = currentSlide.nextElementSibling;\r\n      if (nextSlide) {\r\n        nextSlide.classList.add(showing_class);\r\n      } else {\r\n        firstQuiz.classList.add(showing_class);\r\n      }\r\n    } else {\r\n      console.log(firstQuiz)\r\n      firstQuiz.classList.add(showing_class);\r\n    }\r\n  }\r\n\r\n  const gotoSummary = () => {\r\n    const summary = {\r\n      numberOfQuestions: maxNumQuiz,\r\n      numberOfCorrect: quizCorrectCount,\r\n      numberOfWrong: quizWrongCount,\r\n      quizList: quizList,\r\n    };\r\n    console.log(\"postQuizResult\")\r\n    postQuizResult(quizCorrectCount);\r\n    // setTimeout(() => {\r\n    //   history.push({\r\n    //     pathname: \"/Summary\",\r\n    //     state: summary,\r\n    //   });\r\n    // }, 1000);\r\n  }\r\n\r\n  // toast Alert (answer/wrong)\r\n  const toastAnswer = () => toast(\"정답입니다!\");\r\n  const toastWrong = () => toast.error(\"틀렸습니다!\");\r\n\r\n\r\n  const handleClickSelect = (select, index) => {\r\n    slide();\r\n    // Check Answer & get score\r\n    if (select === quizList[index].word_mean) {\r\n      //setQuizCorrectCount(quizCorrectCount + 1)\r\n      quizCorrectCount+=1\r\n      toastAnswer()\r\n    }\r\n    else {\r\n      // setQuizWrongCount(quizWrongCount + 1)\r\n      quizWrongCount+=1\r\n      toastWrong()\r\n    }\r\n    console.log(quizCorrectCount+quizWrongCount)\r\n    // Check LastQuiz\r\n    if (quizCorrectCount+quizWrongCount === maxNumQuiz){\r\n      gotoSummary()\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        quizList.map((quiz, index) => (\r\n          <div className=\"quiz-multiple\">\r\n              <Grid\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            ref={quizContent}\r\n            >\r\n              <Grid item>\r\n                <Typography>{index+1} of {maxNumQuiz}</Typography>\r\n                <h2 className=\"quiz-question-sub\">알맞은 뜻을 고르세요</h2>\r\n                <strong className=\"quiz-question\">{quiz.word}</strong>\r\n                <div className=\"multiple-answer-list\">\r\n                  <Button \r\n                    className=\"multiple-answer-item\" \r\n                    onClick={() => {handleClickSelect(quizTemp[index][0], index);}} \r\n                    variant=\"outlined\">{quizTemp[index][0]}\r\n                  </Button>\r\n                  <Button \r\n                    className=\"multiple-answer-item\" \r\n                    onClick={() => {handleClickSelect(quizTemp[index][1], index);}} \r\n                    variant=\"outlined\">{quizTemp[index][1]}\r\n                  </Button>\r\n                  <Button \r\n                    className=\"multiple-answer-item\" \r\n                    onClick={() => {handleClickSelect(quizTemp[index][2], index);}} \r\n                    variant=\"outlined\">{quizTemp[index][2]}\r\n                  </Button>\r\n                  <Button \r\n                    className=\"multiple-answer-item\" \r\n                    onClick={() => {handleClickSelect(quizTemp[index][3], index);}} \r\n                    variant=\"outlined\">{quizTemp[index][3]}\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            </div>\r\n        ))\r\n      }\r\n\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nQuizItem.defaultProps = {\r\n  quizList: [],\r\n  quizTemp: [],\r\n  maxNumQuiz: 0,\r\n}\r\n\r\nexport default QuizItem;"]},"metadata":{},"sourceType":"module"}