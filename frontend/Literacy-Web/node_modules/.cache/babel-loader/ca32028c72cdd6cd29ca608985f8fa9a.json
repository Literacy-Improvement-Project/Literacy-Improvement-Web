{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\quiz\\\\QuizItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Grid, Typography } from '@mui/material';\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./quiz.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuizItem({\n  quizList,\n  quizTemp,\n  maxNumQuiz,\n  postQuizResult,\n  quizSummaryUpdate\n}) {\n  _s();\n\n  let history = useHistory();\n  const [quizCorrectCount, setQuizCorrectCount] = useState(0);\n  const [quizWrongCount, setQuizWrongCount] = useState(0); //let quizCorrectCount = 0;\n  //let quizWrongCount = 0;\n\n  const [currentQuiz, setCurrentQuiz] = useState(0);\n\n  const gotoSummary = () => {\n    const summary = {\n      numberOfQuestions: maxNumQuiz,\n      numberOfCorrect: quizCorrectCount,\n      numberOfWrong: quizWrongCount,\n      quizList: quizList\n    };\n    console.log(summary);\n    postQuizResult(quizCorrectCount);\n    quizSummaryUpdate(summary);\n    history.push('/Summary');\n  }; // toast Alert (answer/wrong)\n\n\n  const toastAnswer = () => toast(\"정답입니다!\");\n\n  const toastWrong = () => toast.error(\"틀렸습니다!\");\n\n  const handleClickSelect = (select, index) => {\n    // Check Answer & get score\n    if (select === quizList[index].word_mean) {\n      setQuizCorrectCount(quizCorrectCount + 1);\n      toastAnswer();\n    } else {\n      setQuizWrongCount(quizWrongCount + 1);\n      toastWrong();\n    }\n\n    setCurrentQuiz(currentQuiz + 1);\n  }; // Check LastQuiz\n\n\n  if (quizCorrectCount + quizWrongCount === maxNumQuiz) {\n    gotoSummary();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [quizList.map((quiz, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: index === currentQuiz ? 'quiz-slide active' : 'quiz-slide',\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: [index + 1, \" of \", maxNumQuiz]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"quiz-question-sub\",\n              children: \"\\uC54C\\uB9DE\\uC740 \\uB73B\\uC744 \\uACE0\\uB974\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"quiz-question\",\n              children: quiz.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"multiple-answer-list\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"multiple-answer-item\",\n                onClick: () => {\n                  handleClickSelect(quizTemp[index][0], index);\n                },\n                variant: \"outlined\",\n                children: quizTemp[index][0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"multiple-answer-item\",\n                onClick: () => {\n                  handleClickSelect(quizTemp[index][1], index);\n                },\n                variant: \"outlined\",\n                children: quizTemp[index][1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"multiple-answer-item\",\n                onClick: () => {\n                  handleClickSelect(quizTemp[index][2], index);\n                },\n                variant: \"outlined\",\n                children: quizTemp[index][2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"multiple-answer-item\",\n                onClick: () => {\n                  handleClickSelect(quizTemp[index][3], index);\n                },\n                variant: \"outlined\",\n                children: quizTemp[index][3]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      transition: Flip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizItem, \"1VFNRlZjbFSk+9OdEAr3knyvo2E=\", false, function () {\n  return [useHistory];\n});\n\n_c = QuizItem;\nQuizItem.defaultProps = {\n  quizList: [],\n  quizTemp: [],\n  maxNumQuiz: 0\n};\nexport default QuizItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizItem\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/quiz/QuizItem.js"],"names":["React","useEffect","useState","useHistory","Button","Grid","Typography","ToastContainer","toast","Flip","QuizItem","quizList","quizTemp","maxNumQuiz","postQuizResult","quizSummaryUpdate","history","quizCorrectCount","setQuizCorrectCount","quizWrongCount","setQuizWrongCount","currentQuiz","setCurrentQuiz","gotoSummary","summary","numberOfQuestions","numberOfCorrect","numberOfWrong","console","log","push","toastAnswer","toastWrong","error","handleClickSelect","select","index","word_mean","map","quiz","word","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Button, Grid, Typography  } from '@mui/material';\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./quiz.css\";\r\n\r\n\r\nfunction QuizItem({quizList, quizTemp, maxNumQuiz, postQuizResult, quizSummaryUpdate}) {\r\n\r\n  let history = useHistory()\r\n  const [quizCorrectCount, setQuizCorrectCount] = useState(0)\r\n  const [quizWrongCount, setQuizWrongCount] = useState(0)\r\n  //let quizCorrectCount = 0;\r\n  //let quizWrongCount = 0;\r\n\r\n  const [currentQuiz, setCurrentQuiz] = useState(0);\r\n\r\n  const gotoSummary = () => {\r\n    const summary = {\r\n      numberOfQuestions: maxNumQuiz,\r\n      numberOfCorrect: quizCorrectCount,\r\n      numberOfWrong: quizWrongCount,\r\n      quizList: quizList,\r\n    };\r\n    console.log(summary)\r\n    postQuizResult(quizCorrectCount);\r\n    quizSummaryUpdate(summary);\r\n    history.push('/Summary')\r\n  }\r\n\r\n  // toast Alert (answer/wrong)\r\n  const toastAnswer = () => toast(\"정답입니다!\");\r\n  const toastWrong = () => toast.error(\"틀렸습니다!\");\r\n\r\n\r\n  const handleClickSelect = (select, index) => {\r\n    // Check Answer & get score\r\n    if (select === quizList[index].word_mean) {\r\n      setQuizCorrectCount(quizCorrectCount+1)\r\n      toastAnswer()\r\n    }\r\n    else {\r\n      setQuizWrongCount(quizWrongCount+1)\r\n      toastWrong()\r\n    }\r\n    setCurrentQuiz(currentQuiz+1);\r\n  }\r\n\r\n  // Check LastQuiz\r\n  if (quizCorrectCount+quizWrongCount === maxNumQuiz){\r\n    gotoSummary()\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      {quizList.map((quiz, index) => {\r\n          return (\r\n            <div className={index === currentQuiz ? 'quiz-slide active' : 'quiz-slide'}>\r\n              <Grid\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Typography>{index+1} of {maxNumQuiz}</Typography>\r\n                <h2 className=\"quiz-question-sub\">알맞은 뜻을 고르세요</h2>\r\n                <strong className=\"quiz-question\">{quiz.word}</strong>\r\n                <div className=\"multiple-answer-list\">\r\n                  <Button \r\n                    className=\"multiple-answer-item\" \r\n                    onClick={() => {handleClickSelect(quizTemp[index][0], index);}} \r\n                    variant=\"outlined\">{quizTemp[index][0]}\r\n                  </Button>\r\n                  <Button \r\n                    className=\"multiple-answer-item\" \r\n                    onClick={() => {handleClickSelect(quizTemp[index][1], index);}} \r\n                    variant=\"outlined\">{quizTemp[index][1]}\r\n                  </Button>\r\n                  <Button \r\n                    className=\"multiple-answer-item\" \r\n                    onClick={() => {handleClickSelect(quizTemp[index][2], index);}} \r\n                    variant=\"outlined\">{quizTemp[index][2]}\r\n                  </Button>\r\n                  <Button \r\n                    className=\"multiple-answer-item\" \r\n                    onClick={() => {handleClickSelect(quizTemp[index][3], index);}} \r\n                    variant=\"outlined\">{quizTemp[index][3]}\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            </div>\r\n          )\r\n        })}\r\n\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nQuizItem.defaultProps = {\r\n  quizList: [],\r\n  quizTemp: [],\r\n  maxNumQuiz: 0,\r\n}\r\n\r\nexport default QuizItem;"]},"metadata":{},"sourceType":"module"}