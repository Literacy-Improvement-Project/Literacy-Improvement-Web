{"ast":null,"code":"import * as types from \"./types\";\nconst initialState = {\n  status: {\n    valid: false,\n    loading: false,\n    dailyWordsList: []\n  }\n};\nexport default function dailyWords(state = initialState, action) {\n  switch (action.type) {\n    case types.DAILY_WORDS_REQUEST:\n      return { ...state,\n        status: { ...state.status,\n          loading: true\n        }\n      };\n\n    case types.DAILY_WORDS_REQUEST_SUCCESS:\n      return { ...state,\n        status: { ...state.status,\n          valid: true,\n          loading: false,\n          dailyWordsList: action.dailyWords\n        }\n      };\n\n    case types.DAILY_WORDS_REQUEST_FAILURE:\n      return { ...state,\n        status: { ...state.status,\n          loading: false,\n          valid: false\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Jyeo/Desktop/project/Literacy-Improvement-Project/Literacy-Improvement-Web/frontend/Literacy-Web/src/redux/dailyWords/reducer.js"],"names":["types","initialState","status","valid","loading","dailyWordsList","dailyWords","state","action","type","DAILY_WORDS_REQUEST","DAILY_WORDS_REQUEST_SUCCESS","DAILY_WORDS_REQUEST_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,OAAO,EAAE,KAFH;AAGNC,IAAAA,cAAc,EAAE;AAHV;AADW,CAArB;AAQA,eAAe,SAASC,UAAT,CAAoBC,KAAK,GAAGN,YAA5B,EAA0CO,MAA1C,EAAkD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,KAAK,CAACU,mBAAX;AACE,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,MAAM,EAAE,EACN,GAAGK,KAAK,CAACL,MADH;AAENE,UAAAA,OAAO,EAAE;AAFH;AAFH,OAAP;;AAOF,SAAKJ,KAAK,CAACW,2BAAX;AACE,aAAO,EACL,GAAGJ,KADE;AAELL,QAAAA,MAAM,EAAE,EACN,GAAGK,KAAK,CAACL,MADH;AAENC,UAAAA,KAAK,EAAE,IAFD;AAGNC,UAAAA,OAAO,EAAE,KAHH;AAINC,UAAAA,cAAc,EAAEG,MAAM,CAACF;AAJjB;AAFH,OAAP;;AASF,SAAKN,KAAK,CAACY,2BAAX;AACE,aAAO,EACL,GAAGL,KADE;AAELL,QAAAA,MAAM,EAAE,EACN,GAAGK,KAAK,CAACL,MADH;AAENE,UAAAA,OAAO,EAAE,KAFH;AAGND,UAAAA,KAAK,EAAE;AAHD;AAFH,OAAP;;AAQF;AACE,aAAOI,KAAP;AA7BJ;AA+BD","sourcesContent":["import * as types from \"./types\";\r\n\r\nconst initialState = {\r\n  status: {\r\n    valid: false,\r\n    loading: false,\r\n    dailyWordsList: [],\r\n  },\r\n};\r\n\r\nexport default function dailyWords(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.DAILY_WORDS_REQUEST:\r\n      return {\r\n        ...state,\r\n        status: {\r\n          ...state.status,\r\n          loading: true,\r\n        },\r\n      };\r\n    case types.DAILY_WORDS_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        status: {\r\n          ...state.status,\r\n          valid: true,\r\n          loading: false,\r\n          dailyWordsList: action.dailyWords,\r\n        },\r\n      };\r\n    case types.DAILY_WORDS_REQUEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        status: {\r\n          ...state.status,\r\n          loading: false,\r\n          valid: false,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}