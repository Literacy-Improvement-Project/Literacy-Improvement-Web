{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\quiz\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\nimport M from \"materialize-css\";\nimport Button from \"@material-ui/core/Button\";\nimport { postQuizResult } from \"../../redux\";\nimport { useLocation } from \"react-router\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./_quiz.scss\";\nimport classnames from \"classnames\";\nimport * as _ from \"lodash\";\nimport { shuffle } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz({\n  postQuizResult,\n  match\n}) {\n  _s();\n\n  let history = useHistory();\n  const [end, setend] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [nextQuestion, setNextQuestion] = useState({});\n  const [previousQuestion, setPreviousQuestion] = useState({});\n  var currentAnswer = \"\";\n  const [numberOfQuestions, setNumberOfQuestions] = useState(0);\n  const [numberOfAnswered, setNumberOfAnswered] = useState(0);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [wrongAnswers, setWrongAnswers] = useState(0);\n  const quizunit = useLocation();\n  let randomQuestion = [];\n  let myquestions = quizunit.state; // let myquestions = questions;\n\n  const [NBDisabled, setNBDisabled] = useState(false);\n  const [PBDisabled, setPBDisabled] = useState(false); // const morphemeLoad = () => {\n  //     for (let i = 0; i < 10; i++) {\n  //         for (let j =0; j < 4; j++){\n  //             if(j==0) {\n  //                 randomQuestion\n  //             }\n  //         }\n  //     }\n  //   };\n\n  const Summary = {\n    vaild: true,\n    totalScore: 0,\n    totalNumberOfQuestions: 0,\n    numberOfAnsweredQuestions: 0,\n    totalCorrectAnswers: 0,\n    totalWrongAnswers: 0\n  };\n  useEffect(() => {\n    const quizParam = match.params.quizStatus;\n    console.log(\"받아오기 성공!\");\n    displayQuestions();\n  }, [match.params.quizStatus]);\n  const quizStatus = useSelector(state => state.quiz.status.quizStatus);\n\n  const displayQuestions = () => {\n    console.log(myquestions);\n\n    if (currentQuestionIndex == 0) {\n      console.log(\"처음\");\n      setCurrentQuestionIndex(currentQuestionIndex => currentQuestionIndex + 1);\n    } // myquestions = _.cloneDeep(questions);\n\n\n    setCurrentQuestion(myquestions[currentQuestionIndex]);\n    setNextQuestion(myquestions[currentQuestionIndex + 1]);\n    setNumberOfQuestions(myquestions.length);\n    currentAnswer = currentQuestion.word_mean;\n    handleDisableButton(); // setRandomQuestion([\n    //     currentQuestion.word_mean,\n    //     currentQuestion.wrong_answer1,\n    //     currentQuestion.wrong_answer2,\n    //     currentQuestion.wrong_answer3\n    // ]);\n    // randomQuestion()\n\n    if (currentQuestionIndex <= 1) {\n      setPreviousQuestion(myquestions[currentQuestionIndex - 1]);\n    }\n  };\n\n  function suffle(array) {\n    array.sort(() => Math.random() - 0.5);\n  } // const randomQuestion = () => {\n  //     console.log(randomA);\n  //     suffle(randomA);\n  // }\n\n\n  const Quizend = () => {\n    Summary.totalScore = score;\n    Summary.totalNumberOfQuestions = numberOfQuestions;\n    Summary.numberOfAnsweredQuestions = correctAnswers + wrongAnswers;\n    Summary.totalCorrectAnswers = correctAnswers;\n    Summary.totalWrongAnswers = wrongAnswers;\n  };\n\n  const endGame = () => {\n    Quizend();\n    postQuizResult(Summary.totalScore);\n    setTimeout(() => {\n      history.push({\n        pathname: \"/Summary\",\n        state: Summary\n      });\n    }, 1000);\n  };\n\n  const handleOptionClick = e => {\n    currentAnswer = currentQuestion.word_mean;\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n\n    if (e.target.innerHTML == currentAnswer) {\n      clickCorrect();\n    } else {\n      clickWrong();\n    }\n  };\n\n  const clickCorrect = () => {\n    M.toast({\n      html: \"정답입니다!\",\n      classes: \"toast-valid\",\n      displayLength: 1500\n    });\n    setScore(score => score + 1);\n    setCorrectAnswers(correctAnswers + 1);\n    let CQI = currentQuestionIndex + 1;\n    setCurrentQuestionIndex(CQI);\n    setNumberOfAnswered(numberOfAnswered + 1);\n\n    if (nextQuestion === undefined) {\n      setScore(score + 1);\n      setCorrectAnswers(correctAnswers + 1);\n      setNumberOfAnswered(numberOfAnswered + 1);\n      setend(true);\n    } else {\n      displayQuestions();\n    }\n  };\n\n  const clickWrong = () => {\n    navigator.vibrate(1000);\n    M.toast({\n      html: \"틀렸습니다!\",\n      classes: \"toast-invalid\",\n      displayLength: 1500\n    });\n    setWrongAnswers(wrongAnswers + 1);\n    let CQI = currentQuestionIndex + 1;\n    setCurrentQuestionIndex(CQI);\n    setNumberOfAnswered(numberOfAnswered + 1);\n\n    if (nextQuestion === undefined) {\n      setWrongAnswers(wrongAnswers + 1);\n      setNumberOfAnswered(numberOfAnswered + 1);\n      setend(true);\n    } else {\n      displayQuestions();\n    }\n  };\n\n  const handleNextButtonClick = () => {\n    if (nextQuestion !== undefined) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      displayQuestions();\n    }\n  };\n\n  const handlePreviousButtonClick = () => {\n    if (previousQuestion == undefined) {\n      M.toast({\n        html: \"이전 문제가 없습니다.\",\n        classes: \"toast-invalid\",\n        displayLength: 1500\n      });\n      displayQuestions();\n    } else if (nextQuestion !== undefined) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n      displayQuestions();\n    }\n  };\n\n  const handleQuitButtonClick = () => {\n    if (window.confirm(\"나가시겠습니까?\")) {\n      history.push(\"/Home\");\n    }\n  };\n\n  const handleButtonClick = e => {\n    switch (e.target.id) {\n      case \"next-button\":\n        handleNextButtonClick();\n        break;\n\n      case \"previous-button\":\n        handlePreviousButtonClick();\n        break;\n\n      case \"quit-button\":\n        handleQuitButtonClick();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleDisableButton = () => {\n    if (currentQuestionIndex === 0 || currentQuestionIndex < 0) {\n      setPBDisabled(true);\n    } else {\n      setPBDisabled(false);\n    }\n\n    if (nextQuestion === undefined || currentQuestionIndex + 1 === numberOfQuestions) {\n      setNBDisabled(true);\n    } else {\n      setNBDisabled(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Quiz Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), end ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD034\\uC988\\uAC00 \\uB05D\\uB0AC\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"end-button\",\n        onClick: endGame,\n        children: \"\\uACB0\\uACFC\\uB85C \\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC624\\uB298\\uC758 \\uD034\\uC988\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lifeline-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"left\",\n            style: {\n              float: \"left\"\n            },\n            children: [currentQuestionIndex, \" of \", numberOfQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: currentQuestion.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: currentQuestion.word_mean\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: currentQuestion.wrong_answer1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: currentQuestion.wrong_answer2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: currentQuestion.wrong_answer3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classnames(\"\", {\n            disable: PBDisabled\n          }),\n          id: \"previous-button\",\n          onClick: handleButtonClick,\n          children: \"\\uC774\\uC804\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classnames(\"\", {\n            disable: NBDisabled\n          }),\n          id: \"next-button\",\n          onClick: handleButtonClick,\n          children: \"\\uB2E4\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"quit-button\",\n          onClick: handleButtonClick,\n          children: \"\\uB098\\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"70OAMMVMPm4FDtpOHdrNEofjsak=\", false, function () {\n  return [useHistory, useLocation, useSelector];\n});\n\n_c = Quiz;\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postQuizResult: score => {\n      return dispatch(postQuizResult(score));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/quiz/Quiz.js"],"names":["React","Fragment","useEffect","useState","connect","useSelector","Helmet","M","Button","postQuizResult","useLocation","Link","useHistory","classnames","_","shuffle","Quiz","match","history","end","setend","currentQuestion","setCurrentQuestion","nextQuestion","setNextQuestion","previousQuestion","setPreviousQuestion","currentAnswer","numberOfQuestions","setNumberOfQuestions","numberOfAnswered","setNumberOfAnswered","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","correctAnswers","setCorrectAnswers","wrongAnswers","setWrongAnswers","quizunit","randomQuestion","myquestions","state","NBDisabled","setNBDisabled","PBDisabled","setPBDisabled","Summary","vaild","totalScore","totalNumberOfQuestions","numberOfAnsweredQuestions","totalCorrectAnswers","totalWrongAnswers","quizParam","params","quizStatus","console","log","displayQuestions","quiz","status","length","word_mean","handleDisableButton","suffle","array","sort","Math","random","Quizend","endGame","setTimeout","push","pathname","handleOptionClick","e","target","innerHTML","clickCorrect","clickWrong","toast","html","classes","displayLength","CQI","undefined","navigator","vibrate","handleNextButtonClick","handlePreviousButtonClick","handleQuitButtonClick","window","confirm","handleButtonClick","id","float","word","wrong_answer1","wrong_answer2","wrong_answer3","disable","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport M from \"materialize-css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { postQuizResult } from \"../../redux\";\r\nimport { useLocation } from \"react-router\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./_quiz.scss\";\r\nimport classnames from \"classnames\";\r\nimport * as _ from \"lodash\";\r\nimport { shuffle } from \"lodash\";\r\n\r\nfunction Quiz({ postQuizResult, match }) {\r\n  let history = useHistory();\r\n  const [end, setend] = useState(false);\r\n  const [currentQuestion, setCurrentQuestion] = useState({});\r\n  const [nextQuestion, setNextQuestion] = useState({});\r\n  const [previousQuestion, setPreviousQuestion] = useState({});\r\n  var currentAnswer = \"\";\r\n  const [numberOfQuestions, setNumberOfQuestions] = useState(0);\r\n  const [numberOfAnswered, setNumberOfAnswered] = useState(0);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [wrongAnswers, setWrongAnswers] = useState(0);\r\n  const quizunit = useLocation();\r\n  let randomQuestion = [];\r\n  let myquestions = quizunit.state;\r\n  // let myquestions = questions;\r\n\r\n  const [NBDisabled, setNBDisabled] = useState(false);\r\n  const [PBDisabled, setPBDisabled] = useState(false);\r\n\r\n  // const morphemeLoad = () => {\r\n  //     for (let i = 0; i < 10; i++) {\r\n  //         for (let j =0; j < 4; j++){\r\n  //             if(j==0) {\r\n  //                 randomQuestion\r\n  //             }\r\n  //         }\r\n  //     }\r\n  //   };\r\n  const Summary = {\r\n    vaild: true,\r\n    totalScore: 0,\r\n    totalNumberOfQuestions: 0,\r\n    numberOfAnsweredQuestions: 0,\r\n    totalCorrectAnswers: 0,\r\n    totalWrongAnswers: 0,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const quizParam = match.params.quizStatus;\r\n    console.log(\"받아오기 성공!\");\r\n    displayQuestions();\r\n  }, [match.params.quizStatus]);\r\n\r\n  const quizStatus = useSelector((state) => state.quiz.status.quizStatus);\r\n\r\n  const displayQuestions = () => {\r\n    console.log(myquestions);\r\n    if (currentQuestionIndex == 0) {\r\n      console.log(\"처음\");\r\n      setCurrentQuestionIndex(\r\n        (currentQuestionIndex) => currentQuestionIndex + 1\r\n      );\r\n    }\r\n    // myquestions = _.cloneDeep(questions);\r\n    setCurrentQuestion(myquestions[currentQuestionIndex]);\r\n    setNextQuestion(myquestions[currentQuestionIndex + 1]);\r\n    setNumberOfQuestions(myquestions.length);\r\n    currentAnswer = currentQuestion.word_mean;\r\n    handleDisableButton();\r\n    // setRandomQuestion([\r\n    //     currentQuestion.word_mean,\r\n    //     currentQuestion.wrong_answer1,\r\n    //     currentQuestion.wrong_answer2,\r\n    //     currentQuestion.wrong_answer3\r\n    // ]);\r\n    // randomQuestion()\r\n    if (currentQuestionIndex <= 1) {\r\n      setPreviousQuestion(myquestions[currentQuestionIndex - 1]);\r\n    }\r\n  };\r\n  function suffle(array) {\r\n    array.sort(() => Math.random() - 0.5);\r\n  }\r\n  // const randomQuestion = () => {\r\n  //     console.log(randomA);\r\n  //     suffle(randomA);\r\n  // }\r\n  const Quizend = () => {\r\n    Summary.totalScore = score;\r\n    Summary.totalNumberOfQuestions = numberOfQuestions;\r\n    Summary.numberOfAnsweredQuestions = correctAnswers + wrongAnswers;\r\n    Summary.totalCorrectAnswers = correctAnswers;\r\n    Summary.totalWrongAnswers = wrongAnswers;\r\n  };\r\n  const endGame = () => {\r\n    Quizend();\r\n    postQuizResult(Summary.totalScore);\r\n    setTimeout(() => {\r\n      history.push({\r\n        pathname: \"/Summary\",\r\n        state: Summary,\r\n      });\r\n    }, 1000);\r\n  };\r\n  const handleOptionClick = (e) => {\r\n    currentAnswer = currentQuestion.word_mean;\r\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    if (e.target.innerHTML == currentAnswer) {\r\n      clickCorrect();\r\n    } else {\r\n      clickWrong();\r\n    }\r\n  };\r\n  const clickCorrect = () => {\r\n    M.toast({\r\n      html: \"정답입니다!\",\r\n      classes: \"toast-valid\",\r\n      displayLength: 1500,\r\n    });\r\n\r\n    setScore((score) => score + 1);\r\n    setCorrectAnswers(correctAnswers + 1);\r\n    let CQI = currentQuestionIndex + 1;\r\n    setCurrentQuestionIndex(CQI);\r\n    setNumberOfAnswered(numberOfAnswered + 1);\r\n\r\n    if (nextQuestion === undefined) {\r\n      setScore(score + 1);\r\n      setCorrectAnswers(correctAnswers + 1);\r\n      setNumberOfAnswered(numberOfAnswered + 1);\r\n      setend(true);\r\n    } else {\r\n      displayQuestions();\r\n    }\r\n  };\r\n  const clickWrong = () => {\r\n    navigator.vibrate(1000);\r\n    M.toast({\r\n      html: \"틀렸습니다!\",\r\n      classes: \"toast-invalid\",\r\n      displayLength: 1500,\r\n    });\r\n\r\n    setWrongAnswers(wrongAnswers + 1);\r\n    let CQI = currentQuestionIndex + 1;\r\n    setCurrentQuestionIndex(CQI);\r\n    setNumberOfAnswered(numberOfAnswered + 1);\r\n\r\n    if (nextQuestion === undefined) {\r\n      setWrongAnswers(wrongAnswers + 1);\r\n      setNumberOfAnswered(numberOfAnswered + 1);\r\n      setend(true);\r\n    } else {\r\n      displayQuestions();\r\n    }\r\n  };\r\n  const handleNextButtonClick = () => {\r\n    if (nextQuestion !== undefined) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      displayQuestions();\r\n    }\r\n  };\r\n  const handlePreviousButtonClick = () => {\r\n    if (previousQuestion == undefined) {\r\n      M.toast({\r\n        html: \"이전 문제가 없습니다.\",\r\n        classes: \"toast-invalid\",\r\n        displayLength: 1500,\r\n      });\r\n      displayQuestions();\r\n    } else if (nextQuestion !== undefined) {\r\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n      displayQuestions();\r\n    }\r\n  };\r\n  const handleQuitButtonClick = () => {\r\n    if (window.confirm(\"나가시겠습니까?\")) {\r\n      history.push(\"/Home\");\r\n    }\r\n  };\r\n  const handleButtonClick = (e) => {\r\n    switch (e.target.id) {\r\n      case \"next-button\":\r\n        handleNextButtonClick();\r\n        break;\r\n      case \"previous-button\":\r\n        handlePreviousButtonClick();\r\n        break;\r\n      case \"quit-button\":\r\n        handleQuitButtonClick();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleDisableButton = () => {\r\n    if (currentQuestionIndex === 0 || currentQuestionIndex < 0) {\r\n      setPBDisabled(true);\r\n    } else {\r\n      setPBDisabled(false);\r\n    }\r\n\r\n    if (\r\n      nextQuestion === undefined ||\r\n      currentQuestionIndex + 1 === numberOfQuestions\r\n    ) {\r\n      setNBDisabled(true);\r\n    } else {\r\n      setNBDisabled(false);\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>Quiz Page</title>\r\n      </Helmet>\r\n      {end ? (\r\n        <div className=\"questions\">\r\n          <h2>퀴즈가 끝났습니다.</h2>\r\n          <button className=\"end-button\" onClick={endGame}>\r\n            결과로 가기\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"questions\">\r\n          <h2>오늘의 퀴즈</h2>\r\n          <div className=\"lifeline-container\"></div>\r\n          <div className=\"timer-container\">\r\n            <p>\r\n              <span className=\"left\" style={{ float: \"left\" }}>\r\n                {currentQuestionIndex} of {numberOfQuestions}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <h5>{currentQuestion.word}</h5>\r\n          <div className=\"options-container\">\r\n            <p onClick={handleOptionClick} className=\"option\">\r\n              {currentQuestion.word_mean}\r\n            </p>\r\n            <p onClick={handleOptionClick} className=\"option\">\r\n              {currentQuestion.wrong_answer1}\r\n            </p>\r\n          </div>\r\n          <div className=\"options-container\">\r\n            <p onClick={handleOptionClick} className=\"option\">\r\n              {currentQuestion.wrong_answer2}\r\n            </p>\r\n            <p onClick={handleOptionClick} className=\"option\">\r\n              {currentQuestion.wrong_answer3}\r\n            </p>\r\n          </div>\r\n          <div className=\"button-container\">\r\n            <button\r\n              className={classnames(\"\", { disable: PBDisabled })}\r\n              id=\"previous-button\"\r\n              onClick={handleButtonClick}\r\n            >\r\n              이전\r\n            </button>\r\n            <button\r\n              className={classnames(\"\", { disable: NBDisabled })}\r\n              id=\"next-button\"\r\n              onClick={handleButtonClick}\r\n            >\r\n              다음\r\n            </button>\r\n            <button id=\"quit-button\" onClick={handleButtonClick}>\r\n              나가기\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    postQuizResult: (score) => {\r\n      return dispatch(postQuizResult(score));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\r\n"]},"metadata":{},"sourceType":"module"}