{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\\\uBB38\\uD574\\uB825\\uC99D\\uC9C4\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\signup\\\\SignUp.js\";\n\n/* 회원가입 */\nimport React, { Component } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport AuthSignUp from \"./AuthSignUp\";\nimport { connect } from \"react-redux\";\nimport { registerRequest } from \"../../redux/signup/actions\";\nimport { duplicateCheckRequest, duplicateCheckNicknameRequest } from \"../../redux/signup/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleRegister = body => {\n      return this.props.registerRequest(body).then(() => {\n        console.log(this.props.history);\n\n        if (this.props.statusReg === \"SUCCESS\") {\n          // 회원가입 성공시 로그인 화면으로 돌아감.\n          this.props.history.push(\"/SignIn\");\n          return true;\n        } else {\n          console.log(\"회원가입 실패\");\n          return false;\n        }\n      });\n    };\n\n    this.handleCheckID = userID => {\n      return this.props.duplicateCheckRequest(userID).then(() => {\n        if (this.props.statusID === \"ABLE\") {\n          // 사용 가능 시 사용가능 메세지 > 박스 띄워주기\n          return true;\n        } else {\n          return false;\n        }\n      });\n    };\n\n    this.handleCheckNickname = nickName => {\n      return this.props.duplicateCheckNicknameRequest(nickName).then(() => {\n        if (this.props.statusNickname === \"ABLE\") {\n          // 사용 가능 시 사용가능 메세지 > 박스 띄워주기\n          return true;\n        } else {\n          return false;\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AuthSignUp, {\n        onRegister: this.handleRegister,\n        onCheckID: this.handleCheckID,\n        statusID: this.props.statusID,\n        statusNickname: this.props.statusNickname,\n        onCheckNickname: this.handleCheckNickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    statusReg: state.register.register.status,\n    statusID: state.register.duplicate.status,\n    statusNickname: state.register.duplicateNickname.status\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    registerRequest: body => {\n      return dispatch(registerRequest(body));\n    },\n    duplicateCheckRequest: userID => {\n      return dispatch(duplicateCheckRequest(userID));\n    },\n    duplicateCheckNicknameRequest: nickName => {\n      return dispatch(duplicateCheckNicknameRequest(nickName));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/문해력증진/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/signup/SignUp.js"],"names":["React","Component","useSelector","AuthSignUp","connect","registerRequest","duplicateCheckRequest","duplicateCheckNicknameRequest","SignUp","handleRegister","body","props","then","console","log","history","statusReg","push","handleCheckID","userID","statusID","handleCheckNickname","nickName","statusNickname","render","mapStateToProps","state","register","status","duplicate","duplicateNickname","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/* 회원가입 */\r\nimport React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AuthSignUp from \"./AuthSignUp\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerRequest } from \"../../redux/signup/actions\";\r\nimport {\r\n  duplicateCheckRequest,\r\n  duplicateCheckNicknameRequest,\r\n} from \"../../redux/signup/actions\";\r\n\r\nclass SignUp extends Component {\r\n  handleRegister = (body) => {\r\n    return this.props.registerRequest(body).then(() => {\r\n      console.log(this.props.history);\r\n      if (this.props.statusReg === \"SUCCESS\") {\r\n        // 회원가입 성공시 로그인 화면으로 돌아감.\r\n        this.props.history.push(\"/SignIn\");\r\n        return true;\r\n      } else {\r\n        console.log(\"회원가입 실패\");\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCheckID = (userID) => {\r\n    return this.props.duplicateCheckRequest(userID).then(() => {\r\n      if (this.props.statusID === \"ABLE\") {\r\n        // 사용 가능 시 사용가능 메세지 > 박스 띄워주기\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCheckNickname = (nickName) => {\r\n    return this.props.duplicateCheckNicknameRequest(nickName).then(() => {\r\n      if (this.props.statusNickname === \"ABLE\") {\r\n        // 사용 가능 시 사용가능 메세지 > 박스 띄워주기\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AuthSignUp\r\n          onRegister={this.handleRegister}\r\n          onCheckID={this.handleCheckID}\r\n          statusID={this.props.statusID}\r\n          statusNickname={this.props.statusNickname}\r\n          onCheckNickname={this.handleCheckNickname}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    statusReg: state.register.register.status,\r\n    statusID: state.register.duplicate.status,\r\n    statusNickname: state.register.duplicateNickname.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    registerRequest: (body) => {\r\n      return dispatch(registerRequest(body));\r\n    },\r\n    duplicateCheckRequest: (userID) => {\r\n      return dispatch(duplicateCheckRequest(userID));\r\n    },\r\n    duplicateCheckNicknameRequest: (nickName) => {\r\n      return dispatch(duplicateCheckNicknameRequest(nickName));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}