{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damja\\\\Desktop\\\\\\uC18C\\uD504\\uD2B8\\\\\\uC18C\\uD504\\uD2B8 3-2\\\\\\uBB38\\uD574\\uB825\\uC99D\\uC9C4\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\quiz\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport M from 'materialize-css';\nimport questions from '../../questions.json';\nimport { quizRequest } from \"../../redux\";\nimport { Link } from 'react-router-dom';\nimport isEmpty from './is-empty';\nimport './_quiz.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz({\n  quizStatus,\n  quizRequest\n}) {\n  _s();\n\n  useEffect(() => {\n    quizRequest();\n  }, []); // let questions = [];\n  // let currentQuestion = {};\n  // let nextQuestion = {};\n  // let previousQuestion = {};\n  // let answer = '';\n  // let numberOfQuestions = 0;\n  // let numberOfAnsweredQuestion = 0;\n  // let currentQuestionsIndex = 0;\n  // let score = 0;\n  // let correctAnswer = 0;\n  // let WrongAnswer = 0;\n  // let time = {};\n\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [nextQuestion, setNextQuestion] = useState({});\n  const [previousQuestion, setPreviousQuestion] = useState({});\n  const [answer, setAnswer] = useState('');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(0);\n  const [numberOfAnswered, setNumberOfAnswered] = useState(0);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [wrongAnswers, setWrongAnswers] = useState(0);\n  const [time, setTime] = useState({}); // const quizLoad = quizStatus.map((item,index) => (\n  //     <div key={index}>\n  //     {\n  //         (questions.push(item.question),\n  //         currentQuestion = questions[currentQuestionsIndex]\n  //         )\n  //     }\n  //     </div>\n  // ));\n\n  const displayQuestions = (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) => {\n    let {\n      currentQuestionIndex\n    } = this.state;\n\n    if (!isEmpty(this.state.questions)) {\n      setQuestions(questions.questions);\n      setCurrentQuestion(questions[currentQuestionIndex]);\n      setNextQuestion(questions[currentQuestionIndex + 1]);\n      setPreviousQuestion(questions[currentQuestionIndex - 1]);\n      setAnswer(currentQuestion.answer);\n      setNumberOfQuestions(questions.length);\n    }\n  };\n\n  const handleOptionClick = e => {\n    setAnswer('c');\n\n    if (e.target.innerHTML.toLowerCase() === answer.toLowerCase()) {\n      clickCorrect();\n    } else {\n      clickWrong();\n    }\n  };\n\n  const clickCorrect = () => {\n    M.toast({\n      html: '정답입니다!',\n      classes: 'toast-valid',\n      displayLength: 1500\n    });\n    setScore(score + 1);\n    setCorrectAnswers(correctAnswers + 1);\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    setNumberOfAnswered(numberOfAnswered + 1);\n  };\n\n  const clickWrong = () => {\n    navigator.vibrate(1000);\n    M.toast({\n      html: '틀렸습니다!',\n      classes: 'toast-invalid',\n      displayLength: 1500\n    });\n    setWrongAnswers(wrongAnswers + 1);\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    setNumberOfAnswered(numberOfAnswered);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Quiz Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC624\\uB298\\uC758 \\uD034\\uC988\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lifeline-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mdi mdi-clock-outline mdi-24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"lifeline\",\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mdi mdi-clock-outline mdi-24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"lifeline\",\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"1 of 10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: \"a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: \"b\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: \"c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: \"d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uC774\\uC804\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uB2E4\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uB098\\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"EZ/819oGv9LzH4JDACzwbT/P8wo=\");\n\n_c = Quiz;\n\nconst mapStateToProps = state => {\n  return {\n    quizStatus: state.quiz.status.quizStatus\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    quizRequest: () => {\n      return dispatch(quizRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/damja/Desktop/소프트/소프트 3-2/문해력증진/Literacy-Improvement-Web/frontend/Literacy-Web/frontend/Literacy-Web/src/components/quiz/Quiz.js"],"names":["React","Fragment","useEffect","useState","connect","useSelector","Helmet","M","questions","quizRequest","Link","isEmpty","Quiz","quizStatus","setQuestions","currentQuestion","setCurrentQuestion","nextQuestion","setNextQuestion","previousQuestion","setPreviousQuestion","answer","setAnswer","numberOfQuestions","setNumberOfQuestions","numberOfAnswered","setNumberOfAnswered","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","correctAnswers","setCorrectAnswers","wrongAnswers","setWrongAnswers","time","setTime","displayQuestions","state","length","handleOptionClick","e","target","innerHTML","toLowerCase","clickCorrect","clickWrong","toast","html","classes","displayLength","navigator","vibrate","mapStateToProps","quiz","status","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { Helmet } from 'react-helmet';\r\nimport M from 'materialize-css';\r\n\r\nimport questions from '../../questions.json';\r\nimport { quizRequest } from \"../../redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport isEmpty from './is-empty';\r\nimport './_quiz.scss';\r\n\r\nfunction Quiz({ quizStatus, quizRequest}){\r\n    useEffect(()=> {\r\n        quizRequest();\r\n    }, []);\r\n    \r\n    // let questions = [];\r\n    // let currentQuestion = {};\r\n    // let nextQuestion = {};\r\n    // let previousQuestion = {};\r\n    // let answer = '';\r\n    // let numberOfQuestions = 0;\r\n    // let numberOfAnsweredQuestion = 0;\r\n    // let currentQuestionsIndex = 0;\r\n    // let score = 0;\r\n    // let correctAnswer = 0;\r\n    // let WrongAnswer = 0;\r\n    // let time = {};\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentQuestion, setCurrentQuestion] = useState({});\r\n    const [nextQuestion, setNextQuestion] = useState({});\r\n    const [previousQuestion, setPreviousQuestion] = useState({});\r\n    const [answer, setAnswer] = useState('');\r\n    const [numberOfQuestions,setNumberOfQuestions] = useState(0);\r\n    const [numberOfAnswered,setNumberOfAnswered] = useState(0);\r\n    const [currentQuestionIndex,setCurrentQuestionIndex] = useState(0);\r\n    const [score,setScore] = useState(0);\r\n    const [correctAnswers, setCorrectAnswers] = useState(0);\r\n    const [wrongAnswers,setWrongAnswers] = useState(0);\r\n    const [time, setTime] = useState({});\r\n    // const quizLoad = quizStatus.map((item,index) => (\r\n    //     <div key={index}>\r\n    //     {\r\n    //         (questions.push(item.question),\r\n    //         currentQuestion = questions[currentQuestionsIndex]\r\n\r\n    //         )\r\n    //     }\r\n    //     </div>\r\n    // ));\r\n    const displayQuestions = (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) => {\r\n        let { currentQuestionIndex } = this.state;   \r\n        if (!isEmpty(this.state.questions)) {\r\n            setQuestions(questions.questions);\r\n            setCurrentQuestion(questions[currentQuestionIndex]);\r\n            setNextQuestion(questions[currentQuestionIndex + 1]);\r\n            setPreviousQuestion(questions[currentQuestionIndex -1]);\r\n            setAnswer(currentQuestion.answer);\r\n            setNumberOfQuestions(questions.length);\r\n        }\r\n    }\r\n\r\n    const handleOptionClick = (e) => {\r\n        setAnswer('c');\r\n        if (e.target.innerHTML.toLowerCase() === answer.toLowerCase())  {\r\n            clickCorrect();\r\n        }else {\r\n            clickWrong();\r\n        }\r\n    }\r\n    const clickCorrect = () => {\r\n        M.toast({\r\n            html: '정답입니다!',\r\n            classes: 'toast-valid',\r\n            displayLength: 1500\r\n        });\r\n        setScore(score+1);\r\n        setCorrectAnswers(correctAnswers+1);\r\n        setCurrentQuestionIndex(currentQuestionIndex+1);\r\n        setNumberOfAnswered(numberOfAnswered+1);\r\n    }\r\n    const clickWrong = () => {\r\n        navigator.vibrate(1000);\r\n        M.toast({\r\n            html: '틀렸습니다!',\r\n            classes: 'toast-invalid',\r\n            displayLength: 1500\r\n        });\r\n        setWrongAnswers(wrongAnswers+1);\r\n        setCurrentQuestionIndex(currentQuestionIndex+1);\r\n        setNumberOfAnswered(numberOfAnswered);\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Helmet><title>Quiz Page</title></Helmet>\r\n            <div className = \"questions\">\r\n                <h2>오늘의 퀴즈</h2>\r\n                <div className = \"lifeline-container\">\r\n                    <p>\r\n                        <span className = \"mdi mdi-clock-outline mdi-24px\"></span>\r\n                        <span className = \"lifeline\">5</span>\r\n                    </p>\r\n                    <p>\r\n                        <span className = \"mdi mdi-clock-outline mdi-24px\"></span>\r\n                        <span className = \"lifeline\">5</span>\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <p>\r\n                        <span>1 of 10</span>\r\n                    </p>\r\n                </div>\r\n                <h5>questions</h5>\r\n                <div className=\"options-container\">\r\n                    <p onClick={handleOptionClick} className=\"option\">a</p>\r\n                    <p onClick={handleOptionClick} className=\"option\">b</p>\r\n                </div>\r\n                <div className=\"options-container\">\r\n                    <p onClick={handleOptionClick} className=\"option\">c</p>\r\n                    <p onClick={handleOptionClick} className=\"option\">d</p>\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <button>이전</button>\r\n                    <button>다음</button>\r\n                    <button>나가기</button>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n        \r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quizStatus: state.quiz.status.quizStatus,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        quizRequest: () => {\r\n            return dispatch(quizRequest());\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);"]},"metadata":{},"sourceType":"module"}