{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jyeo\\\\Desktop\\\\project\\\\Literacy-Improvement-Project\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\page\\\\Word.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { oneWordRequest } from \"../redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  padding: {\n    paddingBottom: theme.spacing(1)\n  }\n}));\n\nfunction Word({\n  wordStatus,\n  oneWordRequest\n}) {\n  _s();\n\n  useEffect(() => {\n    oneWordRequest(keyword); // 렌더링\n  }, []);\n  let wordName = [];\n  let pronunciation = [];\n  let pos = [];\n  let sense = [];\n  const itemLoad = wordStatus.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (wordName.push(item.word), pronunciation.push(item.pronunciation), pos.push(item.pos), sense.push(item.sense))\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this));\n  const {\n    keyword\n  } = useParams();\n  const classes = useStyles(); // 사용자에게 보여지는 부분\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [wordName[0], \" [\", pronunciation[0], \"]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 9\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), wordName.map((word, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [wordName[index], \"[\", pronunciation[index], \"]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: pos[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), sense[index].map((item, i) => /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [i + 1, \".\", item.definition]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Word, \"w2KXWwrO6ISiD+0ql1GnjTekCnc=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = Word;\n\nconst mapStateToProps = state => {\n  return {\n    wordStatus: state.oneWord.status.wordStatus\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    oneWordRequest: word => {\n      return dispatch(oneWordRequest(word));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Word);\n\nvar _c;\n\n$RefreshReg$(_c, \"Word\");","map":{"version":3,"sources":["C:/Users/Jyeo/Desktop/project/Literacy-Improvement-Project/Literacy-Improvement-Web/frontend/Literacy-Web/src/page/Word.js"],"names":["React","useEffect","connect","useParams","oneWordRequest","makeStyles","Grid","useStyles","theme","root","padding","spacing","paddingBottom","Word","wordStatus","keyword","wordName","pronunciation","pos","sense","itemLoad","map","item","index","push","word","classes","paper","i","definition","mapStateToProps","state","oneWord","status","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { oneWordRequest } from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  padding: {\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n}));\r\nfunction Word({ wordStatus, oneWordRequest }) {\r\n  useEffect(() => {\r\n    oneWordRequest(keyword);\r\n    // 렌더링\r\n  }, []);\r\n  let wordName = [];\r\n  let pronunciation = [];\r\n  let pos = [];\r\n  let sense = [];\r\n  const itemLoad = wordStatus.map((item, index) => (\r\n    <div key={index}>\r\n      {\r\n        (wordName.push(item.word),\r\n        pronunciation.push(item.pronunciation),\r\n        pos.push(item.pos),\r\n        sense.push(item.sense))\r\n      }\r\n    </div>\r\n  ));\r\n  const { keyword } = useParams();\r\n  const classes = useStyles();\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={3}>\r\n            <h3>\r\n              {wordName[0]} [{pronunciation[0]}]\r\n            </h3>\r\n          </Grid>\r\n          <Grid item xs={9}></Grid>\r\n          {wordName.map((word, index) => (\r\n            <Grid item key={index} xs={12} className={classes.paper}>\r\n              <h4>\r\n                {wordName[index]}[{pronunciation[index]}]\r\n              </h4>\r\n              <h4>{pos[index]}</h4>\r\n              {sense[index].map((item, i) => (\r\n                <h5>\r\n                  {i + 1}.{item.definition}\r\n                </h5>\r\n              ))}\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    wordStatus: state.oneWord.status.wordStatus,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    oneWordRequest: (word) => {\r\n      return dispatch(oneWordRequest(word));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Word);\r\n"]},"metadata":{},"sourceType":"module"}