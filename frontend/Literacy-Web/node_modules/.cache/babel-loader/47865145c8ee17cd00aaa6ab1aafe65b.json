{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damja\\\\Desktop\\\\\\uC18C\\uD504\\uD2B8\\\\\\uC18C\\uD504\\uD2B8 3-2\\\\\\uBB38\\uD574\\uB825\\uC99D\\uC9C4\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\quiz\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport M from 'materialize-css';\nimport questions from '../../questions.json';\nimport { quizRequest } from \"../../redux\";\nimport { Link } from 'react-router-dom';\nimport isEmpty from './is-empty';\nimport './_quiz.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz({\n  quizStatus,\n  quizRequest\n}) {\n  _s();\n\n  // let questions = [];\n  // let currentQuestion = {};\n  // let nextQuestion = {};\n  // let previousQuestion = {};\n  // let answer = '';\n  // let numberOfQuestions = 0;\n  // let numberOfAnsweredQuestion = 0;\n  // let currentQuestionsIndex = 0;\n  // let score = 0;\n  // let correctAnswer = 0;\n  // let WrongAnswer = 0;\n  // let time = {};\n  // const [myQuestions, setMyquestions] = useState({});\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [nextQuestion, setNextQuestion] = useState({});\n  const [previousQuestion, setPreviousQuestion] = useState({});\n  const [answer, setAnswer] = useState('');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(0);\n  const [numberOfAnswered, setNumberOfAnswered] = useState(0);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [wrongAnswers, setWrongAnswers] = useState(0);\n  const [time, setTime] = useState({});\n  const [index, setIndex] = useState(0); // const quizLoad = quizStatus.map((item,index) => (\n  //     <div key={index}>\n  //     {\n  //         (questions.push(item.question),\n  //         currentQuestion = questions[currentQuestionsIndex]\n  //         )\n  //     }\n  //     </div>\n  // ));\n\n  useEffect(() => {\n    quizRequest();\n    displayQuestions();\n  }, []);\n\n  const displayQuestions = () => {\n    setCurrentQuestion(questions[currentQuestionIndex]);\n    setNextQuestion(questions[currentQuestionIndex + 1]);\n    setPreviousQuestion(questions[currentQuestionIndex - 1]);\n    setAnswer(currentQuestion.answer);\n    setNumberOfQuestions(questions.length);\n  };\n\n  const endGame = () => {};\n\n  const handleOptionClick = e => {\n    console.log(e.target.innerHTML.toLowerCase());\n    console.log(currentQuestion.answer);\n    setAnswer(currentQuestion.answer);\n\n    if (e.target.innerHTML.toLowerCase() === answer.toLowerCase()) {\n      clickCorrect();\n    } else {\n      clickWrong();\n    }\n  };\n\n  const clickCorrect = () => {\n    M.toast({\n      html: '정답입니다!',\n      classes: 'toast-valid',\n      displayLength: 1500\n    });\n    setScore(score + 1);\n    setCorrectAnswers(correctAnswers + 1);\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    setNumberOfAnswered(numberOfAnswered + 1);\n\n    if (nextQuestion === undefined) {\n      endGame();\n    } else {\n      displayQuestions();\n    }\n  };\n\n  const clickWrong = () => {\n    navigator.vibrate(1000);\n    M.toast({\n      html: '틀렸습니다!',\n      classes: 'toast-invalid',\n      displayLength: 1500\n    });\n    setWrongAnswers(wrongAnswers + 1);\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    setNumberOfAnswered(numberOfAnswered);\n\n    if (nextQuestion === undefined) {\n      endGame();\n    } else {\n      displayQuestions();\n    }\n  };\n\n  handleNextButtonClick = () => {\n    if (nextQuestion !== undefined) {\n      setcurrentQuestionIndex(currentQuestionIndex + 1);\n      displayQuestions();\n    }\n  };\n\n  handlePreviousButtonClick = () => {\n    this.playButtonSound();\n\n    if (this.state.previousQuestion !== undefined) {\n      this.setState(prevState => ({\n        currentQuestionIndex: prevState.currentQuestionIndex - 1\n      }), () => {\n        this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n      });\n    }\n  };\n\n  handleQuitButtonClick = () => {\n    this.playButtonSound();\n\n    if (window.confirm('Are you sure you want to quit?')) {\n      this.props.history.push('/');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Quiz Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC624\\uB298\\uC758 \\uD034\\uC988\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lifeline-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mdi mdi-clock-outline mdi-24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"lifeline\",\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mdi mdi-clock-outline mdi-24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"lifeline\",\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"1 of 10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), console.log(currentQuestion.answer), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: currentQuestion.optionA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: currentQuestion.optionB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: currentQuestion.optionC\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOptionClick,\n          className: \"option\",\n          children: currentQuestion.optionD\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uC774\\uC804\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uB2E4\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uB098\\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"YuZhprWOd9v7d2NQwPuSg4PnZHw=\");\n\n_c = Quiz;\n\nconst mapStateToProps = state => {\n  return {\n    quizStatus: state.quiz.status.quizStatus\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    quizRequest: () => {\n      return dispatch(quizRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/damja/Desktop/소프트/소프트 3-2/문해력증진/Literacy-Improvement-Web/frontend/Literacy-Web/frontend/Literacy-Web/src/components/quiz/Quiz.js"],"names":["React","Fragment","useEffect","useState","connect","useSelector","Helmet","M","questions","quizRequest","Link","isEmpty","Quiz","quizStatus","currentQuestion","setCurrentQuestion","nextQuestion","setNextQuestion","previousQuestion","setPreviousQuestion","answer","setAnswer","numberOfQuestions","setNumberOfQuestions","numberOfAnswered","setNumberOfAnswered","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","correctAnswers","setCorrectAnswers","wrongAnswers","setWrongAnswers","time","setTime","index","setIndex","displayQuestions","length","endGame","handleOptionClick","e","console","log","target","innerHTML","toLowerCase","clickCorrect","clickWrong","toast","html","classes","displayLength","undefined","navigator","vibrate","handleNextButtonClick","setcurrentQuestionIndex","handlePreviousButtonClick","playButtonSound","state","setState","prevState","handleQuitButtonClick","window","confirm","props","history","push","question","optionA","optionB","optionC","optionD","mapStateToProps","quiz","status","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { Helmet } from 'react-helmet';\r\nimport M from 'materialize-css';\r\n\r\nimport questions from '../../questions.json';\r\nimport { quizRequest } from \"../../redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport isEmpty from './is-empty';\r\nimport './_quiz.scss';\r\n\r\nfunction Quiz({ quizStatus, quizRequest}){\r\n    \r\n    \r\n    // let questions = [];\r\n    // let currentQuestion = {};\r\n    // let nextQuestion = {};\r\n    // let previousQuestion = {};\r\n    // let answer = '';\r\n    // let numberOfQuestions = 0;\r\n    // let numberOfAnsweredQuestion = 0;\r\n    // let currentQuestionsIndex = 0;\r\n    // let score = 0;\r\n    // let correctAnswer = 0;\r\n    // let WrongAnswer = 0;\r\n    // let time = {};\r\n\r\n    // const [myQuestions, setMyquestions] = useState({});\r\n    const [currentQuestion, setCurrentQuestion] = useState({});\r\n    const [nextQuestion, setNextQuestion] = useState({});\r\n    const [previousQuestion, setPreviousQuestion] = useState({});\r\n    const [answer, setAnswer] = useState('');\r\n    const [numberOfQuestions,setNumberOfQuestions] = useState(0);\r\n    const [numberOfAnswered,setNumberOfAnswered] = useState(0);\r\n    const [currentQuestionIndex,setCurrentQuestionIndex] = useState(0);\r\n    const [score,setScore] = useState(0);\r\n    const [correctAnswers, setCorrectAnswers] = useState(0);\r\n    const [wrongAnswers,setWrongAnswers] = useState(0);\r\n    const [time, setTime] = useState({});\r\n    const [index, setIndex] = useState(0);\r\n    // const quizLoad = quizStatus.map((item,index) => (\r\n    //     <div key={index}>\r\n    //     {\r\n    //         (questions.push(item.question),\r\n    //         currentQuestion = questions[currentQuestionsIndex]\r\n\r\n    //         )\r\n    //     }\r\n    //     </div>\r\n    // ));\r\n    \r\n    useEffect(()=> {\r\n        quizRequest();\r\n        displayQuestions();\r\n    }, []);\r\n\r\n    const displayQuestions = () => {  \r\n        setCurrentQuestion(questions[currentQuestionIndex]);\r\n        setNextQuestion(questions[currentQuestionIndex + 1]);\r\n        setPreviousQuestion(questions[currentQuestionIndex -1]);\r\n        setAnswer(currentQuestion.answer);\r\n        setNumberOfQuestions(questions.length);\r\n    }\r\n    const endGame = () => {\r\n\r\n    }\r\n    const handleOptionClick = (e) => {\r\n        console.log(e.target.innerHTML.toLowerCase());\r\n        console.log(currentQuestion.answer);\r\n        setAnswer(currentQuestion.answer);\r\n        if (e.target.innerHTML.toLowerCase() === answer.toLowerCase())  {\r\n            clickCorrect();\r\n        }else {\r\n            clickWrong();\r\n        }\r\n    }\r\n    const clickCorrect = () => {\r\n        M.toast({\r\n            html: '정답입니다!',\r\n            classes: 'toast-valid',\r\n            displayLength: 1500\r\n        });\r\n        setScore(score+1);\r\n        setCorrectAnswers(correctAnswers+1);\r\n        setCurrentQuestionIndex(currentQuestionIndex+1);\r\n        setNumberOfAnswered(numberOfAnswered+1);\r\n        if (nextQuestion === undefined) {\r\n            endGame();\r\n        } else {\r\n            displayQuestions();\r\n        }\r\n    }\r\n    const clickWrong = () => {\r\n        navigator.vibrate(1000);\r\n        M.toast({\r\n            html: '틀렸습니다!',\r\n            classes: 'toast-invalid',\r\n            displayLength: 1500\r\n        });\r\n        setWrongAnswers(wrongAnswers+1);\r\n        setCurrentQuestionIndex(currentQuestionIndex+1);\r\n        setNumberOfAnswered(numberOfAnswered);\r\n        if (nextQuestion === undefined) {\r\n            endGame();\r\n        } else {\r\n            displayQuestions();\r\n        }\r\n    }\r\n    handleNextButtonClick = () => {\r\n        if (nextQuestion !== undefined) {\r\n            setcurrentQuestionIndex(currentQuestionIndex + 1);\r\n            displayQuestions();\r\n        }\r\n    };\r\n\r\n    handlePreviousButtonClick = () => {\r\n        this.playButtonSound();\r\n        if (this.state.previousQuestion !== undefined) {\r\n            this.setState(prevState => ({\r\n                currentQuestionIndex: prevState.currentQuestionIndex - 1\r\n            }), () => {\r\n                this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\r\n            });\r\n        }\r\n    };\r\n\r\n    handleQuitButtonClick = () => {\r\n        this.playButtonSound();\r\n        if (window.confirm('Are you sure you want to quit?')) {\r\n            this.props.history.push('/');\r\n        }\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <Helmet><title>Quiz Page</title></Helmet>\r\n            <div className = \"questions\">\r\n                <h2>오늘의 퀴즈</h2>\r\n                <div className = \"lifeline-container\">\r\n                    <p>\r\n                        <span className = \"mdi mdi-clock-outline mdi-24px\"></span>\r\n                        <span className = \"lifeline\">5</span>\r\n                    </p>\r\n                    <p>\r\n                        <span className = \"mdi mdi-clock-outline mdi-24px\"></span>\r\n                        <span className = \"lifeline\">5</span>\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <p>\r\n                        <span>1 of 10</span>\r\n                    </p>\r\n                </div>\r\n                <h5>{currentQuestion.question}</h5>\r\n                {console.log(currentQuestion.answer)}\r\n                <div className=\"options-container\">\r\n                    <p onClick={handleOptionClick} className=\"option\">{currentQuestion.optionA}</p>\r\n                    <p onClick={handleOptionClick} className=\"option\">{currentQuestion.optionB}</p>\r\n                </div>\r\n                <div className=\"options-container\">\r\n                    <p onClick={handleOptionClick} className=\"option\">{currentQuestion.optionC}</p>\r\n                    <p onClick={handleOptionClick} className=\"option\">{currentQuestion.optionD}</p>\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <button>이전</button>\r\n                    <button>다음</button>\r\n                    <button>나가기</button>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quizStatus: state.quiz.status.quizStatus,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        quizRequest: () => {\r\n            return dispatch(quizRequest());\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);"]},"metadata":{},"sourceType":"module"}