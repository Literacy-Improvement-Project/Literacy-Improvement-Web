{"ast":null,"code":"/* Kakao auth */\nimport * as types from \"./types\";\nconst initialState = {\n  kakakoAuth: {\n    status: \"INIT\"\n  },\n  kakaoLogin: {\n    status: \"INIT\"\n  },\n  register: {\n    status: \"INIT\",\n    error: -1\n  },\n  status: {\n    valid: false,\n    isLoggedIn: false,\n    currentUser: \"NONE\",\n    AUTHORIZE_CODE: \"INIT\"\n  }\n};\nexport default function kakaoAuth(state = initialState, action) {\n  switch (action.type) {\n    case types.KAKAO_AUTHORIZE:\n      console.log(\"KAKAO_AUTHORIZE\");\n      return { ...state,\n        kakakoAuth: {\n          status: \"WAITING\"\n        }\n      };\n\n    case types.KAKAO_AUTHORIZE_SUCCESS:\n      console.log(\"KAKAO_AUTHORIZE_SUCCESS\");\n      return { ...state,\n        kakakoAuth: {\n          status: \"SUCCESS\"\n        },\n        status: { ...state.status,\n          AUTHORIZE_CODE: action.code\n        }\n      };\n\n    case types.KAKAO_AUTHORIZE_FAILURE:\n      console.log(\"KAKAO_AUTHORIZE_FAILURE\");\n      return { ...state,\n        kakaoLogin: {\n          status: \"FAILURE\"\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/redux/kakaoAuth/reducer.js"],"names":["types","initialState","kakakoAuth","status","kakaoLogin","register","error","valid","isLoggedIn","currentUser","AUTHORIZE_CODE","kakaoAuth","state","action","type","KAKAO_AUTHORIZE","console","log","KAKAO_AUTHORIZE_SUCCESS","code","KAKAO_AUTHORIZE_FAILURE"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE;AADE,GADO;AAInBC,EAAAA,UAAU,EAAE;AACVD,IAAAA,MAAM,EAAE;AADE,GAJO;AAOnBE,EAAAA,QAAQ,EAAE;AACRF,IAAAA,MAAM,EAAE,MADA;AAERG,IAAAA,KAAK,EAAE,CAAC;AAFA,GAPS;AAWnBH,EAAAA,MAAM,EAAE;AACNI,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,UAAU,EAAE,KAFN;AAGNC,IAAAA,WAAW,EAAE,MAHP;AAINC,IAAAA,cAAc,EAAE;AAJV;AAXW,CAArB;AAmBA,eAAe,SAASC,SAAT,CAAmBC,KAAK,GAAGX,YAA3B,EAAyCY,MAAzC,EAAiD;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,KAAK,CAACe,eAAX;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,aAAO,EACL,GAAGL,KADE;AAELV,QAAAA,UAAU,EAAE;AACVC,UAAAA,MAAM,EAAE;AADE;AAFP,OAAP;;AAMF,SAAKH,KAAK,CAACkB,uBAAX;AACEF,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,aAAO,EACL,GAAGL,KADE;AAELV,QAAAA,UAAU,EAAE;AACVC,UAAAA,MAAM,EAAE;AADE,SAFP;AAKLA,QAAAA,MAAM,EAAE,EACN,GAAGS,KAAK,CAACT,MADH;AAENO,UAAAA,cAAc,EAAEG,MAAM,CAACM;AAFjB;AALH,OAAP;;AAUF,SAAKnB,KAAK,CAACoB,uBAAX;AACEJ,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,aAAO,EACL,GAAGL,KADE;AAELR,QAAAA,UAAU,EAAE;AACVD,UAAAA,MAAM,EAAE;AADE;AAFP,OAAP;;AAMF;AACE,aAAOS,KAAP;AA9BJ;AAgCD","sourcesContent":["/* Kakao auth */\r\nimport * as types from \"./types\";\r\n\r\nconst initialState = {\r\n  kakakoAuth: {\r\n    status: \"INIT\",\r\n  },\r\n  kakaoLogin: {\r\n    status: \"INIT\",\r\n  },\r\n  register: {\r\n    status: \"INIT\",\r\n    error: -1,\r\n  },\r\n  status: {\r\n    valid: false,\r\n    isLoggedIn: false,\r\n    currentUser: \"NONE\",\r\n    AUTHORIZE_CODE: \"INIT\",\r\n  },\r\n};\r\n\r\nexport default function kakaoAuth(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.KAKAO_AUTHORIZE:\r\n      console.log(\"KAKAO_AUTHORIZE\");\r\n      return {\r\n        ...state,\r\n        kakakoAuth: {\r\n          status: \"WAITING\",\r\n        },\r\n      };\r\n    case types.KAKAO_AUTHORIZE_SUCCESS:\r\n      console.log(\"KAKAO_AUTHORIZE_SUCCESS\");\r\n      return {\r\n        ...state,\r\n        kakakoAuth: {\r\n          status: \"SUCCESS\",\r\n        },\r\n        status: {\r\n          ...state.status,\r\n          AUTHORIZE_CODE: action.code,\r\n        },\r\n      };\r\n    case types.KAKAO_AUTHORIZE_FAILURE:\r\n      console.log(\"KAKAO_AUTHORIZE_FAILURE\");\r\n      return {\r\n        ...state,\r\n        kakaoLogin: {\r\n          status: \"FAILURE\",\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}