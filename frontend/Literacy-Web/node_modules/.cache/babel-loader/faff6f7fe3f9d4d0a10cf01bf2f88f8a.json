{"ast":null,"code":"import axios from \"axios\";\nimport { KAKAO_AUTHORIZE, KAKAO_AUTHORIZE_SUCCESS, KAKAO_AUTHORIZE_FAILURE, KAKAO_LOGOUT, KAKAO_VERIFICATION, KAKAO_VERIFICATION_SUCCESS, KAKAO_VERIFICATION_FAILURE } from \"./types\";\n/* KAKAO Authentication and Login */\n\nexport function kakaoAuthRequest(code) {\n  return async dispatch => {\n    // Inform Login API is starting\n    dispatch(kakaoAuth()); // API REQUEST\n\n    return await axios.get(\"http://localhost:8080/kakaoAuth/\", {\n      params: {\n        code: code\n      }\n    }).then(response => {\n      // SUCCEED\n      dispatch(kakaoAuthSuccess(response.data)); // 성공하면 사용자ID 받아오기\n\n      console.log(response.data);\n    }).catch(error => {\n      // FAILED\n      dispatch(kakaoAuthFailure());\n    });\n  };\n}\nexport function kakaoAuth() {\n  return {\n    type: KAKAO_AUTHORIZE\n  };\n}\nexport function kakaoAuthSuccess(userInfo) {\n  return {\n    type: KAKAO_AUTHORIZE_SUCCESS,\n    userInfo\n  };\n}\nexport function kakaoAuthFailure() {\n  return {\n    type: KAKAO_AUTHORIZE_FAILURE\n  };\n}\n/* Check Session KAKAO User */\n\nexport function checkSessionRequest() {\n  return dispatch => {\n    // inform Get Status API is starting\n    dispatch(checkSession());\n    return axios.get(\"http://localhost:8080/getInfo/\").then(response => {\n      dispatch(checkSessionSuccess(response.data)); //HTTP 틍신을 통해 userId을 빋이옴\n    }).catch(error => {\n      dispatch(checkSessionFailure());\n    });\n  };\n}\nexport function checkSession() {\n  return {\n    type: KAKAO_VERIFICATION\n  };\n}\nexport function checkSessionSuccess(userInfo) {\n  return {\n    type: KAKAO_VERIFICATION_SUCCESS,\n    userInfo\n  };\n}\nexport function checkSessionFailure() {\n  return {\n    type: KAKAO_VERIFICATION_FAILURE\n  };\n}\n/* KAKAO Logout */\n\nexport function kakaoLogoutRequest() {\n  return dispatch => {\n    return axios.post(\"http://localhost:8080/kakaoLogout\").then(response => {\n      dispatch(kakaoLogout());\n    });\n  };\n}\nexport function kakaoLogout() {\n  return {\n    type: KAKAO_LOGOUT\n  };\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/redux/kakaoAuth/actions.js"],"names":["axios","KAKAO_AUTHORIZE","KAKAO_AUTHORIZE_SUCCESS","KAKAO_AUTHORIZE_FAILURE","KAKAO_LOGOUT","KAKAO_VERIFICATION","KAKAO_VERIFICATION_SUCCESS","KAKAO_VERIFICATION_FAILURE","kakaoAuthRequest","code","dispatch","kakaoAuth","get","params","then","response","kakaoAuthSuccess","data","console","log","catch","error","kakaoAuthFailure","type","userInfo","checkSessionRequest","checkSession","checkSessionSuccess","checkSessionFailure","kakaoLogoutRequest","post","kakaoLogout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,eADF,EAEEC,uBAFF,EAGEC,uBAHF,EAIEC,YAJF,EAKEC,kBALF,EAMEC,0BANF,EAOEC,0BAPF,QAQO,SARP;AAUA;;AACA,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AACrC,SAAO,MAAOC,QAAP,IAAoB;AACzB;AACAA,IAAAA,QAAQ,CAACC,SAAS,EAAV,CAAR,CAFyB,CAIzB;;AACA,WAAO,MAAMX,KAAK,CACfY,GADU,CACN,kCADM,EAC8B;AACvCC,MAAAA,MAAM,EAAE;AACNJ,QAAAA,IAAI,EAAEA;AADA;AAD+B,KAD9B,EAMVK,IANU,CAMJC,QAAD,IAAc;AAClB;AACAL,MAAAA,QAAQ,CAACM,gBAAgB,CAACD,QAAQ,CAACE,IAAV,CAAjB,CAAR,CAFkB,CAGlB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACD,KAXU,EAYVG,KAZU,CAYHC,KAAD,IAAW;AAChB;AACAX,MAAAA,QAAQ,CAACY,gBAAgB,EAAjB,CAAR;AACD,KAfU,CAAb;AAgBD,GArBD;AAsBD;AAED,OAAO,SAASX,SAAT,GAAqB;AAC1B,SAAO;AACLY,IAAAA,IAAI,EAAEtB;AADD,GAAP;AAGD;AAED,OAAO,SAASe,gBAAT,CAA0BQ,QAA1B,EAAoC;AACzC,SAAO;AACLD,IAAAA,IAAI,EAAErB,uBADD;AAELsB,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASF,gBAAT,GAA4B;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEpB;AADD,GAAP;AAGD;AAED;;AACA,OAAO,SAASsB,mBAAT,GAA+B;AACpC,SAAQf,QAAD,IAAc;AACnB;AACAA,IAAAA,QAAQ,CAACgB,YAAY,EAAb,CAAR;AAEA,WAAO1B,KAAK,CACTY,GADI,CACA,gCADA,EAEJE,IAFI,CAEEC,QAAD,IAAc;AAClBL,MAAAA,QAAQ,CAACiB,mBAAmB,CAACZ,QAAQ,CAACE,IAAV,CAApB,CAAR,CADkB,CAC4B;AAC/C,KAJI,EAKJG,KALI,CAKGC,KAAD,IAAW;AAChBX,MAAAA,QAAQ,CAACkB,mBAAmB,EAApB,CAAR;AACD,KAPI,CAAP;AAQD,GAZD;AAaD;AAED,OAAO,SAASF,YAAT,GAAwB;AAC7B,SAAO;AACLH,IAAAA,IAAI,EAAElB;AADD,GAAP;AAGD;AAED,OAAO,SAASsB,mBAAT,CAA6BH,QAA7B,EAAuC;AAC5C,SAAO;AACLD,IAAAA,IAAI,EAAEjB,0BADD;AAELkB,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASI,mBAAT,GAA+B;AACpC,SAAO;AACLL,IAAAA,IAAI,EAAEhB;AADD,GAAP;AAGD;AAED;;AACA,OAAO,SAASsB,kBAAT,GAA8B;AACnC,SAAQnB,QAAD,IAAc;AACnB,WAAOV,KAAK,CAAC8B,IAAN,CAAW,mCAAX,EAAgDhB,IAAhD,CAAsDC,QAAD,IAAc;AACxEL,MAAAA,QAAQ,CAACqB,WAAW,EAAZ,CAAR;AACD,KAFM,CAAP;AAGD,GAJD;AAKD;AAED,OAAO,SAASA,WAAT,GAAuB;AAC5B,SAAO;AACLR,IAAAA,IAAI,EAAEnB;AADD,GAAP;AAGD","sourcesContent":["import axios from \"axios\";\nimport {\n  KAKAO_AUTHORIZE,\n  KAKAO_AUTHORIZE_SUCCESS,\n  KAKAO_AUTHORIZE_FAILURE,\n  KAKAO_LOGOUT,\n  KAKAO_VERIFICATION,\n  KAKAO_VERIFICATION_SUCCESS,\n  KAKAO_VERIFICATION_FAILURE,\n} from \"./types\";\n\n/* KAKAO Authentication and Login */\nexport function kakaoAuthRequest(code) {\n  return async (dispatch) => {\n    // Inform Login API is starting\n    dispatch(kakaoAuth());\n\n    // API REQUEST\n    return await axios\n      .get(\"http://localhost:8080/kakaoAuth/\", {\n        params: {\n          code: code,\n        },\n      })\n      .then((response) => {\n        // SUCCEED\n        dispatch(kakaoAuthSuccess(response.data));\n        // 성공하면 사용자ID 받아오기\n        console.log(response.data);\n      })\n      .catch((error) => {\n        // FAILED\n        dispatch(kakaoAuthFailure());\n      });\n  };\n}\n\nexport function kakaoAuth() {\n  return {\n    type: KAKAO_AUTHORIZE,\n  };\n}\n\nexport function kakaoAuthSuccess(userInfo) {\n  return {\n    type: KAKAO_AUTHORIZE_SUCCESS,\n    userInfo,\n  };\n}\n\nexport function kakaoAuthFailure() {\n  return {\n    type: KAKAO_AUTHORIZE_FAILURE,\n  };\n}\n\n/* Check Session KAKAO User */\nexport function checkSessionRequest() {\n  return (dispatch) => {\n    // inform Get Status API is starting\n    dispatch(checkSession());\n\n    return axios\n      .get(\"http://localhost:8080/getInfo/\")\n      .then((response) => {\n        dispatch(checkSessionSuccess(response.data)); //HTTP 틍신을 통해 userId을 빋이옴\n      })\n      .catch((error) => {\n        dispatch(checkSessionFailure());\n      });\n  };\n}\n\nexport function checkSession() {\n  return {\n    type: KAKAO_VERIFICATION,\n  };\n}\n\nexport function checkSessionSuccess(userInfo) {\n  return {\n    type: KAKAO_VERIFICATION_SUCCESS,\n    userInfo,\n  };\n}\n\nexport function checkSessionFailure() {\n  return {\n    type: KAKAO_VERIFICATION_FAILURE,\n  };\n}\n\n/* KAKAO Logout */\nexport function kakaoLogoutRequest() {\n  return (dispatch) => {\n    return axios.post(\"http://localhost:8080/kakaoLogout\").then((response) => {\n      dispatch(kakaoLogout());\n    });\n  };\n}\n\nexport function kakaoLogout() {\n  return {\n    type: KAKAO_LOGOUT,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}