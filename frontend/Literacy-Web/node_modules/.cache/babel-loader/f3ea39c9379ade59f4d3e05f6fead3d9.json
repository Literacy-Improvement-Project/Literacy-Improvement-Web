{"ast":null,"code":"import * as types from \"./types\";\nconst initialState = {\n  test: {\n    status: \"test\",\n    testId: \"INIT\"\n  }\n};\nexport default function authentication(state = initialState, action) {\n  switch (action.type) {\n    case types.TEST:\n      return { ...state,\n        test: {\n          status: \"WAITING\"\n        }\n      };\n\n    case types.TEST_SUCCESS:\n      return { ...state,\n        test: {\n          status: \"SUCCESS\",\n          testId: action.testId\n        }\n      };\n\n    case types.TEST_FAILURE:\n      return { ...state,\n        test: {\n          status: \"FAILURE\"\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Jyeo/Desktop/project/Literacy-Improvement-Project/Literacy-Improvement-Web/frontend/Literacy-Web/src/redux/test/reducer.js"],"names":["types","initialState","test","status","testId","authentication","state","action","type","TEST","TEST_SUCCESS","TEST_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,MADJ;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AADa,CAArB;AAOA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGL,YAAhC,EAA8CM,MAA9C,EAAsD;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACS,IAAX;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE;AADJ;AAFD,OAAP;;AAMF,SAAKH,KAAK,CAACU,YAAX;AACE,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,SADJ;AAEJC,UAAAA,MAAM,EAAEG,MAAM,CAACH;AAFX;AAFD,OAAP;;AAOF,SAAKJ,KAAK,CAACW,YAAX;AACE,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE;AADJ;AAFD,OAAP;;AAMF;AACE,aAAOG,KAAP;AAxBJ;AA0BD","sourcesContent":["import * as types from \"./types\";\r\n\r\nconst initialState = {\r\n  test: {\r\n    status: \"test\",\r\n    testId: \"INIT\",\r\n  },\r\n};\r\n\r\nexport default function authentication(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.TEST:\r\n      return {\r\n        ...state,\r\n        test: {\r\n          status: \"WAITING\",\r\n        },\r\n      };\r\n    case types.TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        test: {\r\n          status: \"SUCCESS\",\r\n          testId: action.testId,\r\n        },\r\n      };\r\n    case types.TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        test: {\r\n          status: \"FAILURE\",\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}