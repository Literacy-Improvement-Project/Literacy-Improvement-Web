{"ast":null,"code":"/* Kakao auth */\nimport * as types from \"./types\";\nconst initialState = {\n  kakakoAuth: {\n    status: \"INIT\"\n  },\n  kakaoLogin: {\n    status: \"INIT\"\n  },\n  register: {\n    status: \"INIT\",\n    error: -1\n  },\n  status: {\n    valid: false,\n    isLoggedIn: false,\n    userInfo: \"INIT\",\n    userId: \"INIT\"\n  },\n  code: \"INIT\"\n};\nexport default function kakaoAuth(state = initialState, action) {\n  switch (action.type) {\n    /* KAKAO Authentication and Login */\n    case types.KAKAO_AUTHORIZE:\n      return { ...state,\n        kakakoAuth: {\n          status: \"WAITING\"\n        },\n        kakaoLogin: {\n          status: \"WAITING\"\n        }\n      };\n\n    case types.KAKAO_AUTHORIZE_SUCCESS:\n      return { ...state,\n        kakakoAuth: {\n          status: \"SUCCESS\"\n        },\n        kakaoLogin: {\n          status: \"SUCCESS\"\n        },\n        status: { ...state.status,\n          isLoggedIn: true,\n          valid: true,\n          userId: action.userId\n        }\n      };\n\n    case types.KAKAO_AUTHORIZE_FAILURE:\n      return { ...state,\n        kakaoAuth: {\n          status: \"FAILURE\"\n        },\n        kakaoLogin: {\n          status: \"FAILURE\"\n        },\n        status: { ...state.status,\n          isLoggedIn: false,\n          valid: false\n        }\n      };\n\n    /* KAKAO LOGOUT */\n\n    case types.KAKAO_LOGOUT:\n      return { ...state,\n        kakakoAuth: {\n          status: \"INIT\"\n        },\n        kakaoLogin: {\n          status: \"INIT\"\n        },\n        status: {\n          valid: false,\n          isLoggedIn: false,\n          userId: \"INIT\"\n        }\n      };\n    // /* Check Session KAKAO Login info */\n    // case types.KAKAO_VERIFICATION:\n    //   return {\n    //     ...state,\n    //     status: {\n    //       ...state.status,\n    //     },\n    //   };\n    // case types.KAKAO_VERIFICATION_SUCCESS:\n    //   return {\n    //     ...state,\n    //     kakakoAuth: {\n    //       status: \"SUCCESS\",\n    //     },\n    //     kakaoLogin: {\n    //       status: \"SUCCESS\",\n    //     },\n    //     status: {\n    //       ...state.status,\n    //       isLoggedIn: true,\n    //       valid: true,\n    //       userId: action.userId,\n    //     },\n    //   };\n    // case types.KAKAO_VERIFICATION_FAILURE:\n    //   return {\n    //     ...state,\n    //     kakaoAuth: {\n    //       status: \"FAILURE\",\n    //     },\n    //     kakaoLogin: {\n    //       status: \"FAILURE\",\n    //     },\n    //     status: {\n    //       ...state.status,\n    //       isLoggedIn: false,\n    //       valid: false,\n    //     },\n    //   };\n\n    /* default */\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/redux/kakaoAuth/reducer.js"],"names":["types","initialState","kakakoAuth","status","kakaoLogin","register","error","valid","isLoggedIn","userInfo","userId","code","kakaoAuth","state","action","type","KAKAO_AUTHORIZE","KAKAO_AUTHORIZE_SUCCESS","KAKAO_AUTHORIZE_FAILURE","KAKAO_LOGOUT"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE;AADE,GADO;AAInBC,EAAAA,UAAU,EAAE;AACVD,IAAAA,MAAM,EAAE;AADE,GAJO;AAOnBE,EAAAA,QAAQ,EAAE;AACRF,IAAAA,MAAM,EAAE,MADA;AAERG,IAAAA,KAAK,EAAE,CAAC;AAFA,GAPS;AAWnBH,EAAAA,MAAM,EAAE;AACNI,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,UAAU,EAAE,KAFN;AAGNC,IAAAA,QAAQ,EAAE,MAHJ;AAINC,IAAAA,MAAM,EAAE;AAJF,GAXW;AAiBnBC,EAAAA,IAAI,EAAE;AAjBa,CAArB;AAoBA,eAAe,SAASC,SAAT,CAAmBC,KAAK,GAAGZ,YAA3B,EAAyCa,MAAzC,EAAiD;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKf,KAAK,CAACgB,eAAX;AACE,aAAO,EACL,GAAGH,KADE;AAELX,QAAAA,UAAU,EAAE;AACVC,UAAAA,MAAM,EAAE;AADE,SAFP;AAKLC,QAAAA,UAAU,EAAE;AACVD,UAAAA,MAAM,EAAE;AADE;AALP,OAAP;;AASF,SAAKH,KAAK,CAACiB,uBAAX;AACE,aAAO,EACL,GAAGJ,KADE;AAELX,QAAAA,UAAU,EAAE;AACVC,UAAAA,MAAM,EAAE;AADE,SAFP;AAKLC,QAAAA,UAAU,EAAE;AACVD,UAAAA,MAAM,EAAE;AADE,SALP;AAQLA,QAAAA,MAAM,EAAE,EACN,GAAGU,KAAK,CAACV,MADH;AAENK,UAAAA,UAAU,EAAE,IAFN;AAGND,UAAAA,KAAK,EAAE,IAHD;AAING,UAAAA,MAAM,EAAEI,MAAM,CAACJ;AAJT;AARH,OAAP;;AAeF,SAAKV,KAAK,CAACkB,uBAAX;AACE,aAAO,EACL,GAAGL,KADE;AAELD,QAAAA,SAAS,EAAE;AACTT,UAAAA,MAAM,EAAE;AADC,SAFN;AAKLC,QAAAA,UAAU,EAAE;AACVD,UAAAA,MAAM,EAAE;AADE,SALP;AAQLA,QAAAA,MAAM,EAAE,EACN,GAAGU,KAAK,CAACV,MADH;AAENK,UAAAA,UAAU,EAAE,KAFN;AAGND,UAAAA,KAAK,EAAE;AAHD;AARH,OAAP;;AAeF;;AACA,SAAKP,KAAK,CAACmB,YAAX;AACE,aAAO,EACL,GAAGN,KADE;AAELX,QAAAA,UAAU,EAAE;AACVC,UAAAA,MAAM,EAAE;AADE,SAFP;AAKLC,QAAAA,UAAU,EAAE;AACVD,UAAAA,MAAM,EAAE;AADE,SALP;AAQLA,QAAAA,MAAM,EAAE;AACNI,UAAAA,KAAK,EAAE,KADD;AAENC,UAAAA,UAAU,EAAE,KAFN;AAGNE,UAAAA,MAAM,EAAE;AAHF;AARH,OAAP;AAeF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACE,aAAOG,KAAP;AAvGJ;AAyGD","sourcesContent":["/* Kakao auth */\r\nimport * as types from \"./types\";\r\n\r\nconst initialState = {\r\n  kakakoAuth: {\r\n    status: \"INIT\",\r\n  },\r\n  kakaoLogin: {\r\n    status: \"INIT\",\r\n  },\r\n  register: {\r\n    status: \"INIT\",\r\n    error: -1,\r\n  },\r\n  status: {\r\n    valid: false,\r\n    isLoggedIn: false,\r\n    userInfo: \"INIT\",\r\n    userId: \"INIT\",\r\n  },\r\n  code: \"INIT\",\r\n};\r\n\r\nexport default function kakaoAuth(state = initialState, action) {\r\n  switch (action.type) {\r\n    /* KAKAO Authentication and Login */\r\n    case types.KAKAO_AUTHORIZE:\r\n      return {\r\n        ...state,\r\n        kakakoAuth: {\r\n          status: \"WAITING\",\r\n        },\r\n        kakaoLogin: {\r\n          status: \"WAITING\",\r\n        },\r\n      };\r\n    case types.KAKAO_AUTHORIZE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        kakakoAuth: {\r\n          status: \"SUCCESS\",\r\n        },\r\n        kakaoLogin: {\r\n          status: \"SUCCESS\",\r\n        },\r\n        status: {\r\n          ...state.status,\r\n          isLoggedIn: true,\r\n          valid: true,\r\n          userId: action.userId,\r\n        },\r\n      };\r\n    case types.KAKAO_AUTHORIZE_FAILURE:\r\n      return {\r\n        ...state,\r\n        kakaoAuth: {\r\n          status: \"FAILURE\",\r\n        },\r\n        kakaoLogin: {\r\n          status: \"FAILURE\",\r\n        },\r\n        status: {\r\n          ...state.status,\r\n          isLoggedIn: false,\r\n          valid: false,\r\n        },\r\n      };\r\n\r\n    /* KAKAO LOGOUT */\r\n    case types.KAKAO_LOGOUT:\r\n      return {\r\n        ...state,\r\n        kakakoAuth: {\r\n          status: \"INIT\",\r\n        },\r\n        kakaoLogin: {\r\n          status: \"INIT\",\r\n        },\r\n        status: {\r\n          valid: false,\r\n          isLoggedIn: false,\r\n          userId: \"INIT\",\r\n        },\r\n      };\r\n\r\n    // /* Check Session KAKAO Login info */\r\n    // case types.KAKAO_VERIFICATION:\r\n    //   return {\r\n    //     ...state,\r\n    //     status: {\r\n    //       ...state.status,\r\n    //     },\r\n    //   };\r\n    // case types.KAKAO_VERIFICATION_SUCCESS:\r\n    //   return {\r\n    //     ...state,\r\n    //     kakakoAuth: {\r\n    //       status: \"SUCCESS\",\r\n    //     },\r\n    //     kakaoLogin: {\r\n    //       status: \"SUCCESS\",\r\n    //     },\r\n    //     status: {\r\n    //       ...state.status,\r\n    //       isLoggedIn: true,\r\n    //       valid: true,\r\n    //       userId: action.userId,\r\n    //     },\r\n    //   };\r\n    // case types.KAKAO_VERIFICATION_FAILURE:\r\n    //   return {\r\n    //     ...state,\r\n    //     kakaoAuth: {\r\n    //       status: \"FAILURE\",\r\n    //     },\r\n    //     kakaoLogin: {\r\n    //       status: \"FAILURE\",\r\n    //     },\r\n    //     status: {\r\n    //       ...state.status,\r\n    //       isLoggedIn: false,\r\n    //       valid: false,\r\n    //     },\r\n    //   };\r\n\r\n    /* default */\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}