{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jyeo\\\\Desktop\\\\project\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\MainWordOfTheDay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n    // width: '100%',\n    // maxWidth: '100ch',\n    height: \"42ch\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #D9D9D9\"\n  },\n  inline: {\n    display: \"inline\"\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: \"center\",\n    // height: '7ch',\n    color: theme.palette.text.secondary,\n    display: \"flex\",\n    borderBottom: \"1px solid #D9D9D9\"\n  },\n  button: {\n    float: \"right\"\n  },\n  test: {\n    border: \"1px solid #D9D9D9\"\n  }\n}));\nexport default function MainWordOfTheDay({\n  dailyWordsList,\n  isLoggedIn\n}) {\n  _s();\n\n  let firstPageWordsList = [];\n  let secondPageWordsList = [];\n  const [dailyWordPage, setDailyWordPage] = useState(\"1\");\n  useEffect(() => {// 렌더링\n  }, []);\n  const classes = useStyles(); // 오늘의 단어 10개 5 / 5로 나눔\n\n  firstPageWordsList = dailyWordsList.slice(0, 5);\n  secondPageWordsList = dailyWordsList.slice(5, 11);\n\n  const onClickOneWord = word => {\n    window.location.replace(`/Word/${word}`);\n  };\n\n  const firstPageWords = firstPageWordsList.map((word, index) => /*#__PURE__*/_jsxDEV(Button, {\n    fullWidth: true,\n    onClick: () => onClickOneWord(word.word),\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          color: \"textPrimary\",\n          children: word.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          gutterBottom: true,\n          children: word.morpheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          color: \"textPrimary\",\n          children: word.mean\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this));\n  const secondPageWords = secondPageWordsList.map((word, index) => /*#__PURE__*/_jsxDEV(Button, {\n    fullWidth: true,\n    onClick: () => onClickOneWord(word.word),\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          color: \"textPrimary\",\n          children: word.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          gutterBottom: true,\n          children: word.morpheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          color: \"textPrimary\",\n          children: word.mean\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this));\n\n  const handleNextDailyWords = e => {\n    if (dailyWordPage === \"1\") {\n      setDailyWordPage(\"2\");\n    } else {\n      setDailyWordPage(\"1\");\n    }\n\n    console.log(dailyWordPage);\n  };\n\n  const gotoLogin = e => {\n    window.location.replace(\"/Login\");\n  };\n\n  const nextDailyWordButton = /*#__PURE__*/_jsxDEV(Button, {\n    color: \"primary\",\n    onClick: handleNextDailyWords,\n    variant: \"contained\",\n    children: \"\\uB2E4\\uC74C \\uB2E8\\uC5B4\\uBCF4\\uAE30\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n\n  const beforeDailyWordButton = /*#__PURE__*/_jsxDEV(Button, {\n    color: \"primary\",\n    onClick: handleNextDailyWords,\n    variant: \"contained\",\n    children: \"\\uC774\\uC804 \\uB2E8\\uC5B4\\uBCF4\\uAE30\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n\n  const dailyWord = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [dailyWordPage === \"1\" ? firstPageWords : secondPageWords, dailyWordPage === \"1\" ? nextDailyWordButton : beforeDailyWordButton]\n  }, void 0, true);\n\n  const requestLogin = /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: gotoLogin,\n      variant: \"contained\",\n      children: \"\\uB85C\\uADF8\\uC778 \\uD6C4 \\uC774\\uC6A9\\uD574 \\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this); // 사용자에게 보여지는 부분\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      direction: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uC624\\uB298\\uC758 \\uB2E8\\uC5B4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), isLoggedIn ? dailyWord : requestLogin]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainWordOfTheDay, \"p82gwN/tfVax1Zoe0q/CGadpETU=\", false, function () {\n  return [useStyles];\n});\n\n_c = MainWordOfTheDay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainWordOfTheDay\");","map":{"version":3,"sources":["C:/Users/Jyeo/Desktop/project/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/MainWordOfTheDay.js"],"names":["React","useEffect","useState","makeStyles","Grid","Button","Typography","useStyles","theme","root","paddingTop","spacing","paddingLeft","paddingRight","paddingBottom","height","backgroundColor","palette","background","paper","border","inline","display","textAlign","color","text","secondary","borderBottom","button","float","test","MainWordOfTheDay","dailyWordsList","isLoggedIn","firstPageWordsList","secondPageWordsList","dailyWordPage","setDailyWordPage","classes","slice","onClickOneWord","word","window","location","replace","firstPageWords","map","index","morpheme","mean","secondPageWords","handleNextDailyWords","e","console","log","gotoLogin","nextDailyWordButton","beforeDailyWordButton","dailyWord","requestLogin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {} from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n    // width: '100%',\r\n    // maxWidth: '100ch',\r\n    height: \"42ch\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  paper: {\r\n    // padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    // height: '7ch',\r\n    color: theme.palette.text.secondary,\r\n    display: \"flex\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n  },\r\n  button: {\r\n    float: \"right\",\r\n  },\r\n  test: {\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n}));\r\n\r\nexport default function MainWordOfTheDay({ dailyWordsList, isLoggedIn }) {\r\n  let firstPageWordsList = [];\r\n  let secondPageWordsList = [];\r\n  const [dailyWordPage, setDailyWordPage] = useState(\"1\");\r\n\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  // 오늘의 단어 10개 5 / 5로 나눔\r\n  firstPageWordsList = dailyWordsList.slice(0, 5);\r\n  secondPageWordsList = dailyWordsList.slice(5, 11);\r\n\r\n  const onClickOneWord = (word) => {\r\n    window.location.replace(`/Word/${word}`);\r\n  };\r\n\r\n  const firstPageWords = firstPageWordsList.map((word, index) => (\r\n    <Button fullWidth onClick={() => onClickOneWord(word.word)}>\r\n      <Grid item xs={12} className={classes.paper}>\r\n        <Grid item xs={3}>\r\n          <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\r\n            {word.word}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Typography variant=\"subtitle2\" gutterBottom>\r\n            {word.morpheme}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"body2\" gutterBottom color=\"textPrimary\">\r\n            {word.mean}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Button>\r\n  ));\r\n\r\n  const secondPageWords = secondPageWordsList.map((word, index) => (\r\n    <Button fullWidth onClick={() => onClickOneWord(word.word)}>\r\n      <Grid item xs={12} className={classes.paper}>\r\n        <Grid item xs={3}>\r\n          <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\r\n            {word.word}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Typography variant=\"subtitle2\" gutterBottom>\r\n            {word.morpheme}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"body2\" gutterBottom color=\"textPrimary\">\r\n            {word.mean}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Button>\r\n  ));\r\n\r\n  const handleNextDailyWords = (e) => {\r\n    if (dailyWordPage === \"1\") {\r\n      setDailyWordPage(\"2\");\r\n    } else {\r\n      setDailyWordPage(\"1\");\r\n    }\r\n    console.log(dailyWordPage);\r\n  };\r\n\r\n  const gotoLogin = (e) => {\r\n    window.location.replace(\"/Login\");\r\n  };\r\n\r\n  const nextDailyWordButton = (\r\n    <Button color=\"primary\" onClick={handleNextDailyWords} variant=\"contained\">\r\n      다음 단어보기\r\n    </Button>\r\n  );\r\n\r\n  const beforeDailyWordButton = (\r\n    <Button color=\"primary\" onClick={handleNextDailyWords} variant=\"contained\">\r\n      이전 단어보기\r\n    </Button>\r\n  );\r\n\r\n  const dailyWord = (\r\n    <>\r\n      {dailyWordPage === \"1\" ? firstPageWords : secondPageWords}\r\n      {dailyWordPage === \"1\" ? nextDailyWordButton : beforeDailyWordButton}\r\n    </>\r\n  );\r\n  const requestLogin = (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Button color=\"primary\" onClick={gotoLogin} variant=\"contained\">\r\n        로그인 후 이용해 주세요.\r\n      </Button>\r\n    </Grid>\r\n  );\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <h3>오늘의 단어</h3>\r\n        </Grid>\r\n        {isLoggedIn ? dailyWord : requestLogin}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}