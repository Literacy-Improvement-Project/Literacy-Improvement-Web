{"ast":null,"code":"/* LOGIN */\nimport * as types from \"./types\";\nconst initialState = {\n  login: {\n    status: \"INIT\"\n  },\n  register: {\n    status: \"INIT\",\n    error: -1\n  },\n  status: {\n    valid: false,\n    isLoggedIn: false,\n    currentUser: \"NONE\"\n  },\n  AUTHORIZE_CODE: \"INIT\"\n};\nexport default function authentication(state = initialState, action) {\n  switch (action.type) {\n    case types.LOGIN:\n      console.log(\"login_wait\");\n      return { ...state,\n        login: {\n          status: \"WAITING\"\n        }\n      };\n\n    case types.LOGIN_SUCCESS:\n      console.log(\"login_success\");\n      return { ...state,\n        login: {\n          status: \"SUCCESS\"\n        },\n        status: { ...state.status,\n          isLoggedIn: true,\n          currentUser: action.userId\n        }\n      };\n\n    case types.LOGIN_FAILURE:\n      console.log(\"login_failure\");\n      return { ...state,\n        login: {\n          status: \"FAILURE\"\n        }\n      };\n\n    default:\n      return state;\n\n    /* CHECK SESSIONS */\n\n    case types.USER_VERIFICATION:\n      return { ...state,\n        status: { ...state.status\n        }\n      };\n\n    case types.USER_VERIFICATION_SUCCESS:\n      return { ...state,\n        status: { ...state.status,\n          valid: true,\n          isLoggedIn: true,\n          currentUser: action.userId\n        }\n      };\n\n    case types.USER_VERIFICATION_FAILURE:\n      return { ...state,\n        status: { ...state.status,\n          valid: false,\n          isLoggedIn: false\n        }\n      };\n\n    /* LOGOUT */\n\n    case types.LOGOUT:\n      return { ...state,\n        status: { ...state.status,\n          valid: false,\n          isLoggedIn: false,\n          currentUser: \"NONE\"\n        }\n      };\n\n    case types.LOGIN:\n      console.log(\"login_wait\");\n      return { ...state,\n        login: {\n          status: \"WAITING\"\n        }\n      };\n\n    case types.LOGIN_SUCCESS:\n      console.log(\"login_success\");\n      return { ...state,\n        login: {\n          status: \"SUCCESS\"\n        },\n        status: { ...state.status,\n          isLoggedIn: true,\n          currentUser: action.userId\n        }\n      };\n\n    case types.LOGIN_FAILURE:\n      console.log(\"login_failure\");\n      return { ...state,\n        login: {\n          status: \"FAILURE\"\n        }\n      };\n  }\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/redux/authentication/reducer.js"],"names":["types","initialState","login","status","register","error","valid","isLoggedIn","currentUser","AUTHORIZE_CODE","authentication","state","action","type","LOGIN","console","log","LOGIN_SUCCESS","userId","LOGIN_FAILURE","USER_VERIFICATION","USER_VERIFICATION_SUCCESS","USER_VERIFICATION_FAILURE","LOGOUT"],"mappings":"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","sourcesContent":["/* LOGIN */\r\nimport * as types from \"./types\";\r\n\r\nconst initialState = {\r\n  login: {\r\n    status: \"INIT\",\r\n  },\r\n  register: {\r\n    status: \"INIT\",\r\n    error: -1,\r\n  },\r\n  status: {\r\n    valid: false,\r\n    isLoggedIn: false,\r\n    currentUser: \"NONE\",\r\n  },\r\n  AUTHORIZE_CODE: \"INIT\",\r\n};\r\n\r\nexport default function authentication(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.LOGIN:\r\n      console.log(\"login_wait\");\r\n      return {\r\n        ...state,\r\n        login: {\r\n          status: \"WAITING\",\r\n        },\r\n      };\r\n    case types.LOGIN_SUCCESS:\r\n      console.log(\"login_success\");\r\n      return {\r\n        ...state,\r\n        login: {\r\n          status: \"SUCCESS\",\r\n        },\r\n        status: {\r\n          ...state.status,\r\n          isLoggedIn: true,\r\n          currentUser: action.userId,\r\n        },\r\n      };\r\n    case types.LOGIN_FAILURE:\r\n      console.log(\"login_failure\");\r\n      return {\r\n        ...state,\r\n        login: {\r\n          status: \"FAILURE\",\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n    /* CHECK SESSIONS */\r\n    case types.USER_VERIFICATION:\r\n      return {\r\n        ...state,\r\n        status: {\r\n          ...state.status,\r\n        },\r\n      };\r\n    case types.USER_VERIFICATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        status: {\r\n          ...state.status,\r\n          valid: true,\r\n          isLoggedIn: true,\r\n          currentUser: action.userId,\r\n        },\r\n      };\r\n    case types.USER_VERIFICATION_FAILURE:\r\n      return {\r\n        ...state,\r\n        status: {\r\n          ...state.status,\r\n          valid: false,\r\n          isLoggedIn: false,\r\n        },\r\n      };\r\n    /* LOGOUT */\r\n    case types.LOGOUT:\r\n      return {\r\n        ...state,\r\n        status: {\r\n          ...state.status,\r\n          valid: false,\r\n          isLoggedIn: false,\r\n          currentUser: \"NONE\",\r\n        },\r\n      };\r\n    case types.LOGIN:\r\n      console.log(\"login_wait\");\r\n      return {\r\n        ...state,\r\n        login: {\r\n          status: \"WAITING\",\r\n        },\r\n      };\r\n    case types.LOGIN_SUCCESS:\r\n      console.log(\"login_success\");\r\n      return {\r\n        ...state,\r\n        login: {\r\n          status: \"SUCCESS\",\r\n        },\r\n        status: {\r\n          ...state.status,\r\n          isLoggedIn: true,\r\n          currentUser: action.userId,\r\n        },\r\n      };\r\n    case types.LOGIN_FAILURE:\r\n      console.log(\"login_failure\");\r\n      return {\r\n        ...state,\r\n        login: {\r\n          status: \"FAILURE\",\r\n        },\r\n      };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}