{"ast":null,"code":"import * as types from \"./types\";\nconst initialState = {\n  status: {\n    valid: false,\n    loading: false,\n    get: false,\n    quizStatus: []\n  }\n};\nexport default function quiz(state = initialState, action) {\n  switch (action.type) {\n    case types.GET_QUIZ_REQUEST:\n      return { ...state,\n        status: { ...state.status,\n          loading: true\n        }\n      };\n\n    case types.GET_QUIZ_REQUEST_SUCCESS:\n      return { ...state,\n        status: { ...state.status,\n          loading: false,\n          get: true,\n          valid: true,\n          quizzestatus: action.quizzes\n        }\n      };\n\n    case types.GET_QUIZ_REQUEST_FAILURE:\n      return { ...state,\n        status: { ...state.status,\n          get: false,\n          valid: false,\n          loading: false\n        }\n      };\n    // post quiz result\n\n    case types.POST_QUIZ_RESULT:\n      return { ...state,\n        status: { ...state.status,\n          loading: true\n        }\n      };\n\n    case types.POST_QUIZ_RESULT_SUCCESS:\n      return { ...state,\n        status: { ...state.status,\n          loading: false,\n          valid: true\n        }\n      };\n\n    case types.POST_QUIZ_RESULT_FAILURE:\n      return { ...state,\n        status: { ...state.status,\n          valid: false,\n          loading: false\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/redux/quiz/reducer.js"],"names":["types","initialState","status","valid","loading","get","quizStatus","quiz","state","action","type","GET_QUIZ_REQUEST","GET_QUIZ_REQUEST_SUCCESS","quizzestatus","quizzes","GET_QUIZ_REQUEST_FAILURE","POST_QUIZ_RESULT","POST_QUIZ_RESULT_SUCCESS","POST_QUIZ_RESULT_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,KADH;AAEJC,IAAAA,OAAO,EAAE,KAFL;AAGJC,IAAAA,GAAG,EAAE,KAHD;AAIJC,IAAAA,UAAU,EAAE;AAJR;AADS,CAArB;AASA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAGP,YAAtB,EAAoCQ,MAApC,EAA4C;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,KAAK,CAACW,gBAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHN,QAAAA,MAAM,EAAE,EACJ,GAAGM,KAAK,CAACN,MADL;AAEJE,UAAAA,OAAO,EAAE;AAFL;AAFL,OAAP;;AAOJ,SAAKJ,KAAK,CAACY,wBAAX;AACI,aAAO,EACH,GAAGJ,KADA;AAEHN,QAAAA,MAAM,EAAE,EACJ,GAAGM,KAAK,CAACN,MADL;AAEJE,UAAAA,OAAO,EAAE,KAFL;AAGJC,UAAAA,GAAG,EAAE,IAHD;AAIJF,UAAAA,KAAK,EAAE,IAJH;AAKJU,UAAAA,YAAY,EAAEJ,MAAM,CAACK;AALjB;AAFL,OAAP;;AAUJ,SAAKd,KAAK,CAACe,wBAAX;AACI,aAAO,EACH,GAAGP,KADA;AAEHN,QAAAA,MAAM,EAAE,EACJ,GAAGM,KAAK,CAACN,MADL;AAEJG,UAAAA,GAAG,EAAE,KAFD;AAGJF,UAAAA,KAAK,EAAE,KAHH;AAIJC,UAAAA,OAAO,EAAE;AAJL;AAFL,OAAP;AASJ;;AACA,SAAKJ,KAAK,CAACgB,gBAAX;AACI,aAAO,EACH,GAAGR,KADA;AAEHN,QAAAA,MAAM,EAAE,EACJ,GAAGM,KAAK,CAACN,MADL;AAEJE,UAAAA,OAAO,EAAE;AAFL;AAFL,OAAP;;AAOJ,SAAKJ,KAAK,CAACiB,wBAAX;AACI,aAAO,EACH,GAAGT,KADA;AAEHN,QAAAA,MAAM,EAAE,EACJ,GAAGM,KAAK,CAACN,MADL;AAEJE,UAAAA,OAAO,EAAE,KAFL;AAGJD,UAAAA,KAAK,EAAE;AAHH;AAFL,OAAP;;AAQJ,SAAKH,KAAK,CAACkB,wBAAX;AACI,aAAO,EACH,GAAGV,KADA;AAEHN,QAAAA,MAAM,EAAE,EACJ,GAAGM,KAAK,CAACN,MADL;AAEJC,UAAAA,KAAK,EAAE,KAFH;AAGJC,UAAAA,OAAO,EAAE;AAHL;AAFL,OAAP;;AAQJ;AACI,aAAOI,KAAP;AA1DR;AA4DH","sourcesContent":["import * as types from \"./types\";\r\n\r\nconst initialState = {\r\n    status: {\r\n        valid: false,\r\n        loading: false,\r\n        get: false,\r\n        quizStatus: [],\r\n    },\r\n};\r\n\r\nexport default function quiz(state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.GET_QUIZ_REQUEST:\r\n            return {\r\n                ...state,\r\n                status: {\r\n                    ...state.status,\r\n                    loading: true,\r\n                },\r\n            };\r\n        case types.GET_QUIZ_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: {\r\n                    ...state.status,\r\n                    loading: false,\r\n                    get: true,\r\n                    valid: true,\r\n                    quizzestatus: action.quizzes,\r\n                },\r\n            };\r\n        case types.GET_QUIZ_REQUEST_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: {\r\n                    ...state.status,\r\n                    get: false,\r\n                    valid: false,\r\n                    loading: false,\r\n                },\r\n            };\r\n        // post quiz result\r\n        case types.POST_QUIZ_RESULT:\r\n            return {\r\n                ...state,\r\n                status: {\r\n                    ...state.status,\r\n                    loading: true,\r\n                },\r\n            };\r\n        case types.POST_QUIZ_RESULT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: {\r\n                    ...state.status,\r\n                    loading: false,\r\n                    valid: true,\r\n                },\r\n            };\r\n        case types.POST_QUIZ_RESULT_FAILURE:\r\n            return {\r\n                ...state,\r\n                status: {\r\n                    ...state.status,\r\n                    valid: false,\r\n                    loading: false,\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}