{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\page\\\\TestMain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport TopBar from \"../components/TopBar\";\nimport WordOfTheDay from \"../components/WordOfTheDay\";\nimport ThemeWord from \"../components/ThemeWord\";\nimport Side from \"../components/Side\";\nimport { dailyWordsRequest } from \"../redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}));\n\nfunction TestMain({\n  dailyWordsList\n}) {\n  _s();\n\n  useEffect(() => {\n    // 렌더링\n    dailyWordsRequest();\n  }, []);\n  const classes = useStyles();\n  console.log(dailyWordsList); // 사용자에게 보여지는 부분\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 7,\n          children: /*#__PURE__*/_jsxDEV(WordOfTheDay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(ThemeWord, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Side, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TestMain, \"v7TDUGheAkBmKIQo9Gj65jeexyQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = TestMain;\n\nconst mapStateToProps = state => {\n  return {\n    // userID: state.authentication.status.currentUser,\n    dailyWordsList: state.dailyWords.status.dailyWordsList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    //   getMainRequest: (category) => {\n    //     return dispatch(getMainRequest(category));\n    //   }\n    dailyWordsRequest: () => {\n      return dispatch(dailyWordsRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestMain);\n\nvar _c;\n\n$RefreshReg$(_c, \"TestMain\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/page/TestMain.js"],"names":["React","useEffect","useState","useParams","connect","TopBar","WordOfTheDay","ThemeWord","Side","dailyWordsRequest","makeStyles","Grid","useStyles","theme","root","padding","spacing","TestMain","dailyWordsList","classes","console","log","mapStateToProps","state","dailyWords","status","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,iBAAT,QAAkC,UAAlC;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADL;AADiC,CAAZ,CAAD,CAA5B;;AAMA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAsC;AAAA;;AACpCjB,EAAAA,SAAS,CAAC,MAAM;AACd;AACAQ,IAAAA,iBAAiB;AAClB,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMU,OAAO,GAAGP,SAAS,EAAzB;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ,EARoC,CAUpC;;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEC,OAAO,CAACL,IAAxB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA7BQG,Q;UAMSL,S;;;KANTK,Q;;AA8BT,MAAMK,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACL;AACAL,IAAAA,cAAc,EAAEK,KAAK,CAACC,UAAN,CAAiBC,MAAjB,CAAwBP;AAFnC,GAAP;AAID,CALD;;AAOA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL;AACA;AACA;AACAlB,IAAAA,iBAAiB,EAAE,MAAM;AACvB,aAAOkB,QAAQ,CAAClB,iBAAiB,EAAlB,CAAf;AACD;AANI,GAAP;AAQD,CATD;;AAUA,eAAeL,OAAO,CAACkB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TopBar from \"../components/TopBar\";\r\nimport WordOfTheDay from \"../components/WordOfTheDay\";\r\nimport ThemeWord from \"../components/ThemeWord\";\r\nimport Side from \"../components/Side\";\r\nimport { dailyWordsRequest } from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction TestMain({ dailyWordsList }) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    dailyWordsRequest();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  console.log(dailyWordsList);\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <TopBar></TopBar>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={7}>\r\n            <WordOfTheDay></WordOfTheDay>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <ThemeWord></ThemeWord>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Side></Side>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // userID: state.authentication.status.currentUser,\r\n    dailyWordsList: state.dailyWords.status.dailyWordsList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //   getMainRequest: (category) => {\r\n    //     return dispatch(getMainRequest(category));\r\n    //   }\r\n    dailyWordsRequest: () => {\r\n      return dispatch(dailyWordsRequest());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestMain);\r\n"]},"metadata":{},"sourceType":"module"}