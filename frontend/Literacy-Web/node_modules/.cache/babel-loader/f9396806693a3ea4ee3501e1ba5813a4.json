{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createBrowserHistory } from \"history\";\n/* 여러 미들웨어를 추가할 수 있도록  함. */\n\n/* 필요한 미들웨어 추가 시 [ ] 안에 넣어주면 됨. */\n\nconst middleware = [logger, thunk, routerMiddleware(history)];\n/* 미들웨어  */\n\n/* ... 연산자는 껍데기를 빼고 내용물 집어넣음 */\n\n/* const store = createStore(rootReducer) */\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)));\nexport const history = createBrowserHistory();\nexport default store;","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/redux/store.js"],"names":["createStore","applyMiddleware","rootReducer","logger","thunk","composeWithDevTools","createBrowserHistory","middleware","routerMiddleware","history","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA;;AACA;;AACA,MAAMC,UAAU,GAAG,CAACJ,MAAD,EAASC,KAAT,EAAgBI,gBAAgB,CAACC,OAAD,CAAhC,CAAnB;AACA;;AACA;;AAEA;;AAEA,MAAMC,KAAK,GAAGV,WAAW,CACvBE,WADuB,EAEvBG,mBAAmB,CAACJ,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAFI,CAAzB;AAIA,OAAO,MAAME,OAAO,GAAGH,oBAAoB,EAApC;AACP,eAAeI,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\n/* 여러 미들웨어를 추가할 수 있도록  함. */\r\n/* 필요한 미들웨어 추가 시 [ ] 안에 넣어주면 됨. */\r\nconst middleware = [logger, thunk, routerMiddleware(history)];\r\n/* 미들웨어  */\r\n/* ... 연산자는 껍데기를 빼고 내용물 집어넣음 */\r\n\r\n/* const store = createStore(rootReducer) */\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport const history = createBrowserHistory();\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}