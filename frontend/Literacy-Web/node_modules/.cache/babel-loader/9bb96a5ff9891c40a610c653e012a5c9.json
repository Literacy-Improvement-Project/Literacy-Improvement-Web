{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\MainWordOfTheDay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, Typography, ButtonBase } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n    // width: '100%',\n    // maxWidth: '100ch',\n    height: \"42ch\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"20px\",\n    border: \"1px solid #D9D9D9\"\n  },\n  inline: {\n    display: \"inline\"\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: \"center\",\n    // height: '7ch',\n    color: theme.palette.text.secondary,\n    display: \"flex\",\n    borderBottom: \"1px solid #D9D9D9\"\n  },\n  button: {\n    float: \"right\"\n  },\n  test: {\n    border: \"1px solid #D9D9D9\"\n  }\n}));\nexport default function MainWordOfTheDay({\n  dailyWordsList,\n  isLoggedIn,\n  oneWordRequest\n}) {\n  _s();\n\n  let firstPageWordsList = [];\n  let secondPageWordsList = [];\n  const [dailyWordPage, setDailyWordPage] = useState(\"1\");\n  useEffect(() => {// 렌더링\n  }, []);\n  const classes = useStyles(); // 오늘의 단어 10개 5 / 5로 나눔\n\n  firstPageWordsList = dailyWordsList.slice(0, 5);\n  secondPageWordsList = dailyWordsList.slice(5, 11); // const firstPageWords = firstPageWordsList.map((word, index) => (\n  //   <Grid item xs={12} className={classes.paper}>\n  //     <Grid item xs={3}>\n  //       <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\n  //         {word.word}\n  //       </Typography>\n  //     </Grid>\n  //     <Grid item xs={3}>\n  //       <Typography variant=\"subtitle2\" gutterBottom>\n  //         {word.morpheme}\n  //       </Typography>\n  //     </Grid>\n  //     <Grid item xs={6}>\n  //       <Typography variant=\"body2\" gutterBottom color=\"textPrimary\">\n  //         {word.mean}\n  //       </Typography>\n  //     </Grid>\n  //   </Grid>\n  // ));\n\n  const firstPageWords = /*#__PURE__*/_jsxDEV(Button, {\n    fullWidth: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          color: \"textPrimary\",\n          children: \"\\uB2E8\\uC5B4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          gutterBottom: true,\n          children: \"\\uD615\\uD0DC\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          color: \"textPrimary\",\n          children: \"\\uB73B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n\n  const secondPageWords = secondPageWordsList.map((word, index) => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        color: \"textPrimary\",\n        children: word.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        children: word.morpheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        gutterBottom: true,\n        color: \"textPrimary\",\n        children: word.mean\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this));\n\n  const handleNextDailyWords = e => {\n    if (dailyWordPage === \"1\") {\n      setDailyWordPage(\"2\");\n    } else {\n      setDailyWordPage(\"1\");\n    }\n\n    console.log(dailyWordPage);\n  };\n\n  const gotoLogin = e => {\n    window.location.replace(\"/Login\");\n  };\n\n  const nextDailyWordButton = /*#__PURE__*/_jsxDEV(Button, {\n    color: \"primary\",\n    onClick: handleNextDailyWords,\n    variant: \"contained\",\n    children: \"\\uB2E4\\uC74C \\uB2E8\\uC5B4\\uBCF4\\uAE30\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n\n  const beforeDailyWordButton = /*#__PURE__*/_jsxDEV(Button, {\n    color: \"primary\",\n    onClick: handleNextDailyWords,\n    variant: \"contained\",\n    children: \"\\uC774\\uC804 \\uB2E8\\uC5B4\\uBCF4\\uAE30\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n\n  const dailyWord = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [dailyWordPage === \"1\" ? firstPageWords : secondPageWords, dailyWordPage === \"1\" ? nextDailyWordButton : beforeDailyWordButton]\n  }, void 0, true);\n\n  const requestLogin = /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: gotoLogin,\n      variant: \"contained\",\n      children: \"\\uB85C\\uADF8\\uC778 \\uD6C4 \\uC774\\uC6A9\\uD574 \\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this); // 사용자에게 보여지는 부분\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      direction: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uC624\\uB298\\uC758 \\uB2E8\\uC5B4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), isLoggedIn ? dailyWord : dailyWord]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainWordOfTheDay, \"p82gwN/tfVax1Zoe0q/CGadpETU=\", false, function () {\n  return [useStyles];\n});\n\n_c = MainWordOfTheDay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainWordOfTheDay\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/MainWordOfTheDay.js"],"names":["React","useEffect","useState","makeStyles","Grid","Button","Typography","ButtonBase","useStyles","theme","root","paddingTop","spacing","paddingLeft","paddingRight","paddingBottom","height","backgroundColor","palette","background","paper","borderRadius","border","inline","display","textAlign","color","text","secondary","borderBottom","button","float","test","MainWordOfTheDay","dailyWordsList","isLoggedIn","oneWordRequest","firstPageWordsList","secondPageWordsList","dailyWordPage","setDailyWordPage","classes","slice","firstPageWords","secondPageWords","map","word","index","morpheme","mean","handleNextDailyWords","e","console","log","gotoLogin","window","location","replace","nextDailyWordButton","beforeDailyWordButton","dailyWord","requestLogin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {} from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button, Typography, ButtonBase } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n    // width: '100%',\r\n    // maxWidth: '100ch',\r\n    height: \"42ch\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: \"20px\",\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  paper: {\r\n    // padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    // height: '7ch',\r\n    color: theme.palette.text.secondary,\r\n    display: \"flex\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n  },\r\n  button: {\r\n    float: \"right\",\r\n  },\r\n  test: {\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n}));\r\n\r\nexport default function MainWordOfTheDay({\r\n  dailyWordsList,\r\n  isLoggedIn,\r\n  oneWordRequest,\r\n}) {\r\n  let firstPageWordsList = [];\r\n  let secondPageWordsList = [];\r\n  const [dailyWordPage, setDailyWordPage] = useState(\"1\");\r\n\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  // 오늘의 단어 10개 5 / 5로 나눔\r\n  firstPageWordsList = dailyWordsList.slice(0, 5);\r\n  secondPageWordsList = dailyWordsList.slice(5, 11);\r\n\r\n  // const firstPageWords = firstPageWordsList.map((word, index) => (\r\n  //   <Grid item xs={12} className={classes.paper}>\r\n  //     <Grid item xs={3}>\r\n  //       <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\r\n  //         {word.word}\r\n  //       </Typography>\r\n  //     </Grid>\r\n  //     <Grid item xs={3}>\r\n  //       <Typography variant=\"subtitle2\" gutterBottom>\r\n  //         {word.morpheme}\r\n  //       </Typography>\r\n  //     </Grid>\r\n  //     <Grid item xs={6}>\r\n  //       <Typography variant=\"body2\" gutterBottom color=\"textPrimary\">\r\n  //         {word.mean}\r\n  //       </Typography>\r\n  //     </Grid>\r\n  //   </Grid>\r\n  // ));\r\n  const firstPageWords = (\r\n    <Button fullWidth>\r\n      <Grid item xs={12} className={classes.paper}>\r\n        <Grid item xs={3}>\r\n          <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\r\n            단어\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Typography variant=\"subtitle2\" gutterBottom>\r\n            형태소\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"body2\" gutterBottom color=\"textPrimary\">\r\n            뜻\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Button>\r\n  );\r\n  const secondPageWords = secondPageWordsList.map((word, index) => (\r\n    <Grid item xs={12} className={classes.paper}>\r\n      <Grid item xs={3}>\r\n        <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\r\n          {word.word}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        <Typography variant=\"subtitle2\" gutterBottom>\r\n          {word.morpheme}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body2\" gutterBottom color=\"textPrimary\">\r\n          {word.mean}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  ));\r\n\r\n  const handleNextDailyWords = (e) => {\r\n    if (dailyWordPage === \"1\") {\r\n      setDailyWordPage(\"2\");\r\n    } else {\r\n      setDailyWordPage(\"1\");\r\n    }\r\n    console.log(dailyWordPage);\r\n  };\r\n\r\n  const gotoLogin = (e) => {\r\n    window.location.replace(\"/Login\");\r\n  };\r\n\r\n  const nextDailyWordButton = (\r\n    <Button color=\"primary\" onClick={handleNextDailyWords} variant=\"contained\">\r\n      다음 단어보기\r\n    </Button>\r\n  );\r\n\r\n  const beforeDailyWordButton = (\r\n    <Button color=\"primary\" onClick={handleNextDailyWords} variant=\"contained\">\r\n      이전 단어보기\r\n    </Button>\r\n  );\r\n\r\n  const dailyWord = (\r\n    <>\r\n      {dailyWordPage === \"1\" ? firstPageWords : secondPageWords}\r\n      {dailyWordPage === \"1\" ? nextDailyWordButton : beforeDailyWordButton}\r\n    </>\r\n  );\r\n  const requestLogin = (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Button color=\"primary\" onClick={gotoLogin} variant=\"contained\">\r\n        로그인 후 이용해 주세요.\r\n      </Button>\r\n    </Grid>\r\n  );\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <h3>오늘의 단어</h3>\r\n        </Grid>\r\n        {isLoggedIn ? dailyWord : dailyWord}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}