{"ast":null,"code":"import axios from \"axios\";\nimport { LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE, USER_VERIFICATION, USER_VERIFICATION_SUCCESS, USER_VERIFICATION_FAILURE, LOGOUT } from \"./types\";\n/* LOGIN */\n\nexport function loginRequest(userId, userPassword) {\n  return dispatch => {\n    // Inform Login API is starting\n    dispatch(login());\n    let body = {\n      userId: userId,\n      userPassword: userPassword\n    }; // API REQUEST\n\n    return axios.post(\"http://localhost:8080/login\", body).then(response => {\n      // SUCCEED\n      dispatch(loginSuccess(userId));\n    }).catch(error => {\n      // FAILED\n      dispatch(loginFailure());\n    });\n  };\n}\nexport function login() {\n  return {\n    type: LOGIN\n  };\n}\nexport function loginSuccess(userId) {\n  return {\n    type: LOGIN_SUCCESS,\n    userId\n  };\n}\nexport function loginFailure() {\n  return {\n    type: LOGIN_FAILURE\n  };\n}\n/* GET STATUS */\n\nexport function checkUserRequest() {\n  return dispatch => {\n    // inform Get Status API is starting\n    dispatch(checkUser());\n    return axios.get(\"http://localhost:8080/checkUser\").then(response => {\n      dispatch(checkUserSuccess(response.data)); //HTTP 틍신을 통해 userId을 빋이옴\n    }).catch(error => {\n      dispatch(checkUserFailure());\n    });\n  };\n}\nexport function checkUser() {\n  return {\n    type: USER_VERIFICATION\n  };\n}\nexport function checkUserSuccess(userId) {\n  return {\n    type: USER_VERIFICATION_SUCCESS,\n    userId\n  };\n}\nexport function checkUserFailure() {\n  return {\n    type: USER_VERIFICATION_FAILURE\n  };\n}\n/* Logout */\n\nexport function logoutRequest() {\n  return dispatch => {\n    return axios.post(\"http://localhost:8080/logout\").then(response => {\n      dispatch(logout());\n    });\n  };\n}\nexport function logout() {\n  return {\n    type: LOGOUT\n  };\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/redux/authentication/actions.js"],"names":["axios","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","USER_VERIFICATION","USER_VERIFICATION_SUCCESS","USER_VERIFICATION_FAILURE","LOGOUT","loginRequest","userId","userPassword","dispatch","login","body","post","then","response","loginSuccess","catch","error","loginFailure","type","checkUserRequest","checkUser","get","checkUserSuccess","data","checkUserFailure","logoutRequest","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,iBAJF,EAKEC,yBALF,EAMEC,yBANF,EAOEC,MAPF,QAQO,SARP;AAUA;;AACA,OAAO,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,YAA9B,EAA4C;AACjD,SAAQC,QAAD,IAAc;AACnB;AACAA,IAAAA,QAAQ,CAACC,KAAK,EAAN,CAAR;AAEA,QAAIC,IAAI,GAAG;AACTJ,MAAAA,MAAM,EAAEA,MADC;AAETC,MAAAA,YAAY,EAAEA;AAFL,KAAX,CAJmB,CASnB;;AACA,WAAOV,KAAK,CACTc,IADI,CACC,6BADD,EACgCD,IADhC,EAEJE,IAFI,CAEEC,QAAD,IAAc;AAClB;AACAL,MAAAA,QAAQ,CAACM,YAAY,CAACR,MAAD,CAAb,CAAR;AACD,KALI,EAMJS,KANI,CAMGC,KAAD,IAAW;AAChB;AACAR,MAAAA,QAAQ,CAACS,YAAY,EAAb,CAAR;AACD,KATI,CAAP;AAUD,GApBD;AAqBD;AAED,OAAO,SAASR,KAAT,GAAiB;AACtB,SAAO;AACLS,IAAAA,IAAI,EAAEpB;AADD,GAAP;AAGD;AAED,OAAO,SAASgB,YAAT,CAAsBR,MAAtB,EAA8B;AACnC,SAAO;AACLY,IAAAA,IAAI,EAAEnB,aADD;AAELO,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASW,YAAT,GAAwB;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAElB;AADD,GAAP;AAGD;AAED;;AACA,OAAO,SAASmB,gBAAT,GAA4B;AACjC,SAAQX,QAAD,IAAc;AACnB;AACAA,IAAAA,QAAQ,CAACY,SAAS,EAAV,CAAR;AAEA,WAAOvB,KAAK,CACTwB,GADI,CACA,iCADA,EAEJT,IAFI,CAEEC,QAAD,IAAc;AAClBL,MAAAA,QAAQ,CAACc,gBAAgB,CAACT,QAAQ,CAACU,IAAV,CAAjB,CAAR,CADkB,CACyB;AAC5C,KAJI,EAKJR,KALI,CAKGC,KAAD,IAAW;AAChBR,MAAAA,QAAQ,CAACgB,gBAAgB,EAAjB,CAAR;AACD,KAPI,CAAP;AAQD,GAZD;AAaD;AAED,OAAO,SAASJ,SAAT,GAAqB;AAC1B,SAAO;AACLF,IAAAA,IAAI,EAAEjB;AADD,GAAP;AAGD;AAED,OAAO,SAASqB,gBAAT,CAA0BhB,MAA1B,EAAkC;AACvC,SAAO;AACLY,IAAAA,IAAI,EAAEhB,yBADD;AAELI,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASkB,gBAAT,GAA4B;AACjC,SAAO;AACLN,IAAAA,IAAI,EAAEf;AADD,GAAP;AAGD;AAED;;AACA,OAAO,SAASsB,aAAT,GAAyB;AAC9B,SAAQjB,QAAD,IAAc;AACnB,WAAOX,KAAK,CAACc,IAAN,CAAW,8BAAX,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AACnEL,MAAAA,QAAQ,CAACkB,MAAM,EAAP,CAAR;AACD,KAFM,CAAP;AAGD,GAJD;AAKD;AAED,OAAO,SAASA,MAAT,GAAkB;AACvB,SAAO;AACLR,IAAAA,IAAI,EAAEd;AADD,GAAP;AAGD","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  LOGIN,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  USER_VERIFICATION,\r\n  USER_VERIFICATION_SUCCESS,\r\n  USER_VERIFICATION_FAILURE,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\n/* LOGIN */\r\nexport function loginRequest(userId, userPassword) {\r\n  return (dispatch) => {\r\n    // Inform Login API is starting\r\n    dispatch(login());\r\n\r\n    let body = {\r\n      userId: userId,\r\n      userPassword: userPassword,\r\n    };\r\n\r\n    // API REQUEST\r\n    return axios\r\n      .post(\"http://localhost:8080/login\", body)\r\n      .then((response) => {\r\n        // SUCCEED\r\n        dispatch(loginSuccess(userId));\r\n      })\r\n      .catch((error) => {\r\n        // FAILED\r\n        dispatch(loginFailure());\r\n      });\r\n  };\r\n}\r\n\r\nexport function login() {\r\n  return {\r\n    type: LOGIN,\r\n  };\r\n}\r\n\r\nexport function loginSuccess(userId) {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    userId,\r\n  };\r\n}\r\n\r\nexport function loginFailure() {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n  };\r\n}\r\n\r\n/* GET STATUS */\r\nexport function checkUserRequest() {\r\n  return (dispatch) => {\r\n    // inform Get Status API is starting\r\n    dispatch(checkUser());\r\n\r\n    return axios\r\n      .get(\"http://localhost:8080/checkUser\")\r\n      .then((response) => {\r\n        dispatch(checkUserSuccess(response.data)); //HTTP 틍신을 통해 userId을 빋이옴\r\n      })\r\n      .catch((error) => {\r\n        dispatch(checkUserFailure());\r\n      });\r\n  };\r\n}\r\n\r\nexport function checkUser() {\r\n  return {\r\n    type: USER_VERIFICATION,\r\n  };\r\n}\r\n\r\nexport function checkUserSuccess(userId) {\r\n  return {\r\n    type: USER_VERIFICATION_SUCCESS,\r\n    userId,\r\n  };\r\n}\r\n\r\nexport function checkUserFailure() {\r\n  return {\r\n    type: USER_VERIFICATION_FAILURE,\r\n  };\r\n}\r\n\r\n/* Logout */\r\nexport function logoutRequest() {\r\n  return (dispatch) => {\r\n    return axios.post(\"http://localhost:8080/logout\").then((response) => {\r\n      dispatch(logout());\r\n    });\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return {\r\n    type: LOGOUT,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}