{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\quiz\\\\Quiz2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { postQuizResult, quizRequest } from \"../../redux\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./quiz.css\";\nimport QuizItem from \"./QuizItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Quiz2({\n  postQuizResult,\n  isLoggedIn,\n  quizStatus,\n  quizValid\n}) {\n  _s();\n\n  let quizList = [];\n  let quizTemp = [];\n  let maxNumQuiz = 0;\n  useEffect(() => {\n    // rendering\n    quizRequest();\n  }, []); // let quizStatus2 = [{\n  //   word: \"word1\",\n  //   word_mean: \"word_mean1\",\n  //   wrong_answer1: \"wrong_answer1\",\n  //   wrong_answer2: \"wrong_answer2\",\n  //   wrong_answer3: \"wrong_answer3\",\n  // }, {\n  //   word: \"word2\",\n  //   word_mean: \"word_mean2\",\n  //   wrong_answer1: \"wrong_answer1\",\n  //   wrong_answer2: \"wrong_answer2\",\n  //   wrong_answer3: \"wrong_answer3\",\n  // },\n  // {\n  //   word: \"word3\",\n  //   word_mean: \"word_mean3\",\n  //   wrong_answer1: \"wrong_answer1\",\n  //   wrong_answer2: \"wrong_answer2\",\n  //   wrong_answer3: \"wrong_answer3\",\n  // },]\n  // word,\n  // word_mean,\n  // wrong_answer1,\n  // wrong_answer2,\n  // wrong_answer3\n  // init quiz content\n\n  console.log(quizValid);\n\n  if (quizValid === true) {\n    quizList = quizStatus;\n    console.log(quizList);\n    maxNumQuiz = quizList.length;\n\n    function shuffle(array) {\n      array.sort(() => Math.random() - 0.5);\n    } // Quiz select shuffle\n\n\n    quizList.map((item, index) => quizTemp.push([item.word_mean, item.wrong_answer1, item.wrong_answer2, item.wrong_answer3]));\n    console.log(quizTemp);\n    quizTemp.map((i, index) => shuffle(i));\n  }\n\n  const requestLogin = /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: () => {\n        window.location.replace(\"/Login\");\n      },\n      variant: \"contained\",\n      children: \"\\uB85C\\uADF8\\uC778 \\uD6C4 \\uC774\\uC6A9\\uD574 \\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n\n  const showQuiz = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(QuizItem, {\n      quizList: quizList,\n      quizTemp: quizTemp,\n      maxNumQuiz: maxNumQuiz,\n      postQuizResult: postQuizResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n\n  const getQuizError = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz Request Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n\n  const checkQuizValid = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: quizValid ? showQuiz : getQuizError\n  }, void 0, false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quiz-title\",\n      children: \"Quiz Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"flicker-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eg-flick-container\",\n        children: isLoggedIn ? checkQuizValid : requestLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz2, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Quiz2;\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.kakaoAuth.status.isLoggedIn,\n    quizStatus: state.quiz.status.quizStatus,\n    quizValid: state.quiz.status.valid\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postQuizResult: score => {\n      return dispatch(postQuizResult(score));\n    },\n    quizRequest: () => {\n      return dispatch(quizRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz2);\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz2\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/quiz/Quiz2.js"],"names":["React","useEffect","useState","connect","useSelector","postQuizResult","quizRequest","Link","makeStyles","Grid","Button","Typography","ToastContainer","toast","Flip","QuizItem","Quiz2","isLoggedIn","quizStatus","quizValid","quizList","quizTemp","maxNumQuiz","console","log","length","shuffle","array","sort","Math","random","map","item","index","push","word_mean","wrong_answer1","wrong_answer2","wrong_answer3","i","requestLogin","window","location","replace","showQuiz","getQuizError","checkQuizValid","mapStateToProps","state","kakaoAuth","status","quiz","valid","mapDispatchToProps","dispatch","score"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { postQuizResult, quizRequest } from \"../../redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./quiz.css\";\r\nimport QuizItem from \"./QuizItem\";\r\n\r\n\r\nfunction Quiz2({ postQuizResult, isLoggedIn, quizStatus, quizValid }) {\r\n\r\n  let quizList = []\r\n  let quizTemp = []\r\n  let maxNumQuiz = 0\r\n\r\n  useEffect(() => {\r\n    // rendering\r\n    quizRequest();\r\n  }, [])\r\n\r\n  // let quizStatus2 = [{\r\n  //   word: \"word1\",\r\n  //   word_mean: \"word_mean1\",\r\n  //   wrong_answer1: \"wrong_answer1\",\r\n  //   wrong_answer2: \"wrong_answer2\",\r\n  //   wrong_answer3: \"wrong_answer3\",\r\n  // }, {\r\n  //   word: \"word2\",\r\n  //   word_mean: \"word_mean2\",\r\n  //   wrong_answer1: \"wrong_answer1\",\r\n  //   wrong_answer2: \"wrong_answer2\",\r\n  //   wrong_answer3: \"wrong_answer3\",\r\n  // },\r\n  // {\r\n  //   word: \"word3\",\r\n  //   word_mean: \"word_mean3\",\r\n  //   wrong_answer1: \"wrong_answer1\",\r\n  //   wrong_answer2: \"wrong_answer2\",\r\n  //   wrong_answer3: \"wrong_answer3\",\r\n  // },]\r\n\r\n  // word,\r\n  // word_mean,\r\n  // wrong_answer1,\r\n  // wrong_answer2,\r\n  // wrong_answer3\r\n\r\n  // init quiz content\r\n  console.log(quizValid)\r\n  if (quizValid === true){\r\n    quizList = quizStatus;\r\n    console.log(quizList)\r\n\r\n    maxNumQuiz = quizList.length\r\n\r\n    function shuffle(array) {\r\n      array.sort(() => Math.random() - 0.5);\r\n    }\r\n\r\n    // Quiz select shuffle\r\n    quizList.map((item, index) => (\r\n      quizTemp.push([item.word_mean, item.wrong_answer1,\r\n        item.wrong_answer2, item.wrong_answer3])\r\n    ))\r\n    console.log(quizTemp)\r\n    quizTemp.map((i, index) => (\r\n      shuffle(i)\r\n    ))\r\n  }\r\n\r\n\r\n  const requestLogin = (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Button color=\"primary\" onClick={() => {window.location.replace(\"/Login\");}} variant=\"contained\">\r\n        로그인 후 이용해 주세요.\r\n      </Button>\r\n    </Grid>\r\n  );\r\n\r\n\r\n  const showQuiz = (\r\n    <div>\r\n      <QuizItem \r\n      quizList={quizList}\r\n      quizTemp={quizTemp}\r\n      maxNumQuiz={maxNumQuiz} \r\n      postQuizResult={postQuizResult} ></QuizItem>\r\n    </div>\r\n  )\r\n\r\n\r\n  const getQuizError = (\r\n    <div>\r\n      <h2>Quiz Request Error</h2>\r\n    </div>\r\n  )\r\n\r\n  const checkQuizValid = (\r\n    <>\r\n      {quizValid ? showQuiz : getQuizError}\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"quiz-title\">Quiz Page</h2>\r\n      <div id=\"flicker-container\">\r\n        <div className=\"eg-flick-container\">\r\n          {isLoggedIn ? checkQuizValid : requestLogin}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.kakaoAuth.status.isLoggedIn,\r\n    quizStatus: state.quiz.status.quizStatus,\r\n    quizValid: state.quiz.status.valid,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    postQuizResult: (score) => {\r\n      return dispatch(postQuizResult(score));\r\n    },\r\n    quizRequest: () => {\r\n      return dispatch(quizRequest());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz2);"]},"metadata":{},"sourceType":"module"}