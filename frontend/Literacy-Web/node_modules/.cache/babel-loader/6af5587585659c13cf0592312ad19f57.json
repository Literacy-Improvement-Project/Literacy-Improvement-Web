{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\sentenceParaphrase\\\\SentenceParaphrase.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../../redux\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Typography } from \"@material-ui/core\";\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n    // padding: theme.spacing(10),\n    // width: '100%',\n    // maxWidth: '30ch',\n    height: \"42ch\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #D9D9D9\",\n    borderRadius: \"20px\"\n  },\n  test: {\n    // height: '50%',\n    float: \"right\" // border: '1px solid #D9D9D9',\n    // position: 'abolute',\n    // left: '50%',\n    // top: '50%',\n    // transform: 'translate(-50%, -50%)',\n    // display: 'flex',\n    // justifyContent: 'center',\n    // alignItems: 'center',\n\n  },\n  box: {\n    border: \"1px solid #D9D9D9\"\n  },\n  bottom: {\n    display: \"inline\",\n    borderBottom: \"1px solid #D9D9D9\"\n  }\n}));\nexport default function SentenceParaphrase({\n  onClickCheckParaphrase,\n  paraphraseCheckValid,\n  paraphraseResult\n}) {\n  _s();\n\n  useEffect(() => {// 렌더링\n  }, []);\n  const classes = useStyles();\n  const [userSentence, setUserSentence] = useState(\"\");\n  const paraphraseCheckResult = useSelector(state => state.paraphrase.status.result);\n\n  const handleChange = ({\n    target\n  }) => {\n    setUserSentence(target.value);\n  };\n\n  let exampleSentence = \"성탄 전야 미사를 집전하며 프란치스코 교황이 전한 메시지는 '어린이를 향한 관심'입니다.\";\n\n  const checkParaphrase = e => {\n    let body = {\n      sentence1: exampleSentence,\n      sentence2: userSentence\n    };\n    onClickCheckParaphrase(body);\n  };\n\n  if (paraphraseCheckResult === \"paraphrase\") {\n    exampleSentence = \"거짓을 행하는 자는 내 집 안에 거주하지 못하며 거짓말하는 자는 내 목전에 서지 못하리로다.\";\n  } // const checkResultParaphrase = <div style=\"color: #0A0\">같은 의미입니다!</div>;\n  // const checkResultNonParaphrase = (\n  //   <div style=\"color: #0A0\">다른 의미입니다. 다시 입력해 주세요.</div>\n  // );\n  // const checkResult =\n  //   paraphraseResult === \"paraphrase\"\n  //     ? checkResultParaphrase\n  //     : checkResultNonParaphrase;\n  // // hanspell-example.js\n  // const hanspell = require(\"hanspell\");\n  // const sentence = \"리랜드는 얼굴 골격이 굵은게,\";\n  // const end = function () {\n  //   console.log(\"// check ends\");\n  // };\n  // const error = function (err) {\n  //   console.error(\"// error: \" + err);\n  // };\n  // hanspell.spellCheckByDAUM(sentence, 6000, console.log, end, error);\n  // hanspell.spellCheckByPNU(sentence, 6000, console.log, end, error);\n  // 사용자에게 보여지는 부분\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uBC14\\uAFD4\\uC4F0\\uAE30(Paraphrasing)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: exampleSentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-textarea\",\n        multiline: true,\n        label: \"\\uAC19\\uC740 \\uB73B\\uC758 \\uBB38\\uC7A5\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n        name: \"sentence\",\n        autoFocus: true,\n        fullWidth: true,\n        value: userSentence,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: checkParaphrase,\n          variant: \"contained\",\n          children: \"\\uD655\\uC778\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true,\n      transition: Flip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SentenceParaphrase, \"9WcXdR2O/Zshil4WUxn2xBfJjac=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = SentenceParaphrase;\n\nvar _c;\n\n$RefreshReg$(_c, \"SentenceParaphrase\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/sentenceParaphrase/SentenceParaphrase.js"],"names":["React","useEffect","useState","useSelector","makeStyles","Grid","TextField","Button","Typography","ToastContainer","toast","Flip","useStyles","theme","root","paddingTop","spacing","paddingLeft","paddingRight","paddingBottom","height","backgroundColor","palette","background","paper","border","borderRadius","test","float","box","bottom","display","borderBottom","SentenceParaphrase","onClickCheckParaphrase","paraphraseCheckValid","paraphraseResult","classes","userSentence","setUserSentence","paraphraseCheckResult","state","paraphrase","status","result","handleChange","target","value","exampleSentence","checkParaphrase","e","body","sentence1","sentence2"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {} from \"../../redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n\r\n    // padding: theme.spacing(10),\r\n    // width: '100%',\r\n    // maxWidth: '30ch',\r\n    height: \"42ch\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #D9D9D9\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  test: {\r\n    // height: '50%',\r\n    float: \"right\",\r\n    // border: '1px solid #D9D9D9',\r\n    // position: 'abolute',\r\n    // left: '50%',\r\n    // top: '50%',\r\n    // transform: 'translate(-50%, -50%)',\r\n\r\n    // display: 'flex',\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n  },\r\n  box: {\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  bottom: {\r\n    display: \"inline\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n  },\r\n}));\r\n\r\nexport default function SentenceParaphrase({\r\n  onClickCheckParaphrase,\r\n  paraphraseCheckValid,\r\n  paraphraseResult,\r\n}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  const [userSentence, setUserSentence] = useState(\"\");\r\n  const paraphraseCheckResult = useSelector(\r\n    (state) => state.paraphrase.status.result\r\n  );\r\n\r\n  const handleChange = ({ target }) => {\r\n    setUserSentence(target.value);\r\n  };\r\n\r\n  let exampleSentence =\r\n    \"성탄 전야 미사를 집전하며 프란치스코 교황이 전한 메시지는 '어린이를 향한 관심'입니다.\";\r\n\r\n  const checkParaphrase = (e) => {\r\n    let body = {\r\n      sentence1: exampleSentence,\r\n      sentence2: userSentence,\r\n    };\r\n\r\n    onClickCheckParaphrase(body);\r\n  };\r\n\r\n  if (paraphraseCheckResult === \"paraphrase\") {\r\n    exampleSentence =\r\n      \"거짓을 행하는 자는 내 집 안에 거주하지 못하며 거짓말하는 자는 내 목전에 서지 못하리로다.\";\r\n  }\r\n  // const checkResultParaphrase = <div style=\"color: #0A0\">같은 의미입니다!</div>;\r\n  // const checkResultNonParaphrase = (\r\n  //   <div style=\"color: #0A0\">다른 의미입니다. 다시 입력해 주세요.</div>\r\n  // );\r\n  // const checkResult =\r\n  //   paraphraseResult === \"paraphrase\"\r\n  //     ? checkResultParaphrase\r\n  //     : checkResultNonParaphrase;\r\n\r\n  // // hanspell-example.js\r\n  // const hanspell = require(\"hanspell\");\r\n\r\n  // const sentence = \"리랜드는 얼굴 골격이 굵은게,\";\r\n  // const end = function () {\r\n  //   console.log(\"// check ends\");\r\n  // };\r\n  // const error = function (err) {\r\n  //   console.error(\"// error: \" + err);\r\n  // };\r\n\r\n  // hanspell.spellCheckByDAUM(sentence, 6000, console.log, end, error);\r\n  // hanspell.spellCheckByPNU(sentence, 6000, console.log, end, error);\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <h3>바꿔쓰기(Paraphrasing)</h3>\r\n        </Grid>\r\n        <h5>{exampleSentence}</h5>\r\n        <TextField\r\n          id=\"standard-textarea\"\r\n          multiline\r\n          label=\"같은 뜻의 문장을 입력하세요.\"\r\n          name=\"sentence\"\r\n          autoFocus\r\n          fullWidth\r\n          value={userSentence}\r\n          onChange={handleChange}\r\n        />\r\n        <Grid item>\r\n          <Button color=\"primary\" onClick={checkParaphrase} variant=\"contained\">\r\n            확인하기\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}