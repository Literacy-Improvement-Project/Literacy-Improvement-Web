{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jyeo\\\\Desktop\\\\project\\\\Literacy-Improvement-Project\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\WordMeaning\\\\MainWordMeaning.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Divider, TextField } from \"@material-ui/core\";\nimport \"./MainWordMeaning.css\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport { morphemeCheckRequest } from '../../redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainWordMeaning({\n  handleOneWord,\n  wordStatus,\n  handleMorpheme,\n  item\n}) {\n  _s();\n\n  const [checked, setChecked] = useState(false); // const [search, setSearch] = useState(null);\n  // const [search, setSearch] = useState(\"\");\n\n  const [searchBox, setSearchBox] = useState(\"\"); //let searchBox;\n\n  const handleChange = ({\n    target\n  }) => {\n    //searchBox = target.value;\n    setSearchBox(target.value);\n    console.log(searchBox);\n  };\n\n  const checkMorpheme = e => {\n    // setSearch(searchBox);\n    handleMorpheme(searchBox); // console.log(search)\n\n    setChecked(true);\n  };\n\n  const searchOneWord = () => {\n    handleOneWord(searchBox);\n    setChecked(true);\n  };\n\n  let wordName = [];\n  const itemLoad = wordStatus.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: wordName.push(item.word)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this));\n  const morpheme = {\n    pos: [],\n    name: []\n  };\n\n  const morphemeLoad = () => {\n    for (let i = 0; i < item.length; i++) {\n      if (i % 2 == 0) {\n        morpheme.pos.push(item[i]);\n      } else {\n        morpheme.name.push(item[i]);\n      }\n    }\n  };\n\n  const searchPage = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputs\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" \\uBB38\\uC7A5 / \\uB2E8\\uC5B4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: \"search\",\n      id: \"filled-basic\",\n      label: \"\\uC6D0\\uD558\\uB294 \\uB2E8\\uC5B4\\uB098 \\uBB38\\uC7A5\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n      value: searchBox,\n      autoFocus: true,\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search_button\",\n      onClick: checkMorpheme,\n      children: \"\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n\n  ;\n  const searchSuccess = morpheme.pos.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        margineft: 10\n      },\n      children: [\"[\", morpheme.pos, \"] \", morpheme.name[index]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/Word/${searchBox}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchOneWord,\n        children: \"\\uB354 \\uC54C\\uC544\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title\",\n      children: \" \\uC774\\uAC74 \\uBB34\\uC2A8 \\uB73B\\uC774\\uC9C0? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: searchPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: !checked ? null : searchSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainWordMeaning, \"fgg0x4dkHT2rM2iq6TTvtdKasD8=\");\n\n_c = MainWordMeaning;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainWordMeaning\");","map":{"version":3,"sources":["C:/Users/Jyeo/Desktop/project/Literacy-Improvement-Project/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/WordMeaning/MainWordMeaning.js"],"names":["React","useState","Button","Divider","TextField","Grid","Link","morphemeCheckRequest","MainWordMeaning","handleOneWord","wordStatus","handleMorpheme","item","checked","setChecked","searchBox","setSearchBox","handleChange","target","value","console","log","checkMorpheme","e","searchOneWord","wordName","itemLoad","map","index","push","word","morpheme","pos","name","morphemeLoad","i","length","searchPage","searchSuccess","margineft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,SAA1B,QAA2C,mBAA3C;AACA,OAAO,uBAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,oBAAT,QAAqC,aAArC;;AAEA,eAAe,SAASC,eAAT,CAAyB;AACtCC,EAAAA,aADsC;AAEtCC,EAAAA,UAFsC;AAGtCC,EAAAA,cAHsC;AAItCC,EAAAA;AAJsC,CAAzB,EAKZ;AAAA;;AACD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC,CADC,CAED;AACA;;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C,CAJC,CAKD;;AACA,QAAMgB,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACnC;AACAF,IAAAA,YAAY,CAACE,MAAM,CAACC,KAAR,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACD,GAJD;;AAMA,QAAMO,aAAa,GAAIC,CAAD,IAAO;AAC3B;AACAZ,IAAAA,cAAc,CAACI,SAAD,CAAd,CAF2B,CAG3B;;AACAD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GALD;;AAMA,QAAMU,aAAa,GAAG,MAAM;AAC1Bf,IAAAA,aAAa,CAACM,SAAD,CAAb;AACAD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHD;;AAKA,MAAIW,QAAQ,GAAG,EAAf;AACA,QAAMC,QAAQ,GACZhB,UAAU,CAACiB,GAAX,CAAe,CAACf,IAAD,EAAOgB,KAAP,kBACb;AAAA,cAGMH,QAAQ,CAACI,IAAT,CAAcjB,IAAI,CAACkB,IAAnB;AAHN,KAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAWA,QAAMG,QAAQ,GAAG;AACfC,IAAAA,GAAG,EAAE,EADU;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAAjB;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACzB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,IAAI,CAACwB,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,UAAIA,CAAC,GAAG,CAAJ,IAAS,CAAb,EAAgB;AACdJ,QAAAA,QAAQ,CAACC,GAAT,CAAaH,IAAb,CAAkBjB,IAAI,CAACuB,CAAD,CAAtB;AACD,OAFD,MAGK;AACHJ,QAAAA,QAAQ,CAACE,IAAT,CAAcJ,IAAd,CAAmBjB,IAAI,CAACuB,CAAD,CAAvB;AACD;AACF;AACF,GATD;;AAWA,QAAME,UAAU,gBAEZ;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,EAAE,EAAC,cAFL;AAGE,MAAA,KAAK,EAAC,iGAHR;AAIE,MAAA,KAAK,EAAEtB,SAJT;AAKE,MAAA,SAAS,MALX;AAME,MAAA,QAAQ,EAAGQ,CAAD,IAAON,YAAY,CAACM,CAAD;AAN/B;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,OAAO,EAAED,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;;AAoBE;AACF,QAAMgB,aAAa,GACjBP,QAAQ,CAACC,GAAT,CAAaL,GAAb,CAAiB,CAACf,IAAD,EAAOgB,KAAP,kBACf;AAAA,4BACE;AAAI,MAAA,KAAK,EAAE;AAAEW,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA,sBAAgCR,QAAQ,CAACC,GAAzC,QAAgDD,QAAQ,CAACE,IAAT,CAAcL,KAAd,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,SAAQb,SAAU,EAA7B;AAAA,6BACE;AAEE,QAAA,OAAO,EAAES,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,KAAUI,KAAV;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAeA,sBAEE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,kBACGS;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,kBACG,CAACxB,OAAD,GAAW,IAAX,GAAkByB;AADrB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAgBD;;GA5GuB9B,e;;KAAAA,e","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Divider, TextField } from \"@material-ui/core\";\r\nimport \"./MainWordMeaning.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link } from 'react-router-dom';\r\nimport { morphemeCheckRequest } from '../../redux';\r\n\r\nexport default function MainWordMeaning({\r\n  handleOneWord,\r\n  wordStatus,\r\n  handleMorpheme,\r\n  item,\r\n}) {\r\n  const [checked, setChecked] = useState(false);\r\n  // const [search, setSearch] = useState(null);\r\n  // const [search, setSearch] = useState(\"\");\r\n  const [searchBox, setSearchBox] = useState(\"\");\r\n  //let searchBox;\r\n  const handleChange = ({ target }) => {\r\n    //searchBox = target.value;\r\n    setSearchBox(target.value);\r\n    console.log(searchBox)\r\n  }\r\n\r\n  const checkMorpheme = (e) => {\r\n    // setSearch(searchBox);\r\n    handleMorpheme(searchBox);\r\n    // console.log(search)\r\n    setChecked(true);\r\n  }\r\n  const searchOneWord = () => {\r\n    handleOneWord(searchBox);\r\n    setChecked(true);\r\n  }\r\n\r\n  let wordName = [];\r\n  const itemLoad = (\r\n    wordStatus.map((item, index) => (\r\n      <div key={index} >\r\n        {\r\n          (\r\n            wordName.push(item.word)\r\n          )}\r\n      </div>\r\n    )\r\n    ))\r\n\r\n  const morpheme = {\r\n    pos: [],\r\n    name: [],\r\n  }\r\n\r\n  const morphemeLoad = () => {\r\n    for (let i = 0; i < item.length; i++) {\r\n      if (i % 2 == 0) {\r\n        morpheme.pos.push(item[i]);\r\n      }\r\n      else {\r\n        morpheme.name.push(item[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  const searchPage = (\r\n    (\r\n      <div className=\"inputs\">\r\n        <div> 문장 / 단어</div>\r\n        <TextField\r\n          className=\"search\"\r\n          id=\"filled-basic\"\r\n          label=\"원하는 단어나 문장을 입력해 주세요.\"\r\n          value={searchBox}\r\n          autoFocus\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        <button\r\n          className=\"search_button\"\r\n          onClick={checkMorpheme}\r\n        >\r\n          검색\r\n        </button>\r\n      </div>\r\n    )\r\n  );;\r\n  const searchSuccess = (\r\n    morpheme.pos.map((item, index) => (\r\n      <div key={index}>\r\n        <h1 style={{ margineft: 10 }}>[{morpheme.pos}] {morpheme.name[index]}</h1>\r\n        <Link to={`/Word/${searchBox}`}>\r\n          <button\r\n\r\n            onClick={searchOneWord}\r\n          >\r\n            더 알아보기\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    ))\r\n  );\r\n  return (\r\n\r\n    <div className=\"header\">\r\n      <span className=\"title\"> 이건 무슨 뜻이지? </span>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          {searchPage}\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          {!checked ? null : searchSuccess}\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}