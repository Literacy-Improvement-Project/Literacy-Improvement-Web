{"ast":null,"code":"/* Kakao auth */\nimport * as types from \"./types\";\nconst initialState = {\n  kakakoAuth: {\n    status: \"INIT\"\n  },\n  kakaoLogin: {\n    status: \"INIT\"\n  },\n  register: {\n    status: \"INIT\",\n    error: -1\n  },\n  status: {\n    valid: false,\n    isLoggedIn: false,\n    userInfo: []\n  },\n  code: \"INIT\"\n};\nexport default function kakaoAuth(state = initialState, action) {\n  switch (action.type) {\n    /* KAKAO Authentication and Login */\n    case types.KAKAO_AUTHORIZE:\n      return { ...state,\n        kakakoAuth: {\n          status: \"WAITING\"\n        },\n        kakaoLogin: {\n          status: \"WAITING\"\n        }\n      };\n\n    case types.KAKAO_AUTHORIZE_SUCCESS:\n      return { ...state,\n        kakakoAuth: {\n          status: \"SUCCESS\"\n        },\n        kakaoLogin: {\n          status: \"SUCCESS\"\n        },\n        status: { ...state.status,\n          isLoggedIn: true,\n          valid: true,\n          userInfo: action.userInfo\n        }\n      };\n\n    case types.KAKAO_AUTHORIZE_FAILURE:\n      return { ...state,\n        kakaoAuth: {\n          status: \"FAILURE\"\n        },\n        kakaoLogin: {\n          status: \"FAILURE\"\n        },\n        status: { ...state.status,\n          isLoggedIn: false,\n          valid: false\n        }\n      };\n\n    /* KAKAO LOGOUT */\n\n    case types.KAKAO_LOGOUT:\n      return { ...state,\n        kakakoAuth: {\n          status: \"INIT\"\n        },\n        kakaoLogin: {\n          status: \"INIT\"\n        },\n        status: {\n          valid: false,\n          isLoggedIn: false,\n          userInfo: \"INIT\"\n        }\n      };\n    // /* Check Session KAKAO Login info */\n\n    case types.KAKAO_VERIFICATION:\n      return { ...state,\n        status: { ...state.status\n        }\n      };\n\n    case types.KAKAO_VERIFICATION_SUCCESS:\n      return { ...state,\n        kakakoAuth: {\n          status: \"SUCCESS\"\n        },\n        kakaoLogin: {\n          status: \"SUCCESS\"\n        },\n        status: { ...state.status,\n          isLoggedIn: true,\n          valid: true,\n          userInfo: action.userInfo\n        }\n      };\n\n    case types.KAKAO_VERIFICATION_FAILURE:\n      return { ...state,\n        kakaoAuth: {\n          status: \"FAILURE\"\n        },\n        kakaoLogin: {\n          status: \"FAILURE\"\n        },\n        status: { ...state.status,\n          isLoggedIn: false,\n          valid: false\n        }\n      };\n\n    /* default */\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/redux/kakaoAuth/reducer.js"],"names":["types","initialState","kakakoAuth","status","kakaoLogin","register","error","valid","isLoggedIn","userInfo","code","kakaoAuth","state","action","type","KAKAO_AUTHORIZE","KAKAO_AUTHORIZE_SUCCESS","KAKAO_AUTHORIZE_FAILURE","KAKAO_LOGOUT","KAKAO_VERIFICATION","KAKAO_VERIFICATION_SUCCESS","KAKAO_VERIFICATION_FAILURE"],"mappings":"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","sourcesContent":["/* Kakao auth */\nimport * as types from \"./types\";\n\nconst initialState = {\n  kakakoAuth: {\n    status: \"INIT\",\n  },\n  kakaoLogin: {\n    status: \"INIT\",\n  },\n  register: {\n    status: \"INIT\",\n    error: -1,\n  },\n  status: {\n    valid: false,\n    isLoggedIn: false,\n    userInfo: [],\n  },\n  code: \"INIT\",\n};\n\nexport default function kakaoAuth(state = initialState, action) {\n  switch (action.type) {\n    /* KAKAO Authentication and Login */\n    case types.KAKAO_AUTHORIZE:\n      return {\n        ...state,\n        kakakoAuth: {\n          status: \"WAITING\",\n        },\n        kakaoLogin: {\n          status: \"WAITING\",\n        },\n      };\n    case types.KAKAO_AUTHORIZE_SUCCESS:\n      return {\n        ...state,\n        kakakoAuth: {\n          status: \"SUCCESS\",\n        },\n        kakaoLogin: {\n          status: \"SUCCESS\",\n        },\n        status: {\n          ...state.status,\n          isLoggedIn: true,\n          valid: true,\n          userInfo: action.userInfo,\n        },\n      };\n    case types.KAKAO_AUTHORIZE_FAILURE:\n      return {\n        ...state,\n        kakaoAuth: {\n          status: \"FAILURE\",\n        },\n        kakaoLogin: {\n          status: \"FAILURE\",\n        },\n        status: {\n          ...state.status,\n          isLoggedIn: false,\n          valid: false,\n        },\n      };\n\n    /* KAKAO LOGOUT */\n    case types.KAKAO_LOGOUT:\n      return {\n        ...state,\n        kakakoAuth: {\n          status: \"INIT\",\n        },\n        kakaoLogin: {\n          status: \"INIT\",\n        },\n        status: {\n          valid: false,\n          isLoggedIn: false,\n          userInfo: \"INIT\",\n        },\n      };\n\n    // /* Check Session KAKAO Login info */\n    case types.KAKAO_VERIFICATION:\n      return {\n        ...state,\n        status: {\n          ...state.status,\n        },\n      };\n    case types.KAKAO_VERIFICATION_SUCCESS:\n      return {\n        ...state,\n        kakakoAuth: {\n          status: \"SUCCESS\",\n        },\n        kakaoLogin: {\n          status: \"SUCCESS\",\n        },\n        status: {\n          ...state.status,\n          isLoggedIn: true,\n          valid: true,\n          userInfo: action.userInfo,\n        },\n      };\n    case types.KAKAO_VERIFICATION_FAILURE:\n      return {\n        ...state,\n        kakaoAuth: {\n          status: \"FAILURE\",\n        },\n        kakaoLogin: {\n          status: \"FAILURE\",\n        },\n        status: {\n          ...state.status,\n          isLoggedIn: false,\n          valid: false,\n        },\n      };\n\n    /* default */\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}