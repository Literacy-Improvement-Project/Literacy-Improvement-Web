{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jyeo\\\\Desktop\\\\project\\\\Literacy-Improvement-Project\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\page\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport MainWordOfTheDay from \"../components/MainWordOfTheDay\";\nimport MainThemeWord from \"../components/MainThemeWord\";\nimport MainWordMeaning from \"../components/MainWordMeaning\";\nimport { dailyWordsRequest, oneWordRequest } from \"../redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}));\n\nfunction Main({\n  dailyWordsList,\n  wordStatus,\n  dailyWordsRequest\n}) {\n  _s();\n\n  useEffect(() => {\n    // 렌더링\n    dailyWordsRequest();\n  }, []);\n\n  const test = () => {};\n\n  const classes = useStyles();\n  console.log(dailyWordsList); // 사용자에게 보여지는 부분\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(MainWordOfTheDay, {\n            dailyWordsList: dailyWordsList,\n            oneWordRequest: oneWordRequest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(MainThemeWord, {\n            oneWordRequest: oneWordRequest,\n            wordStatus: wordStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MainWordMeaning, {\n            oneWordRequest: oneWordRequest,\n            wordStatus: wordStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"v7TDUGheAkBmKIQo9Gj65jeexyQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Main;\n\nconst mapStateToProps = state => {\n  return {\n    // userID: state.authentication.status.currentUser,\n    dailyWordsList: state.dailyWords.status.dailyWordsList,\n    wordStatus: state.oneWord.status.wordStatus\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dailyWordsRequest: () => {\n      return dispatch(dailyWordsRequest());\n    },\n    oneWordRequest: word => {\n      return dispatch(oneWordRequest(word));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/Jyeo/Desktop/project/Literacy-Improvement-Project/Literacy-Improvement-Web/frontend/Literacy-Web/src/page/Main.js"],"names":["React","useEffect","useState","connect","MainWordOfTheDay","MainThemeWord","MainWordMeaning","dailyWordsRequest","oneWordRequest","makeStyles","Grid","useStyles","theme","root","padding","spacing","Main","dailyWordsList","wordStatus","test","classes","console","log","mapStateToProps","state","dailyWords","status","oneWord","mapDispatchToProps","dispatch","word"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MainWordOfTheDay from \"../components/MainWordOfTheDay\";\r\nimport MainThemeWord from \"../components/MainThemeWord\";\r\nimport MainWordMeaning from \"../components/MainWordMeaning\";\r\nimport { dailyWordsRequest, oneWordRequest } from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Main({ dailyWordsList, wordStatus, dailyWordsRequest }) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    dailyWordsRequest();\r\n\r\n  }, []);\r\n\r\n  const test = () => { };\r\n  const classes = useStyles();\r\n\r\n  console.log(dailyWordsList);\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={8}>\r\n            <MainWordOfTheDay\r\n              dailyWordsList={dailyWordsList}\r\n              oneWordRequest={oneWordRequest}\r\n            ></MainWordOfTheDay>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <MainThemeWord\r\n              oneWordRequest={oneWordRequest}\r\n              wordStatus={wordStatus}\r\n            ></MainThemeWord>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MainWordMeaning\r\n              oneWordRequest={oneWordRequest}\r\n              wordStatus={wordStatus}\r\n            ></MainWordMeaning>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // userID: state.authentication.status.currentUser,\r\n    dailyWordsList: state.dailyWords.status.dailyWordsList,\r\n    wordStatus: state.oneWord.status.wordStatus,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dailyWordsRequest: () => {\r\n      return dispatch(dailyWordsRequest());\r\n    },\r\n    oneWordRequest: (word) => {\r\n      return dispatch(oneWordRequest(word));\r\n    }\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n"]},"metadata":{},"sourceType":"module"}