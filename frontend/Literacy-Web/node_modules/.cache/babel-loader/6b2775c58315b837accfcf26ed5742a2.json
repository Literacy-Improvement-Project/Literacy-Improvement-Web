{"ast":null,"code":"import axios from \"axios\";\nimport { GET_QUIZ_REQUEST, GET_QUIZ_REQUEST_SUCCESS, GET_QUIZ_REQUEST_FAILURE, POST_QUIZ_RESULT, POST_QUIZ_RESULT_SUCCESS, POST_QUIZ_RESULT_FAILURE, QUIZ_SUMMARY_UPDATE } from \"./types\";\nexport function quizRequest() {\n  return dispatch => {\n    dispatch(quizRequestStatus());\n    return axios.get(\"http://localhost:8080/wordQuiz\").then(response => {\n      dispatch(quizRequestSuccess(response.data));\n    }).catch(error => {\n      dispatch(quizRequestFailure());\n    });\n  };\n}\nexport function quizRequestStatus() {\n  return {\n    type: GET_QUIZ_REQUEST\n  };\n}\nexport function quizRequestSuccess(quizzes) {\n  return {\n    type: GET_QUIZ_REQUEST_SUCCESS,\n    quizzes\n  };\n}\nexport function quizRequestFailure() {\n  return {\n    type: GET_QUIZ_REQUEST_FAILURE\n  };\n}\nexport function postQuizResult(score) {\n  return dispatch => {\n    dispatch(postQuizResultStatus());\n    return axios.get(\"http://localhost:8080/getQuizResult\", {\n      params: {\n        score: score\n      }\n    }).then(() => {\n      dispatch(postQuizResultSuccess());\n    }).catch(error => {\n      dispatch(postQuizResultFailure());\n    });\n  };\n}\nexport function postQuizResultStatus() {\n  return {\n    type: POST_QUIZ_RESULT\n  };\n}\nexport function postQuizResultSuccess() {\n  return {\n    type: POST_QUIZ_RESULT_SUCCESS\n  };\n}\nexport function postQuizResultFailure() {\n  return {\n    type: POST_QUIZ_RESULT_FAILURE\n  };\n} // Quiz Summary state\n\nexport function quizSummaryUpdate(summary) {\n  return {\n    type: QUIZ_SUMMARY_UPDATE,\n    summary\n  };\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/redux/quiz/actions.js"],"names":["axios","GET_QUIZ_REQUEST","GET_QUIZ_REQUEST_SUCCESS","GET_QUIZ_REQUEST_FAILURE","POST_QUIZ_RESULT","POST_QUIZ_RESULT_SUCCESS","POST_QUIZ_RESULT_FAILURE","QUIZ_SUMMARY_UPDATE","quizRequest","dispatch","quizRequestStatus","get","then","response","quizRequestSuccess","data","catch","error","quizRequestFailure","type","quizzes","postQuizResult","score","postQuizResultStatus","params","postQuizResultSuccess","postQuizResultFailure","quizSummaryUpdate","summary"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,gBADJ,EAEIC,wBAFJ,EAGIC,wBAHJ,EAIIC,gBAJJ,EAKIC,wBALJ,EAMIC,wBANJ,EAOIC,mBAPJ,QAQO,SARP;AAUA,OAAO,SAASC,WAAT,GAAuB;AAC9B,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACA,WAAOV,KAAK,CACTW,GADI,CACA,gCADA,EAEJC,IAFI,CAEEC,QAAD,IAAc;AAClBJ,MAAAA,QAAQ,CAACK,kBAAkB,CAACD,QAAQ,CAACE,IAAV,CAAnB,CAAR;AACD,KAJI,EAKJC,KALI,CAKGC,KAAD,IAAW;AAChBR,MAAAA,QAAQ,CAACS,kBAAkB,EAAnB,CAAR;AACD,KAPI,CAAP;AAQD,GAVH;AAWC;AAED,OAAO,SAASR,iBAAT,GAA6B;AAClC,SAAO;AACLS,IAAAA,IAAI,EAAElB;AADD,GAAP;AAGD;AAED,OAAO,SAASa,kBAAT,CAA4BM,OAA5B,EAAqC;AAC1C,SAAO;AACLD,IAAAA,IAAI,EAAEjB,wBADD;AAELkB,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASF,kBAAT,GAA8B;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAEhB;AADD,GAAP;AAGD;AAED,OAAO,SAASkB,cAAT,CAAwBC,KAAxB,EAA+B;AACpC,SAAQb,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACc,oBAAoB,EAArB,CAAR;AAEA,WAAOvB,KAAK,CACTW,GADI,CACA,qCADA,EACuC;AAC1Ca,MAAAA,MAAM,EAAE;AACNF,QAAAA,KAAK,EAAEA;AADD;AADkC,KADvC,EAMJV,IANI,CAMC,MAAM;AACVH,MAAAA,QAAQ,CAACgB,qBAAqB,EAAtB,CAAR;AACD,KARI,EASJT,KATI,CASGC,KAAD,IAAW;AAChBR,MAAAA,QAAQ,CAACiB,qBAAqB,EAAtB,CAAR;AACD,KAXI,CAAP;AAYH,GAfD;AAgBD;AAED,OAAO,SAASH,oBAAT,GAAgC;AACrC,SAAO;AACLJ,IAAAA,IAAI,EAAEf;AADD,GAAP;AAGD;AAED,OAAO,SAASqB,qBAAT,GAAiC;AACtC,SAAO;AACLN,IAAAA,IAAI,EAAEd;AADD,GAAP;AAGD;AAED,OAAO,SAASqB,qBAAT,GAAiC;AACtC,SAAO;AACLP,IAAAA,IAAI,EAAEb;AADD,GAAP;AAGD,C,CAED;;AACA,OAAO,SAASqB,iBAAT,CAA2BC,OAA3B,EAAoC;AACzC,SAAO;AACLT,IAAAA,IAAI,EAAEZ,mBADD;AAELqB,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n    GET_QUIZ_REQUEST,\r\n    GET_QUIZ_REQUEST_SUCCESS,\r\n    GET_QUIZ_REQUEST_FAILURE,\r\n    POST_QUIZ_RESULT,\r\n    POST_QUIZ_RESULT_SUCCESS,\r\n    POST_QUIZ_RESULT_FAILURE,\r\n    QUIZ_SUMMARY_UPDATE,\r\n} from \"./types\"\r\n\r\nexport function quizRequest() {\r\nreturn (dispatch) => {\r\n    dispatch(quizRequestStatus());\r\n    return axios\r\n      .get(\"http://localhost:8080/wordQuiz\")\r\n      .then((response) => {\r\n        dispatch(quizRequestSuccess(response.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(quizRequestFailure());\r\n      });\r\n  };\r\n}\r\n\r\nexport function quizRequestStatus() {\r\n  return {\r\n    type: GET_QUIZ_REQUEST,\r\n  };\r\n}\r\n\r\nexport function quizRequestSuccess(quizzes) {\r\n  return {\r\n    type: GET_QUIZ_REQUEST_SUCCESS,\r\n    quizzes,\r\n  };\r\n}\r\n\r\nexport function quizRequestFailure() {\r\n  return {\r\n    type: GET_QUIZ_REQUEST_FAILURE,\r\n  };\r\n}\r\n\r\nexport function postQuizResult(score) {\r\n  return (dispatch) => {\r\n      dispatch(postQuizResultStatus());\r\n      \r\n      return axios\r\n        .get(\"http://localhost:8080/getQuizResult\", {\r\n          params: {\r\n            score: score,\r\n          },\r\n        })\r\n        .then(() => {\r\n          dispatch(postQuizResultSuccess());\r\n        })\r\n        .catch((error) => {\r\n          dispatch(postQuizResultFailure());\r\n        });\r\n  };\r\n}\r\n  \r\nexport function postQuizResultStatus() {\r\n  return {\r\n    type: POST_QUIZ_RESULT,\r\n  };\r\n}\r\n  \r\nexport function postQuizResultSuccess() {\r\n  return {\r\n    type: POST_QUIZ_RESULT_SUCCESS,\r\n  };\r\n}\r\n  \r\nexport function postQuizResultFailure() {\r\n  return {\r\n    type: POST_QUIZ_RESULT_FAILURE,\r\n  };\r\n}\r\n\r\n// Quiz Summary state\r\nexport function quizSummaryUpdate(summary) {\r\n  return {\r\n    type: QUIZ_SUMMARY_UPDATE,\r\n    summary\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}