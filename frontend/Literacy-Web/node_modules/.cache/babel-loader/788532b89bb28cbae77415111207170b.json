{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jyeo\\\\Desktop\\\\project\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\MyPage\\\\MyDictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n    // width: '100%',\n    // maxWidth: '100ch',\n    height: \"42ch\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #D9D9D9\"\n  },\n  inline: {\n    display: \"inline\"\n  },\n  paper: {\n    //padding: theme.spacing(2),\n    textAlign: \"center\",\n    // height: '7ch',\n    color: theme.palette.text.secondary,\n    display: \"inline-block\",\n    borderBottom: \"1px solid #D9D9D9\",\n    width: \"40%\"\n  },\n  button: {\n    float: \"left\",\n    border: \"none\",\n    backgroundColor: \"white\",\n    borderRadius: \"5px\",\n    width: \"150px\",\n    height: \"2.5rem\",\n    fontSize: \"1.5rem\",\n    fontWeight: \"400\",\n    textAlign: \"left\"\n  },\n  deletebutton: {\n    float: \"right\",\n    border: \"none\",\n    width: \"3rem\",\n    height: \"2rem\",\n    borderRadius: \"5px\",\n    color: \"white\",\n    fontSize: \"0.85rem\",\n    fontWeight: \"400\",\n    backgroundColor: \"#ff575d\"\n  },\n  test: {\n    border: \"1px solid #D9D9D9\"\n  }\n}));\nexport default function MyDictionary({\n  dictionaryWordsList,\n  handleDelete\n}) {\n  _s();\n\n  useEffect(() => {// 렌더링\n  }, []);\n  let wordName = [];\n\n  if (dictionaryWordsList) {\n    dictionaryWordsList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: wordName.push(item)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this));\n  }\n\n  const classes = useStyles();\n\n  const wordDelete = word => {\n    handleDelete(word);\n  };\n\n  console.log(wordName);\n  const myWordList = wordName.map((word, index) => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 4,\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/Word/${wordName[index]}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        children: wordName[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.deletebutton,\n      onClick: () => wordDelete(wordName[index]),\n      children: \"\\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this)); // 사용자에게 보여지는 부분\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      direction: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"flex-start\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uB0B4 \\uB2E8\\uC5B4\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), myWordList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyDictionary, \"v7TDUGheAkBmKIQo9Gj65jeexyQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = MyDictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyDictionary\");","map":{"version":3,"sources":["C:/Users/Jyeo/Desktop/project/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/MyPage/MyDictionary.js"],"names":["React","useEffect","makeStyles","Grid","Link","useStyles","theme","root","paddingTop","spacing","paddingLeft","paddingRight","paddingBottom","height","backgroundColor","palette","background","paper","border","inline","display","textAlign","color","text","secondary","borderBottom","width","button","float","borderRadius","fontSize","fontWeight","deletebutton","test","MyDictionary","dictionaryWordsList","handleDelete","wordName","map","item","index","push","classes","wordDelete","word","console","log","myWordList"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n    // width: '100%',\r\n    // maxWidth: '100ch',\r\n    height: \"42ch\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  paper: {\r\n    //padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    // height: '7ch',\r\n    color: theme.palette.text.secondary,\r\n    display: \"inline-block\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n    width: \"40%\",\r\n  },\r\n  button: {\r\n    float: \"left\",\r\n    border: \"none\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"5px\",\r\n    width: \"150px\",\r\n    height: \"2.5rem\",\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: \"400\",\r\n    textAlign: \"left\",\r\n  },\r\n  deletebutton: {\r\n    float: \"right\",\r\n    border: \"none\",\r\n    width: \"3rem\",\r\n    height: \"2rem\",\r\n    borderRadius: \"5px\",\r\n    color: \"white\",\r\n    fontSize: \"0.85rem\",\r\n    fontWeight: \"400\",\r\n\r\n    backgroundColor: \"#ff575d\",\r\n  },\r\n  test: {\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n}));\r\n\r\nexport default function MyDictionary({ dictionaryWordsList, handleDelete }) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n\r\n  let wordName = [];\r\n  \r\n  if (dictionaryWordsList) {dictionaryWordsList.map((item, index) => (\r\n    <div key={index}>{wordName.push(item)}</div>\r\n  ));\r\n  }\r\n  const classes = useStyles();\r\n\r\n  const wordDelete = (word) => {\r\n    handleDelete(word);\r\n  };\r\n\r\n  console.log(wordName);\r\n\r\n  const myWordList = wordName.map((word, index) => (\r\n    <Grid item key={index} xs={4} className={classes.paper}>\r\n      <Link to={`/Word/${wordName[index]}`}>\r\n        <button className={classes.button}>{wordName[index]}</button>\r\n      </Link>\r\n      <button\r\n        className={classes.deletebutton}\r\n        onClick={() => wordDelete(wordName[index])}\r\n      >\r\n        삭제\r\n      </button>\r\n    </Grid>\r\n  ));\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <h3>내 단어장</h3>\r\n        </Grid>\r\n        {myWordList}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}