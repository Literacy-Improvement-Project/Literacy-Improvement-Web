{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Literacy-Improvement-Web\\\\frontend\\\\Literacy-Web\\\\src\\\\components\\\\TopBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { checkUserRequest, logoutRequest, kakaoLogoutRequest, checkSessionRequest } from \"../redux\";\nimport { useHistory } from \"react-router\"; // import\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; // 색 적용은 나중에 해보기\n// import { createTheme } from '@material-ui/core/styles';\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       light: '#ffd149',\n//       main: '#3f50b5',\n//       dark: '#002884',\n//       contrastText: '#fff',\n//     },\n//     secondary: {\n//       light: '#ff7961',\n//       main: '#f44336',\n//       dark: '#ba000d',\n//       contrastText: '#000',\n//     },\n//   },\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nfunction TopBar({\n  userStatus,\n  checkUserRequest,\n  logoutRequest,\n  isLoggedIn,\n  kakaoLogoutRequest,\n  checkSessionRequest\n}) {\n  _s();\n\n  useEffect(() => {\n    // 렌더링\n    checkSessionRequest(); // 현재 경로가 '/'라면 Home으로 이동\n\n    if (thisPath === \"/\") {\n      history.push(\"/Home\");\n    }\n  }, []);\n  const history = useHistory();\n  let thisPath = history.location.pathname;\n  const classes = useStyles();\n\n  const toastOnLogout = () => toast(\"로그아웃 되었습니다.\");\n\n  const onLogout = e => {\n    kakaoLogoutRequest().then(() => {\n      toastOnLogout();\n      window.location.replace(\"/Home\");\n    });\n  };\n\n  const loginButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      href: \"/Login\",\n      color: \"inherit\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), \"|\", /*#__PURE__*/_jsxDEV(Button, {\n      href: \"/SignUp\",\n      color: \"inherit\",\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n\n  const logoutButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: onLogout,\n      color: \"inherit\",\n      children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), \"|\", /*#__PURE__*/_jsxDEV(Button, {\n      href: \"/Mypage\",\n      color: \"inherit\",\n      children: \"MyPage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), \"|\", /*#__PURE__*/_jsxDEV(Button, {\n      href: \"/Ranking\",\n      color: \"inherit\",\n      children: \"Ranking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this); // 사용자에게 보여지는 부분\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          className: classes.menuButton,\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          href: \"/Home\",\n          color: \"inherit\",\n          className: classes.title,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.title,\n            children: \"Kotudy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), isLoggedIn ? logoutButton : loginButton]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true,\n      transition: Flip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TopBar, \"LuCEI8tR6LeL4DjyxG78O5K25U4=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = TopBar;\n\nconst mapStateToProps = state => {\n  return {\n    userStatus: state.authentication.status,\n    isLoggedIn: state.kakaoAuth.status.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutRequest: () => {\n      return dispatch(logoutRequest());\n    },\n    checkUserRequest: () => {\n      return dispatch(checkUserRequest());\n    },\n    kakaoLogoutRequest: () => {\n      return dispatch(kakaoLogoutRequest());\n    },\n    checkSessionRequest: () => {\n      return dispatch(checkSessionRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\n\nvar _c;\n\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Literacy-Improvement-Web/frontend/Literacy-Web/src/components/TopBar.js"],"names":["React","useEffect","useState","connect","checkUserRequest","logoutRequest","kakaoLogoutRequest","checkSessionRequest","useHistory","makeStyles","AppBar","Toolbar","Typography","Button","IconButton","MenuIcon","ToastContainer","toast","Flip","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","TopBar","userStatus","isLoggedIn","thisPath","history","push","location","pathname","classes","toastOnLogout","onLogout","e","then","window","replace","loginButton","logoutButton","mapStateToProps","state","authentication","status","kakaoAuth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  checkUserRequest,\n  logoutRequest,\n  kakaoLogoutRequest,\n  checkSessionRequest,\n} from \"../redux\";\nimport { useHistory } from \"react-router\";\n// import\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// 색 적용은 나중에 해보기\n// import { createTheme } from '@material-ui/core/styles';\n\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       light: '#ffd149',\n//       main: '#3f50b5',\n//       dark: '#002884',\n//       contrastText: '#fff',\n//     },\n//     secondary: {\n//       light: '#ff7961',\n//       main: '#f44336',\n//       dark: '#ba000d',\n//       contrastText: '#000',\n//     },\n//   },\n// });\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction TopBar({\n  userStatus,\n  checkUserRequest,\n  logoutRequest,\n  isLoggedIn,\n  kakaoLogoutRequest,\n  checkSessionRequest,\n}) {\n  useEffect(() => {\n    // 렌더링\n    checkSessionRequest();\n\n    // 현재 경로가 '/'라면 Home으로 이동\n    if (thisPath === \"/\") {\n      history.push(\"/Home\");\n    }\n  }, []);\n  const history = useHistory();\n  let thisPath = history.location.pathname;\n  const classes = useStyles();\n\n  const toastOnLogout = () => toast(\"로그아웃 되었습니다.\");\n\n  const onLogout = (e) => {\n    kakaoLogoutRequest().then(() => {\n      toastOnLogout();\n      window.location.replace(\"/Home\");\n    });\n  };\n\n  const loginButton = (\n    <div>\n      <Button href=\"/Login\" color=\"inherit\">\n        로그인\n      </Button>\n      |\n      <Button href=\"/SignUp\" color=\"inherit\">\n        회원가입\n      </Button>\n    </div>\n  );\n  const logoutButton = (\n    <div>\n      <Button onClick={onLogout} color=\"inherit\">\n        로그아웃\n      </Button>\n      |\n      <Button href=\"/Mypage\" color=\"inherit\">\n        MyPage\n      </Button>\n      |\n      <Button href=\"/Ranking\" color=\"inherit\">\n        Ranking\n      </Button>\n    </div>\n  );\n\n  // 사용자에게 보여지는 부분\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Button href=\"/Home\" color=\"inherit\" className={classes.title}>\n            <Typography variant=\"h6\" className={classes.title}>\n              Kotudy\n            </Typography>\n          </Button>\n          {isLoggedIn ? logoutButton : loginButton}\n        </Toolbar>\n      </AppBar>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        transition={Flip}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userStatus: state.authentication.status,\n    isLoggedIn: state.kakaoAuth.status.isLoggedIn,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logoutRequest: () => {\n      return dispatch(logoutRequest());\n    },\n    checkUserRequest: () => {\n      return dispatch(checkUserRequest());\n    },\n    kakaoLogoutRequest: () => {\n      return dispatch(kakaoLogoutRequest());\n    },\n    checkSessionRequest: () => {\n      return dispatch(checkSessionRequest());\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\n"]},"metadata":{},"sourceType":"module"}