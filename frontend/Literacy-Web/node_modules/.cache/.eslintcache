[{"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\index.js":"1","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\App.js":"2","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\reportWebVitals.js":"3","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\store.js":"4","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Word.js":"5","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Main.js":"6","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\MyPage.js":"7","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\SignUp.js":"8","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\TopBar.js":"9","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\Login.js":"10","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\rootReducer.js":"11","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordExample.js":"12","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordDefinition.js":"13","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordSide.js":"14","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainWordOfTheDay.js":"15","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainThemeWord.js":"16","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\AuthSignUp.js":"17","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\Authentication.js":"18","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordMeaning\\MainWordMeaning.js":"19","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MyDictionary.js":"20","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\reducer.js":"21","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MySearch.js":"22","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\actions.js":"23","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\reducer.js":"24","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\reducer.js":"25","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\actions.js":"26","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\reducer.js":"27","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\reducer.js":"28","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\index.js":"29","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\types.js":"30","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\types.js":"31","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\types.js":"32","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\types.js":"33","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\types.js":"34","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\actions.js":"35","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\actions.js":"36","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\actions.js":"37"},{"size":643,"mtime":1630417588000,"results":"38","hashOfConfig":"39"},{"size":886,"mtime":1630822712000,"results":"40","hashOfConfig":"39"},{"size":375,"mtime":1630417588000,"results":"41","hashOfConfig":"39"},{"size":667,"mtime":1630417588000,"results":"42","hashOfConfig":"39"},{"size":2963,"mtime":1630825574000,"results":"43","hashOfConfig":"39"},{"size":2167,"mtime":1630683932000,"results":"44","hashOfConfig":"39"},{"size":1973,"mtime":1630595068000,"results":"45","hashOfConfig":"39"},{"size":1201,"mtime":1630590622000,"results":"46","hashOfConfig":"39"},{"size":3111,"mtime":1630593656000,"results":"47","hashOfConfig":"39"},{"size":1485,"mtime":1630590622000,"results":"48","hashOfConfig":"39"},{"size":548,"mtime":1630674598000,"results":"49","hashOfConfig":"39"},{"size":2706,"mtime":1630587350000,"results":"50","hashOfConfig":"39"},{"size":1840,"mtime":1630587350000,"results":"51","hashOfConfig":"39"},{"size":2075,"mtime":1630587350000,"results":"52","hashOfConfig":"39"},{"size":2041,"mtime":1630590622000,"results":"53","hashOfConfig":"39"},{"size":2789,"mtime":1630674598000,"results":"54","hashOfConfig":"39"},{"size":8837,"mtime":1630590622000,"results":"55","hashOfConfig":"39"},{"size":5281,"mtime":1630590622000,"results":"56","hashOfConfig":"39"},{"size":2474,"mtime":1630823884000,"results":"57","hashOfConfig":"39"},{"size":1854,"mtime":1630596504000,"results":"58","hashOfConfig":"39"},{"size":730,"mtime":1630590622000,"results":"59","hashOfConfig":"39"},{"size":1843,"mtime":1630596506000,"results":"60","hashOfConfig":"39"},{"size":786,"mtime":1630590622000,"results":"61","hashOfConfig":"39"},{"size":1880,"mtime":1630590622000,"results":"62","hashOfConfig":"39"},{"size":902,"mtime":1630590622000,"results":"63","hashOfConfig":"39"},{"size":2019,"mtime":1630590622000,"results":"64","hashOfConfig":"39"},{"size":2027,"mtime":1630596366000,"results":"65","hashOfConfig":"39"},{"size":1117,"mtime":1630674598000,"results":"66","hashOfConfig":"39"},{"size":415,"mtime":1630674598000,"results":"67","hashOfConfig":"39"},{"size":156,"mtime":1630590622000,"results":"68","hashOfConfig":"39"},{"size":395,"mtime":1630590622000,"results":"69","hashOfConfig":"39"},{"size":469,"mtime":1630596366000,"results":"70","hashOfConfig":"39"},{"size":223,"mtime":1630590622000,"results":"71","hashOfConfig":"39"},{"size":189,"mtime":1630674598000,"results":"72","hashOfConfig":"39"},{"size":902,"mtime":1630590622000,"results":"73","hashOfConfig":"39"},{"size":876,"mtime":1630682184000,"results":"74","hashOfConfig":"39"},{"size":1983,"mtime":1630596364000,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wfhujz",{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\index.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\App.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\reportWebVitals.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\store.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Word.js",["159","160","161","162","163","164","165"],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Main.js",["166","167","168","169"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TopBar from \"../components/TopBar\";\r\nimport MainWordOfTheDay from \"../components/MainWordOfTheDay\";\r\nimport MainThemeWord from \"../components/MainThemeWord\";\r\nimport MainWordMeaning from \"../components/WordMeaning/MainWordMeaning\";\r\nimport { dailyWordsRequest, oneWordRequest } from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Main({ dailyWordsList, wordStatus, dailyWordsRequest, oneWordRequest }) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    dailyWordsRequest();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  console.log(dailyWordsList);\r\n\r\n  const handleOneWord = (word) => {\r\n    oneWordRequest(word);\r\n    console.log(word);\r\n  }\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={8}>\r\n            <MainWordOfTheDay\r\n              dailyWordsList={dailyWordsList}\r\n            ></MainWordOfTheDay>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <MainThemeWord\r\n            ></MainThemeWord>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MainWordMeaning\r\n              handleOneWord={handleOneWord}\r\n              wordStatus={wordStatus}\r\n            ></MainWordMeaning>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // userID: state.authentication.status.currentUser,\r\n    dailyWordsList: state.dailyWords.status.dailyWordsList,\r\n    wordStatus: state.oneWord.status.wordStatus,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dailyWordsRequest: () => {\r\n      return dispatch(dailyWordsRequest());\r\n    },\r\n    oneWordRequest: (word) => {\r\n      return dispatch(oneWordRequest(word));\r\n    }\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\MyPage.js",["170"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MySearch from \"../components/MyPage/MySearch\";\r\nimport MyDictionary from \"../components/MyPage/MyDictionary\";\r\nimport { dictionaryWordsRequest, searchWordsRequest } from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction MyPage({ dictionaryWordsList, searchWordsList, dictionaryWordsRequest, searchWordsRequest }) {\r\n    useEffect(() => {\r\n        // 렌더링\r\n        dictionaryWordsRequest();\r\n        searchWordsRequest();\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n\r\n    // 사용자에게 보여지는 부분\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <MySearch searchWordsList={searchWordsList}>\r\n                        </MySearch>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <MyDictionary dictionaryWordsList={dictionaryWordsList}>\r\n                        </MyDictionary>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // userID: state.authentication.status.currentUser,\r\n        searchWordsList: state.myPage.status.searchWordsList,\r\n        dictionaryWordsList: state.myPage.status.dictionaryWordsList,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchWordsRequest: () => {\r\n            return dispatch(searchWordsRequest());\r\n        },\r\n        dictionaryWordsRequest: () => {\r\n            return dispatch(dictionaryWordsRequest());\r\n        },\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPage);\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\SignUp.js",["171"],"/* 회원가입 */\r\nimport React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AuthSignUp from \"./AuthSignUp\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerRequest } from \"../../redux/signup/actions\";\r\n\r\nclass SignUp extends Component {\r\n  handleRegister = (body) => {\r\n    return this.props.registerRequest(body).then(() => {\r\n      console.log(this.props.history);\r\n      if (this.props.statusReg === \"SUCCESS\") {\r\n        // 회원가입 성공시 로그인 화면으로 돌아감.\r\n        this.props.history.push(\"/SignIn\");\r\n        return true;\r\n      } else {\r\n        console.log(\"회원가입 실패\");\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AuthSignUp onRegister={this.handleRegister} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    statusReg: state.register.register.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    registerRequest: (body) => {\r\n      return dispatch(registerRequest(body));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\TopBar.js",["172","173"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { checkUserRequest, logoutRequest } from \"../redux\";\r\nimport { useHistory } from \"react-router\";\r\n// import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\n// 색 적용은 나중에 해보기\r\n// import { createTheme } from '@material-ui/core/styles';\r\n\r\n// const theme = createTheme({\r\n//   palette: {\r\n//     primary: {\r\n//       light: '#ffd149',\r\n//       main: '#3f50b5',\r\n//       dark: '#002884',\r\n//       contrastText: '#fff',\r\n//     },\r\n//     secondary: {\r\n//       light: '#ff7961',\r\n//       main: '#f44336',\r\n//       dark: '#ba000d',\r\n//       contrastText: '#000',\r\n//     },\r\n//   },\r\n// });\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction TopBar({ userStatus, checkUserRequest }) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    checkUserRequest();\r\n\r\n    // 현재 경로가 '/'라면 Home으로 이동\r\n    if (thisPath === \"/\") {\r\n      history.push(\"/Home\");\r\n    }\r\n  }, []);\r\n  const history = useHistory();\r\n  let thisPath = history.location.pathname;\r\n  const classes = useStyles();\r\n\r\n  const loginButton = (\r\n    <div>\r\n      <Button href=\"/Login\" color=\"inherit\">\r\n        로그인\r\n      </Button>\r\n      <Button href=\"/SignUp\" color=\"inherit\">\r\n        회원가입\r\n      </Button>\r\n    </div>\r\n  );\r\n  const logoutButton = (\r\n    <div>\r\n      <Button color=\"inherit\">\r\n        로그아웃\r\n      </Button>;\r\n      <IconButton href=\"/Mypage\" color=\"inherit\">\r\n        MyPage\r\n      </IconButton>;\r\n    </div>\r\n  )\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton >\r\n          <Button href=\"/Home\" color=\"inherit\" className={classes.title}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Kotudy\r\n            </Typography>\r\n          </Button>\r\n          {userStatus.isLoggedIn ? logoutButton : loginButton}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userStatus: state.authentication.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutRequest: () => {\r\n      return dispatch(logoutRequest());\r\n    },\r\n    checkUserRequest: () => {\r\n      return dispatch(checkUserRequest());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\Login.js",["174"],"import React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Authentication from \"./Authentication\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginRequest } from \"../../redux/authentication/actions\";\r\n\r\nclass Login extends Component {\r\n  handleLogin = (id, pw) => {\r\n    return this.props.loginRequest(id, pw).then(() => {\r\n      console.log(this.props.history);\r\n      if (this.props.status === \"SUCCESS\") {\r\n        // create session data\r\n        let loginData = {\r\n          isLoggedIn: true,\r\n          userId: id,\r\n        };\r\n        document.cookie = \"key=\" + btoa(JSON.stringify(loginData));\r\n        console.log(\"login-cookie : \");\r\n        console.log(document.cookie);\r\n\r\n        // 로그인 성공시 루트 화면으로 돌아감.\r\n        this.props.history.push(\"/\");\r\n        return true;\r\n      } else {\r\n        console.log(\"login-cookie-fail\");\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Authentication onLogin={this.handleLogin} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    status: state.authentication.login.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginRequest: (id, pw) => {\r\n      console.log(\"mapDispatchToProps\");\r\n      return dispatch(loginRequest(id, pw));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\rootReducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordExample.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordDefinition.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordSide.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainWordOfTheDay.js",["175","176"],"import React, { useEffect } from \"react\";\r\nimport { } from \"../redux\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(5),\r\n        paddingRight: theme.spacing(5),\r\n        paddingBottom: theme.spacing(5),\r\n        // width: '100%',\r\n        // maxWidth: '100ch',\r\n        height: '42ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: '20px',\r\n        border: '1px solid #D9D9D9',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    paper: {\r\n        // padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        // height: '7ch',\r\n        color: theme.palette.text.secondary,\r\n        display: 'flex',\r\n        borderBottom: '1px solid #D9D9D9',\r\n    },\r\n    button: {\r\n        float: 'right',\r\n    },\r\n    test: {\r\n        border: '1px solid #D9D9D9',\r\n    }\r\n}));\r\n\r\n\r\nexport default function MainWordOfTheDay({ dailyWordsList }) {\r\n    useEffect(() => {\r\n        // 렌더링\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n    // 사용자에게 보여지는 부분\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={3}>\r\n                    <h3>오늘의 단어</h3>\r\n                </Grid>\r\n                <Grid item xs={7}></Grid>\r\n                <Grid item xs={2} className={classes.button}>\r\n                    <h3 />\r\n                    <button>더 알아보기</button>\r\n                </Grid>\r\n                {dailyWordsList.map((word, index) => (\r\n                    <Grid item xs={12} className={classes.paper}>\r\n                        <h4>{word.word}</h4>\r\n                        <h5>{word.morpheme}</h5>\r\n                        <h4>{word.mean}</h4>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainThemeWord.js",["177","178","179","180"],"import React, { useEffect } from \"react\";\r\nimport { } from \"../redux\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(5),\r\n        paddingRight: theme.spacing(5),\r\n        paddingBottom: theme.spacing(5),\r\n\r\n        // padding: theme.spacing(10),\r\n        // width: '100%',\r\n        // maxWidth: '30ch',\r\n        height: '42ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #D9D9D9',\r\n        borderRadius: '20px',\r\n    },\r\n    test: {\r\n        // height: '50%',\r\n        float: 'right',\r\n        // border: '1px solid #D9D9D9',\r\n        // position: 'abolute',\r\n        // left: '50%',\r\n        // top: '50%',\r\n        // transform: 'translate(-50%, -50%)',\r\n\r\n        // display: 'flex',\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n\r\n    },\r\n    box: {\r\n        border: '1px solid #D9D9D9',\r\n    },\r\n    bottom: {\r\n        display: 'inline',\r\n        borderBottom: '1px solid #D9D9D9',\r\n    },\r\n}));\r\n\r\nexport default function ThemeWord({ wordStatus, oneWordRequest }) {\r\n    useEffect(() => {\r\n        // 렌더링\r\n\r\n        // 현재 경로가 '/'라면 Home으로 이동\r\n        if (thisPath === \"/\") {\r\n            history.push(\"/Home\");\r\n        }\r\n    }, []);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    let thisPath = history.location.pathname;\r\n\r\n    let test = [1, 2, 3, 4, 5];\r\n    let word = \"\";\r\n\r\n    const handleClick = () => {\r\n        oneWordRequest(word);\r\n    }\r\n    // 사용자에게 보여지는 부분\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={5}>\r\n                    <h3>테마 단어</h3>\r\n                </Grid>\r\n                <Grid item xs={2} >\r\n                </Grid>\r\n                <Grid item xs={5} >\r\n                    <h3 />\r\n                    <button className={classes.test}>\r\n                        더 알아보기\r\n                    </button>\r\n                </Grid>\r\n                {\r\n                    test.map((item, index) => (\r\n                        <Grid item xs={12} key={index} className={classes.bottom}>\r\n                            <h3></h3>\r\n                            <Button href=\"/Word\" color=\"inherit\" className={classes.test}>\r\n                                더 알아보기\r\n                            </Button>\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\AuthSignUp.js",["181","182","183","184"],"/* 회원가입 */\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./SignUp.css\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nclass AuthSignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userName: \"\",\r\n      birth: \"\",\r\n      work: \"\",\r\n      userId: \"\",\r\n      userPassword: \"\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeWork = (e) => {\r\n    this.setState({ work: e.target.value });\r\n  };\r\n\r\n  toastRegister_NotEnoughInfo = () => toast.error(\"모든 항목을 입력하세요.\");\r\n  toastRegister_Complete = () => toast(\"회원가입 되었습니다.\");\r\n  toastRegister_Failure = () => toast.error(\"회원가입 실패하였습니다.\");\r\n\r\n  handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      // 정보가 부족하면 오류 메시지 출력\r\n      this.state.userName === \"\" ||\r\n      this.state.work === \"\" ||\r\n      this.state.birth === \"\" ||\r\n      this.state.userId === \"\" ||\r\n      this.state.userPassword === \"\"\r\n    ) {\r\n      this.toastRegister_NotEnoughInfo();\r\n      return false;\r\n    }\r\n\r\n    let body = {\r\n      userName: this.state.userName,\r\n      birth: this.state.birth,\r\n      work: this.state.work,\r\n      userId: this.state.userId,\r\n      userPassword: this.state.userPassword,\r\n    };\r\n\r\n    this.props.onRegister(body).then((success) => {\r\n      if (!success) {\r\n        //실패하면 아이디 재입력 받음\r\n        this.toastRegister_Failure();\r\n        this.setState({\r\n          userId: \"\",\r\n          userPassword: \"\",\r\n        });\r\n      } else {\r\n        this.toastRegister_Complete();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={useStyles.paper}>\r\n            <Avatar className={useStyles.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              KOTUDY\r\n            </Typography>\r\n            <Typography component=\"subtitle2\" variant=\"subtitle2\">\r\n              문해력 향상 프로젝트\r\n            </Typography>\r\n            <form className={useStyles.form} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    autoComplete=\"userName\"\r\n                    name=\"userName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"userName\"\r\n                    label=\"이름\"\r\n                    autoFocus\r\n                    onChange={this.onChange}\r\n                    value={this.state.userName}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"birth\"\r\n                    name=\"birth\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"birth\"\r\n                    label=\"생년월일 ex) 980102\"\r\n                    autoFocus\r\n                    onChange={this.onChange}\r\n                    value={this.state.birth}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormControl\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    className={useStyles.formControl}\r\n                  >\r\n                    <InputLabel id=\"work\">직업</InputLabel>\r\n                    <Select\r\n                      labelId=\"work\"\r\n                      id=\"work\"\r\n                      value={this.state.work}\r\n                      onChange={this.onChangeWork}\r\n                      label=\"Work\"\r\n                    >\r\n                      <MenuItem value=\"preschooler\">유치원생</MenuItem>\r\n                      <MenuItem value=\"elementarySchoolStudent\">\r\n                        초등학생\r\n                      </MenuItem>\r\n                      <MenuItem value=\"middleSchoolStudent\">중학생</MenuItem>\r\n                      <MenuItem value=\"highSchoolStudent\">고등학생</MenuItem>\r\n                      <MenuItem value=\"universityStudent\">대학생</MenuItem>\r\n                      <MenuItem value=\"adult\">성인</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"userId\"\r\n                    label=\"ID\"\r\n                    type=\"userId\"\r\n                    id=\"userId\"\r\n                    autoComplete=\"userId\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.userId}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"userPassword\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"userPassword\"\r\n                    autoComplete=\"current-userPassword\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.userPassword}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={useStyles.submit}\r\n                onClick={this.handleRegister}\r\n              >\r\n                회원가입\r\n              </Button>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Link href=\"/SignIn\" variant=\"body2\">\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <Box mt={5}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n        <div>\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={2000}\r\n            hideProgressBar\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n            transition={Flip}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAuthSignUp.propTypes = {\r\n  onRegister: PropTypes.func,\r\n};\r\n\r\nAuthSignUp.defaultProps = {\r\n  onRegister: (body) => {\r\n    console.error(\"sign Up function not defined\");\r\n  },\r\n};\r\n\r\nexport default AuthSignUp;\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\Authentication.js",["185","186"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nclass Authentication extends Component {\r\n  state = {\r\n    userId: \"\",\r\n    userPassword: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  };\r\n\r\n  handleLogin = () => {\r\n    let id = this.state.userId;\r\n    let pw = this.state.userPassword;\r\n\r\n    // 정보가 부족하면 오류 메시지 출력\r\n    if (this.state.userId === \"\") {\r\n      this.toastCheckInfo_NotInfoID();\r\n      return false;\r\n    } else if (this.state.userPassword === \"\") {\r\n      this.toastCheckInfo_NotInfoPassword();\r\n      return false;\r\n    }\r\n\r\n    this.props.onLogin(id, pw).then((success) => {\r\n      // 실패하면 비밀번호 재입력 받음\r\n      console.log(\"Auth_handleLogin\");\r\n      if (!success) {\r\n        console.log(this.props);\r\n        this.toastCheckInfo_Fail();\r\n        this.setState({\r\n          userPassword: \"\",\r\n        });\r\n      } else {\r\n        this.toastCheckInfo_Complete();\r\n      }\r\n    });\r\n  };\r\n\r\n  toastCheckInfo_Complete = () => toast(this.state.userId + \"님 반갑습니다.\");\r\n  toastCheckInfo_NotInfoID = () => toast.error(\"아이디를 입력해주세요.\");\r\n  toastCheckInfo_NotInfoPassword = () =>\r\n    toast.error(\"비밀번호를 입력해주세요.\");\r\n  toastCheckInfo_Fail = () =>\r\n    toast.error(\"아이디 또는 패스워드가 잘못 입력되었습니다.\");\r\n\r\n  render() {\r\n    const button = {};\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={useStyles.paper}>\r\n          <Avatar className={useStyles.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            LOGIN\r\n          </Typography>\r\n          <form className={useStyles.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"userId\"\r\n              label=\"ID\"\r\n              name=\"userId\"\r\n              autoComplete=\"userId\"\r\n              autoFocus\r\n              value={this.state.userId}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"userPassword\"\r\n              label=\"PASSWORD\"\r\n              type=\"Password\"\r\n              id=\"userPassword\"\r\n              autoComplete=\"current-password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.userPassword}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={useStyles.submit}\r\n              onClick={this.handleLogin}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/SignUp\" variant=\"body2\">\r\n                  {\"계정이 없다면? 회원가입하러 가기\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <div>\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={2000}\r\n            hideProgressBar\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n            transition={Flip}\r\n          />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nAuthentication.propTypes = {\r\n  onLogin: PropTypes.func,\r\n};\r\n\r\nAuthentication.defaultProps = {\r\n  onLogin: (id, pw) => {\r\n    console.error(\"login function not defined\");\r\n  },\r\n};\r\n\r\nexport default Authentication;\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordMeaning\\MainWordMeaning.js",["187","188","189","190"],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MyDictionary.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MySearch.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\index.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\actions.js",[],{"ruleId":"191","severity":1,"message":"192","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":14},{"ruleId":"191","severity":1,"message":"195","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":22},{"ruleId":"191","severity":1,"message":"196","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":19},{"ruleId":"191","severity":1,"message":"197","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":16},{"ruleId":"191","severity":1,"message":"198","line":32,"column":11,"nodeType":"193","messageId":"194","endLine":32,"endColumn":19},{"ruleId":"199","severity":1,"message":"200","line":37,"column":49,"nodeType":"201","messageId":"202","endLine":37,"endColumn":50},{"ruleId":"191","severity":1,"message":"203","line":45,"column":13,"nodeType":"193","messageId":"194","endLine":45,"endColumn":17},{"ruleId":"191","severity":1,"message":"204","line":1,"column":28,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"205","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":14},{"ruleId":"206","severity":1,"message":"207","line":24,"column":6,"nodeType":"208","endLine":24,"endColumn":8,"suggestions":"209"},{"ruleId":"206","severity":1,"message":"210","line":22,"column":8,"nodeType":"208","endLine":22,"endColumn":10,"suggestions":"211"},{"ruleId":"191","severity":1,"message":"212","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":21},{"ruleId":"191","severity":1,"message":"204","line":1,"column":28,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"206","severity":1,"message":"213","line":55,"column":6,"nodeType":"208","endLine":55,"endColumn":8,"suggestions":"214"},{"ruleId":"191","severity":1,"message":"212","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":21},{"ruleId":"191","severity":1,"message":"215","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":13},{"ruleId":"216","severity":1,"message":"217","line":56,"column":21,"nodeType":"218","endLine":56,"endColumn":27},{"ruleId":"206","severity":1,"message":"219","line":56,"column":8,"nodeType":"208","endLine":56,"endColumn":10,"suggestions":"220"},{"ruleId":"191","severity":1,"message":"221","line":64,"column":11,"nodeType":"193","messageId":"194","endLine":64,"endColumn":22},{"ruleId":"216","severity":1,"message":"217","line":77,"column":21,"nodeType":"218","endLine":77,"endColumn":27},{"ruleId":"216","severity":1,"message":"217","line":85,"column":29,"nodeType":"218","endLine":85,"endColumn":33},{"ruleId":"191","severity":1,"message":"222","line":11,"column":8,"nodeType":"193","messageId":"194","endLine":11,"endColumn":24},{"ruleId":"191","severity":1,"message":"223","line":19,"column":8,"nodeType":"193","messageId":"194","endLine":19,"endColumn":13},{"ruleId":"191","severity":1,"message":"224","line":20,"column":8,"nodeType":"193","messageId":"194","endLine":20,"endColumn":18},{"ruleId":"191","severity":1,"message":"225","line":21,"column":8,"nodeType":"193","messageId":"194","endLine":21,"endColumn":17},{"ruleId":"191","severity":1,"message":"226","line":18,"column":10,"nodeType":"193","messageId":"194","endLine":18,"endColumn":19},{"ruleId":"191","severity":1,"message":"227","line":99,"column":11,"nodeType":"193","messageId":"194","endLine":99,"endColumn":17},{"ruleId":"191","severity":1,"message":"228","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":16},{"ruleId":"191","severity":1,"message":"229","line":2,"column":18,"nodeType":"193","messageId":"194","endLine":2,"endColumn":25},{"ruleId":"191","severity":1,"message":"198","line":27,"column":9,"nodeType":"193","messageId":"194","endLine":27,"endColumn":17},{"ruleId":"199","severity":1,"message":"200","line":32,"column":37,"nodeType":"201","messageId":"202","endLine":32,"endColumn":38},"no-unused-vars","'TopBar' is defined but never used.","Identifier","unusedVar","'WordDefinition' is defined but never used.","'WordExample' is defined but never used.","'WordSide' is defined but never used.","'itemLoad' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'word' is assigned a value but never used.","'useState' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dailyWordsRequest'. Either include it or remove the dependency array. If 'dailyWordsRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["230"],"React Hook useEffect has missing dependencies: 'dictionaryWordsRequest' and 'searchWordsRequest'. Either include them or remove the dependency array. If 'dictionaryWordsRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["231"],"'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'checkUserRequest', 'history', and 'thisPath'. Either include them or remove the dependency array. If 'checkUserRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["232"],"'Paper' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'history' and 'thisPath'. Either include them or remove the dependency array.",["233"],"'handleClick' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormLabel' is defined but never used.","'Copyright' is defined but never used.","'button' is assigned a value but never used.","'Button' is defined but never used.","'Divider' is defined but never used.",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},"Update the dependencies array to be: [dailyWordsRequest]",{"range":"242","text":"243"},"Update the dependencies array to be: [dictionaryWordsRequest, searchWordsRequest]",{"range":"244","text":"245"},"Update the dependencies array to be: [checkUserRequest, history, thisPath]",{"range":"246","text":"247"},"Update the dependencies array to be: [history, thisPath]",{"range":"248","text":"249"},[798,800],"[dailyWordsRequest]",[705,707],"[dictionaryWordsRequest, searchWordsRequest]",[1409,1411],"[checkUserRequest, history, thisPath]",[1490,1492],"[history, thisPath]"]