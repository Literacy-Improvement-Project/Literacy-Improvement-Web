[{"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\index.js":"1","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\reportWebVitals.js":"2","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\store.js":"3","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\App.js":"4","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\rootReducer.js":"5","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Main.js":"6","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\Login.js":"7","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\SignUp.js":"8","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\TopBar.js":"9","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\MyPage.js":"10","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Word.js":"11","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\Authentication.js":"12","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\AuthSignUp.js":"13","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\actions.js":"14","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\actions.js":"15","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MySearch.js":"16","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MyDictionary.js":"17","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\index.js":"18","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\types.js":"19","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\types.js":"20","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainWordOfTheDay.js":"21","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\SentenceParaphrase.js":"22","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordMeaning\\MainWordMeaning.js":"23","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\actions.js":"24","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\actions.js":"25","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\actions.js":"26","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\actions.js":"27","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\types.js":"28","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\types.js":"29","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\types.js":"30","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\types.js":"31","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\reducer.js":"32","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\reducer.js":"33","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\reducer.js":"34","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\reducer.js":"35","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\reducer.js":"36","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\reducer.js":"37","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\reducer.js":"38","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\types.js":"39","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\actions.js":"40","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuth.js":"41","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\reducer.js":"42","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\types.js":"43","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\actions.js":"44","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuthRedirectHandler.js":"45","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Login.js":"46"},{"size":643,"mtime":1631274722156,"results":"47","hashOfConfig":"48"},{"size":375,"mtime":1631274722172,"results":"49","hashOfConfig":"48"},{"size":667,"mtime":1631274722172,"results":"50","hashOfConfig":"48"},{"size":977,"mtime":1635864981075,"results":"51","hashOfConfig":"48"},{"size":759,"mtime":1634049588782,"results":"52","hashOfConfig":"48"},{"size":4069,"mtime":1635866481504,"results":"53","hashOfConfig":"48"},{"size":1373,"mtime":1635866161017,"results":"54","hashOfConfig":"48"},{"size":1200,"mtime":1631274722156,"results":"55","hashOfConfig":"48"},{"size":3994,"mtime":1635863850059,"results":"56","hashOfConfig":"48"},{"size":2010,"mtime":1631274722156,"results":"57","hashOfConfig":"48"},{"size":3215,"mtime":1631274722172,"results":"58","hashOfConfig":"48"},{"size":5681,"mtime":1631274722156,"results":"59","hashOfConfig":"48"},{"size":8829,"mtime":1631274722156,"results":"60","hashOfConfig":"48"},{"size":1993,"mtime":1634222801892,"results":"61","hashOfConfig":"48"},{"size":760,"mtime":1631274722172,"results":"62","hashOfConfig":"48"},{"size":1730,"mtime":1631274722156,"results":"63","hashOfConfig":"48"},{"size":2802,"mtime":1631274722156,"results":"64","hashOfConfig":"48"},{"size":575,"mtime":1635860587034,"results":"65","hashOfConfig":"48"},{"size":395,"mtime":1634049111444,"results":"66","hashOfConfig":"48"},{"size":156,"mtime":1631274722172,"results":"67","hashOfConfig":"48"},{"size":4450,"mtime":1635862228010,"results":"68","hashOfConfig":"48"},{"size":4339,"mtime":1634222544252,"results":"69","hashOfConfig":"48"},{"size":2037,"mtime":1631274722156,"results":"70","hashOfConfig":"48"},{"size":894,"mtime":1631274722172,"results":"71","hashOfConfig":"48"},{"size":902,"mtime":1631274722172,"results":"72","hashOfConfig":"48"},{"size":3287,"mtime":1631274722172,"results":"73","hashOfConfig":"48"},{"size":878,"mtime":1634217379589,"results":"74","hashOfConfig":"48"},{"size":223,"mtime":1631274722172,"results":"75","hashOfConfig":"48"},{"size":206,"mtime":1631274722172,"results":"76","hashOfConfig":"48"},{"size":684,"mtime":1631274722172,"results":"77","hashOfConfig":"48"},{"size":189,"mtime":1631274722172,"results":"78","hashOfConfig":"48"},{"size":877,"mtime":1634111616006,"results":"79","hashOfConfig":"48"},{"size":902,"mtime":1631274722172,"results":"80","hashOfConfig":"48"},{"size":730,"mtime":1631274722172,"results":"81","hashOfConfig":"48"},{"size":1880,"mtime":1634049116000,"results":"82","hashOfConfig":"48"},{"size":2199,"mtime":1631274722172,"results":"83","hashOfConfig":"48"},{"size":1117,"mtime":1631274722172,"results":"84","hashOfConfig":"48"},{"size":1099,"mtime":1631274722172,"results":"85","hashOfConfig":"48"},{"size":190,"mtime":1631274722172,"results":"86","hashOfConfig":"48"},{"size":932,"mtime":1631274722172,"results":"87","hashOfConfig":"48"},{"size":1572,"mtime":1635867310579,"results":"88","hashOfConfig":"48"},{"size":2767,"mtime":1635860554364,"results":"89","hashOfConfig":"48"},{"size":505,"mtime":1635860533407,"results":"90","hashOfConfig":"48"},{"size":2364,"mtime":1635866732093,"results":"91","hashOfConfig":"48"},{"size":1094,"mtime":1635867228325,"results":"92","hashOfConfig":"48"},{"size":1652,"mtime":1635866110060,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"bynrpb",{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\index.js",[],["195","196"],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\reportWebVitals.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\store.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\App.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\rootReducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Main.js",["197","198","199"],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\Login.js",["200"],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\SignUp.js",["201"],"/* 회원가입 */\r\nimport React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AuthSignUp from \"./AuthSignUp\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerRequest } from \"../../redux/signup/actions\";\r\n\r\nclass SignUp extends Component {\r\n  handleRegister = (body) => {\r\n    return this.props.registerRequest(body).then(() => {\r\n      console.log(this.props.history);\r\n      if (this.props.statusReg === \"SUCCESS\") {\r\n        // 회원가입 성공시 로그인 화면으로 돌아감.\r\n        this.props.history.push(\"/Login\");\r\n        return true;\r\n      } else {\r\n        console.log(\"회원가입 실패\");\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AuthSignUp onRegister={this.handleRegister} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    statusReg: state.register.register.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    registerRequest: (body) => {\r\n      return dispatch(registerRequest(body));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\TopBar.js",["202","203"],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\MyPage.js",["204","205"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MySearch from \"../components/MyPage/MySearch\";\r\nimport MyDictionary from \"../components/MyPage/MyDictionary\";\r\nimport {\r\n  dictionaryWordsRequest,\r\n  searchWordsRequest,\r\n  wordDeleteRequest,\r\n} from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction MyPage({\r\n  dictionaryWordsList,\r\n  searchWordsList,\r\n  dictionaryWordsRequest,\r\n  searchWordsRequest,\r\n  wordDeleteRequest,\r\n}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    dictionaryWordsRequest(false);\r\n    searchWordsRequest();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const handleDelete = (word) => {\r\n    wordDeleteRequest(word);\r\n    console.log(word);\r\n    console.log(dictionaryWordsList);\r\n  };\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <MyDictionary\r\n              dictionaryWordsList={dictionaryWordsList}\r\n              handleDelete={handleDelete}\r\n            ></MyDictionary>\r\n          </Grid>\r\n         \r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // userID: state.authentication.status.currentUser,\r\n    searchWordsList: state.myPage.status.searchWordsList,\r\n    dictionaryWordsList: state.myPage.status.dictionaryWordsList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    searchWordsRequest: () => {\r\n      return dispatch(searchWordsRequest());\r\n    },\r\n    dictionaryWordsRequest: (word) => {\r\n      return dispatch(dictionaryWordsRequest(word));\r\n    },\r\n    wordDeleteRequest: (word) => {\r\n      return dispatch(wordDeleteRequest(word));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPage);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Word.js",["206","207","208"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { oneWordRequest, dictionaryWordsRequest } from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  padding: {\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  paper: {\r\n    borderBottom: \"1px solid black\",\r\n  },\r\n}));\r\nfunction Word({ wordStatus, oneWordRequest, dictionaryWordsRequest }) {\r\n  useEffect(() => {\r\n    oneWordRequest(keyword);\r\n  }, []);\r\n  const { keyword } = useParams();\r\n  console.log(keyword);\r\n  let wordName = [];\r\n  let pronunciation = [];\r\n  let pos = [];\r\n  let sense = [];\r\n  const itemLoad = wordStatus.map((item, index) => (\r\n    <div key={index}>\r\n      {\r\n        (wordName.push(item.word),\r\n        pronunciation.push(item.pronunciation),\r\n        pos.push(item.pos),\r\n        sense.push(item.sense))\r\n      }\r\n    </div>\r\n  ));\r\n  const classes = useStyles();\r\n  const handleClickDictionary = () => {\r\n    dictionaryWordsRequest(wordName[0]).then(()=> {\r\n      toastAddToNoteSuccess()\r\n    });\r\n    console.log(wordName[0]);\r\n  };\r\n\r\n  const toastAddToNoteSuccess = () => toast(\"단어장에 추가되었습니다!\");\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={3}>\r\n            <h3>\r\n              {wordName[0]} [{pronunciation[0]}]\r\n            </h3>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n          <Grid item xs={7}>\r\n            <Button color=\"primary\" variant=\"contained\" onClick={handleClickDictionary}>나만의 단어장에 추가</Button>\r\n          </Grid>\r\n          {wordName.map((word, index) => (\r\n            <Grid item key={index} xs={12} className={classes.paper}>\r\n              <h4>\r\n                {wordName[index]}[{pronunciation[index]}]\r\n              </h4>\r\n              <h4>{pos[index]}</h4>\r\n              {sense[index].map((item, i) => (\r\n                <h5>\r\n                  {i + 1}.{item.definition}\r\n                </h5>\r\n              ))}\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    wordStatus: state.oneWord.status.wordStatus,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    oneWordRequest: (word) => {\r\n      return dispatch(oneWordRequest(word));\r\n    },\r\n    dictionaryWordsRequest: (word) => {\r\n      return dispatch(dictionaryWordsRequest(word));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Word);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\Authentication.js",["209","210"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nclass Authentication extends Component {\r\n  state = {\r\n    userId: \"\",\r\n    userPassword: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  };\r\n\r\n  handleLogin = () => {\r\n    let id = this.state.userId;\r\n    let pw = this.state.userPassword;\r\n\r\n    // 정보가 부족하면 오류 메시지 출력\r\n    if (this.state.userId === \"\") {\r\n      this.toastCheckInfo_NotInfoID();\r\n      return false;\r\n    } else if (this.state.userPassword === \"\") {\r\n      this.toastCheckInfo_NotInfoPassword();\r\n      return false;\r\n    }\r\n\r\n    this.props.onLogin(id, pw).then((success) => {\r\n      // 실패하면 비밀번호 재입력 받음\r\n      if (!success) {\r\n        console.log(this.props);\r\n        this.toastCheckInfo_Fail();\r\n        this.setState({\r\n          userPassword: \"\",\r\n        });\r\n      } else {\r\n        this.toastCheckInfo_Complete();\r\n        window.location.replace(\"/Home\");\r\n      }\r\n    });\r\n  };\r\n\r\n  toastCheckInfo_Complete = () => toast(this.state.userId + \"님 반갑습니다.\");\r\n  toastCheckInfo_NotInfoID = () => toast.error(\"아이디를 입력해주세요.\");\r\n  toastCheckInfo_NotInfoPassword = () =>\r\n    toast.error(\"비밀번호를 입력해주세요.\");\r\n  toastCheckInfo_Fail = () =>\r\n    toast.error(\"아이디 또는 패스워드가 잘못 입력되었습니다.\");\r\n\r\n  render() {\r\n    const button = {};\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={useStyles.paper}>\r\n          <Grid space={1} xs={12}></Grid>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Avatar className={useStyles.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              LOGIN\r\n            </Typography>\r\n          </Grid>\r\n          <form className={useStyles.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"userId\"\r\n              label=\"ID\"\r\n              name=\"userId\"\r\n              autoComplete=\"userId\"\r\n              autoFocus\r\n              value={this.state.userId}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"userPassword\"\r\n              label=\"PASSWORD\"\r\n              type=\"Password\"\r\n              id=\"userPassword\"\r\n              autoComplete=\"current-password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.userPassword}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={useStyles.submit}\r\n              onClick={this.handleLogin}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/SignUp\" variant=\"body2\">\r\n                  {\"계정이 없다면? 회원가입하러 가기\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <div>\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={2000}\r\n            hideProgressBar\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n            transition={Flip}\r\n          />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nAuthentication.propTypes = {\r\n  onLogin: PropTypes.func,\r\n};\r\n\r\nAuthentication.defaultProps = {\r\n  onLogin: (id, pw) => {\r\n    console.error(\"login function not defined\");\r\n  },\r\n};\r\n\r\nexport default Authentication;\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\AuthSignUp.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MySearch.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MyDictionary.js",["211","212","213","214"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n    // width: '100%',\r\n    // maxWidth: '100ch',\r\n    height: \"42ch\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: \"20px\",\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  paper: {\r\n    //padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    // height: '7ch',\r\n    color: theme.palette.text.secondary,\r\n    display: \"inline-block\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n    width: \"40%\"\r\n  },\r\n  button: {\r\n    float: \"left\",\r\n    border: \"none\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"5px\",\r\n    width: \"150px\",\r\n    height: \"2.5rem\",\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: \"400\",\r\n    textAlign: \"left\",\r\n  },\r\n  deletebutton: {\r\n    float: \"right\",\r\n    border: \"none\",\r\n    width: \"3rem\",\r\n    height: \"2rem\",\r\n    borderRadius: \"5px\",\r\n    color: \"white\",\r\n    fontSize: \"0.85rem\",\r\n    fontWeight: \"400\",\r\n\r\n    backgroundColor: \"#ff575d\",\r\n  },\r\n  test: {\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n}));\r\n\r\nexport default function MyDictionary({ dictionaryWordsList, handleDelete }) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n\r\n  let wordName = [];\r\n  let wordForDelete = \"\";\r\n  const itemLoad = dictionaryWordsList.map((item, index) => (\r\n    <div key={index}>{wordName.push(item)}</div>\r\n  ));\r\n  const classes = useStyles();\r\n\r\n  const wordDelete = (word) => {\r\n    handleDelete(word);\r\n  };\r\n\r\n  console.log(wordName);\r\n\r\n  const myWordList = wordName.map((word, index) => (\r\n    <Grid item key={index} xs={12} className={classes.paper}>\r\n      <Link to={`/Word/${wordName[index]}`}>\r\n        <button className={classes.button}>{wordName[index]}</button>\r\n      </Link>\r\n      <button\r\n        className={classes.deletebutton}\r\n        onClick={() => wordDelete(wordName[index])}\r\n      >\r\n        삭제\r\n      </button>\r\n    </Grid>\r\n  ));\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <h3>\r\n            내 단어장\r\n          </h3>\r\n        </Grid>\r\n        {myWordList}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n//props 내용물 설정되면 출력형식 바꿔야함\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\index.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainWordOfTheDay.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\SentenceParaphrase.js",["215","216"],"import React, { useEffect, useState } from \"react\";\r\nimport {} from \"../redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n\r\n    // padding: theme.spacing(10),\r\n    // width: '100%',\r\n    // maxWidth: '30ch',\r\n    height: \"42ch\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #D9D9D9\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  test: {\r\n    // height: '50%',\r\n    float: \"right\",\r\n    // border: '1px solid #D9D9D9',\r\n    // position: 'abolute',\r\n    // left: '50%',\r\n    // top: '50%',\r\n    // transform: 'translate(-50%, -50%)',\r\n\r\n    // display: 'flex',\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n  },\r\n  box: {\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  bottom: {\r\n    display: \"inline\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n  },\r\n}));\r\n\r\nexport default function SentenceParaphrase({\r\n  onClickCheckParaphrase,\r\n  paraphraseCheckValid,\r\n  paraphraseResult,\r\n}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  const [userSentence, setUserSentence] = useState(\"\");\r\n  const paraphraseCheckResult = useSelector(\r\n    (state) => state.paraphrase.status.result\r\n  );\r\n\r\n  const handleChange = ({ target }) => {\r\n    setUserSentence(target.value);\r\n  };\r\n\r\n  let exampleSentence =\r\n    \"성탄 전야 미사를 집전하며 프란치스코 교황이 전한 메시지는 '어린이를 향한 관심'입니다.\";\r\n\r\n  const checkParaphrase = (e) => {\r\n    let body = {\r\n      sentence1: exampleSentence,\r\n      sentence2: userSentence,\r\n    };\r\n\r\n    onClickCheckParaphrase(body);\r\n  };\r\n\r\n  if (paraphraseCheckResult === \"paraphrase\") {\r\n    exampleSentence =\r\n      \"거짓을 행하는 자는 내 집 안에 거주하지 못하며 거짓말하는 자는 내 목전에 서지 못하리로다.\";\r\n  }\r\n  // const checkResultParaphrase = <div style=\"color: #0A0\">같은 의미입니다!</div>;\r\n  // const checkResultNonParaphrase = (\r\n  //   <div style=\"color: #0A0\">다른 의미입니다. 다시 입력해 주세요.</div>\r\n  // );\r\n  // const checkResult =\r\n  //   paraphraseResult === \"paraphrase\"\r\n  //     ? checkResultParaphrase\r\n  //     : checkResultNonParaphrase;\r\n\r\n  // // hanspell-example.js\r\n  // const hanspell = require(\"hanspell\");\r\n\r\n  // const sentence = \"리랜드는 얼굴 골격이 굵은게,\";\r\n  // const end = function () {\r\n  //   console.log(\"// check ends\");\r\n  // };\r\n  // const error = function (err) {\r\n  //   console.error(\"// error: \" + err);\r\n  // };\r\n\r\n  // hanspell.spellCheckByDAUM(sentence, 6000, console.log, end, error);\r\n  // hanspell.spellCheckByPNU(sentence, 6000, console.log, end, error);\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <h3>바꿔쓰기(Paraphrasing)</h3>\r\n        </Grid>\r\n        <h5>{exampleSentence}</h5>\r\n        <TextField\r\n          id=\"standard-textarea\"\r\n          multiline\r\n          label=\"같은 뜻의 문장을 입력하세요.\"\r\n          name=\"sentence\"\r\n          autoFocus\r\n          fullWidth\r\n          value={userSentence}\r\n          onChange={handleChange}\r\n        />\r\n        <Grid item>\r\n          <Button color=\"primary\" onClick={checkParaphrase} variant=\"contained\">\r\n            확인하기\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordMeaning\\MainWordMeaning.js",["217"],"import React, { useState } from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport \"./MainWordMeaning.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function MainWordMeaning({ handleMorpheme, item }) {\r\n  const [checked, setChecked] = useState(false);\r\n  const [searchBox, setSearchBox] = useState(\"\");\r\n\r\n  const handleChange = ({ target }) => {\r\n    setSearchBox(target.value);\r\n  };\r\n\r\n  const checkMorpheme = (e) => {\r\n    handleMorpheme(searchBox);\r\n    setChecked(true);\r\n  };\r\n\r\n  const morpheme = {\r\n    pos: [],\r\n    name: [],\r\n  };\r\n\r\n  const morphemeLoad = () => {\r\n    for (let i = 0; i < item.length; i++) {\r\n      if (i % 2 == 0) {\r\n        morpheme.pos.push(item[i]);\r\n      } else {\r\n        morpheme.name.push(item[i]);\r\n      }\r\n    }\r\n  };\r\n  morphemeLoad();\r\n  const searchPage = (\r\n    <div className=\"inputs\">\r\n      <div> 문장 / 단어</div>\r\n      <TextField\r\n        className=\"search\"\r\n        id=\"filled-basic\"\r\n        label=\"원하는 단어나 문장을 입력해 주세요.\"\r\n        value={searchBox}\r\n        autoFocus\r\n        onChange={(e) => handleChange(e)}\r\n      />\r\n      <Button color=\"primary\" onClick={checkMorpheme}  variant=\"contained\">\r\n        검색\r\n      </Button>\r\n    </div>\r\n  );\r\n  const searchSuccess =(\r\n   morpheme.pos.map((item, index) => (\r\n    <div key={index}>\r\n      <h2 style={{ margineft: 10 }}>\r\n        [{morpheme.pos[index]}] {morpheme.name[index]}\r\n      </h2>\r\n      <Link to={`/Word/${morpheme.name[index]}`}>\r\n        <Button color=\"primary\"  variant=\"contained\">더 알아보기</Button>\r\n      </Link>\r\n    </div>\r\n  ))\r\n  );\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h3 className=\"title\"> 이건 무슨 뜻이지? </h3>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          {searchPage}\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          {!checked ? null : searchSuccess}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n    \r\n  );\r\n}\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuth.js",["218","219","220","221"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./OAuth.css\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n\r\n    // padding: theme.spacing(10),\r\n    // width: '100%',\r\n    // maxWidth: '30ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #D9D9D9\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  test: {\r\n    // height: '50%',\r\n    float: \"right\",\r\n    // border: '1px solid #D9D9D9',\r\n    // position: 'abolute',\r\n    // left: '50%',\r\n    // top: '50%',\r\n    // transform: 'translate(-50%, -50%)',\r\n\r\n    // display: 'flex',\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n  },\r\n  box: {\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  bottom: {\r\n    display: \"inline\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n  },\r\n}));\r\n\r\nexport default function OAuth({}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  const CLIENT_ID = \"ade593cab628c91e766dd3f9497bbc92\";\r\n  const REDIRECT_URI = \"http://localhost:3000/kakaoAuth\";\r\n\r\n  const KAKAO_AUTH_URL = `https://kauth.kakao.com/oauth/authorize?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=code`;\r\n\r\n  return (\r\n    <div>\r\n      <Button id=\"kakaoLoginButton\" href={KAKAO_AUTH_URL}></Button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuthRedirectHandler.js",["222","223","224","225"],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Login.js",["226","227","228","229"],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":1,"column":28,"nodeType":"236","messageId":"237","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"239","line":41,"column":6,"nodeType":"240","endLine":41,"endColumn":8,"suggestions":"241"},{"ruleId":"234","severity":1,"message":"242","line":65,"column":9,"nodeType":"236","messageId":"237","endLine":65,"endColumn":36},{"ruleId":"234","severity":1,"message":"243","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":21},{"ruleId":"234","severity":1,"message":"243","line":3,"column":10,"nodeType":"236","messageId":"237","endLine":3,"endColumn":21},{"ruleId":"234","severity":1,"message":"235","line":1,"column":28,"nodeType":"236","messageId":"237","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"244","line":64,"column":6,"nodeType":"240","endLine":64,"endColumn":8,"suggestions":"245"},{"ruleId":"234","severity":1,"message":"246","line":4,"column":8,"nodeType":"236","messageId":"237","endLine":4,"endColumn":16},{"ruleId":"238","severity":1,"message":"247","line":32,"column":6,"nodeType":"240","endLine":32,"endColumn":8,"suggestions":"248"},{"ruleId":"238","severity":1,"message":"249","line":27,"column":6,"nodeType":"240","endLine":27,"endColumn":8,"suggestions":"250"},{"ruleId":"234","severity":1,"message":"251","line":34,"column":9,"nodeType":"236","messageId":"237","endLine":34,"endColumn":17},{"ruleId":"252","severity":1,"message":"253","line":37,"column":34,"nodeType":"254","messageId":"255","endLine":37,"endColumn":35},{"ruleId":"234","severity":1,"message":"256","line":18,"column":10,"nodeType":"236","messageId":"237","endLine":18,"endColumn":19},{"ruleId":"234","severity":1,"message":"257","line":99,"column":11,"nodeType":"236","messageId":"237","endLine":99,"endColumn":17},{"ruleId":"234","severity":1,"message":"258","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"259","line":6,"column":10,"nodeType":"236","messageId":"237","endLine":6,"endColumn":20},{"ruleId":"234","severity":1,"message":"260","line":67,"column":7,"nodeType":"236","messageId":"237","endLine":67,"endColumn":20},{"ruleId":"234","severity":1,"message":"251","line":68,"column":9,"nodeType":"236","messageId":"237","endLine":68,"endColumn":17},{"ruleId":"234","severity":1,"message":"259","line":9,"column":10,"nodeType":"236","messageId":"237","endLine":9,"endColumn":20},{"ruleId":"234","severity":1,"message":"261","line":11,"column":26,"nodeType":"236","messageId":"237","endLine":11,"endColumn":31},{"ruleId":"262","severity":1,"message":"263","line":29,"column":17,"nodeType":"264","messageId":"265","endLine":29,"endColumn":19},{"ruleId":"234","severity":1,"message":"235","line":1,"column":28,"nodeType":"236","messageId":"237","endLine":1,"endColumn":36},{"ruleId":"234","severity":1,"message":"243","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":21},{"ruleId":"266","severity":1,"message":"267","line":43,"column":31,"nodeType":"268","messageId":"265","endLine":43,"endColumn":33},{"ruleId":"234","severity":1,"message":"269","line":48,"column":9,"nodeType":"236","messageId":"237","endLine":48,"endColumn":16},{"ruleId":"234","severity":1,"message":"235","line":4,"column":28,"nodeType":"236","messageId":"237","endLine":4,"endColumn":36},{"ruleId":"234","severity":1,"message":"243","line":5,"column":19,"nodeType":"236","messageId":"237","endLine":5,"endColumn":30},{"ruleId":"234","severity":1,"message":"270","line":5,"column":32,"nodeType":"236","messageId":"237","endLine":5,"endColumn":43},{"ruleId":"238","severity":1,"message":"271","line":16,"column":6,"nodeType":"240","endLine":16,"endColumn":8,"suggestions":"272"},{"ruleId":"234","severity":1,"message":"235","line":1,"column":28,"nodeType":"236","messageId":"237","endLine":1,"endColumn":36},{"ruleId":"234","severity":1,"message":"243","line":2,"column":19,"nodeType":"236","messageId":"237","endLine":2,"endColumn":30},{"ruleId":"234","severity":1,"message":"261","line":8,"column":26,"nodeType":"236","messageId":"237","endLine":8,"endColumn":31},{"ruleId":"266","severity":1,"message":"267","line":17,"column":16,"nodeType":"268","messageId":"265","endLine":17,"endColumn":18},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dailyWordsRequest'. Either include it or remove the dependency array. If 'dailyWordsRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["275"],"'toastCheckParaphraseFailure' is assigned a value but never used.","'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'thisPath'. Either include them or remove the dependency array.",["276"],"'MySearch' is defined but never used.","React Hook useEffect has missing dependencies: 'dictionaryWordsRequest' and 'searchWordsRequest'. Either include them or remove the dependency array. If 'dictionaryWordsRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["277"],"React Hook useEffect has missing dependencies: 'keyword' and 'oneWordRequest'. Either include them or remove the dependency array. If 'oneWordRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["278"],"'itemLoad' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Copyright' is defined but never used.","'button' is assigned a value but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'wordForDelete' is assigned a value but never used.","'toast' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'classes' is assigned a value but never used.","'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'code' and 'kakaoAuthRequest'. Either include them or remove the dependency array. If 'kakaoAuthRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["279"],"no-global-assign","no-unsafe-negation",{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [dailyWordsRequest]",{"range":"290","text":"291"},"Update the dependencies array to be: [history, thisPath]",{"range":"292","text":"293"},"Update the dependencies array to be: [dictionaryWordsRequest, searchWordsRequest]",{"range":"294","text":"295"},"Update the dependencies array to be: [keyword, oneWordRequest]",{"range":"296","text":"297"},"Update the dependencies array to be: [code, kakaoAuthRequest]",{"range":"298","text":"299"},[1040,1042],"[dailyWordsRequest]",[1631,1633],"[history, thisPath]",[752,754],"[dictionaryWordsRequest, searchWordsRequest]",[803,805],"[keyword, oneWordRequest]",[454,456],"[code, kakaoAuthRequest]"]