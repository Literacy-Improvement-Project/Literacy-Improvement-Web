[{"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\index.js":"1","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\App.js":"2","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\reportWebVitals.js":"3","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\store.js":"4","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\TopBar.js":"5","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordRanking.js":"6","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\MyPage.js":"7","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Main.js":"8","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Login.js":"9","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\Quiz.js":"10","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Word.js":"11","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\Summary.js":"12","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\SignUp.js":"13","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuthRedirectHandler.js":"14","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\rootReducer.js":"15","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainWordOfTheDay.js":"16","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuth.js":"17","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\QuizItem.js":"18","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\AuthSignUp.js":"19","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MyDictionary.js":"20","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MySearch.js":"21","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordMeaning\\MainWordMeaning.js":"22","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\reducer.js":"23","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\actions.js":"24","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\reducer.js":"25","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\reducer.js":"26","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\reducer.js":"27","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\reducer.js":"28","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\reducer.js":"29","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\reducer.js":"30","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\reducer.js":"31","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\reducer.js":"32","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\reducer.js":"33","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\index.js":"34","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\types.js":"35","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\types.js":"36","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\types.js":"37","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\types.js":"38","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\types.js":"39","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\types.js":"40","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\types.js":"41","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\types.js":"42","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\types.js":"43","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\types.js":"44","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\actions.js":"45","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\actions.js":"46","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\actions.js":"47","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\actions.js":"48","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\actions.js":"49","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\actions.js":"50","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\actions.js":"51","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\actions.js":"52","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\actions.js":"53","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\Mainquiz.js":"54","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainQuiz.js":"55"},{"size":643,"mtime":1646365950266,"results":"56","hashOfConfig":"57"},{"size":1293,"mtime":1646365950192,"results":"58","hashOfConfig":"57"},{"size":375,"mtime":1646365950332,"results":"59","hashOfConfig":"57"},{"size":667,"mtime":1646365950328,"results":"60","hashOfConfig":"57"},{"size":3690,"mtime":1646365950208,"results":"61","hashOfConfig":"57"},{"size":10554,"mtime":1646365950215,"results":"62","hashOfConfig":"57"},{"size":2023,"mtime":1646365950273,"results":"63","hashOfConfig":"57"},{"size":3736,"mtime":1646762046334,"results":"64","hashOfConfig":"57"},{"size":1652,"mtime":1646365950268,"results":"65","hashOfConfig":"57"},{"size":3583,"mtime":1646365950231,"results":"66","hashOfConfig":"57"},{"size":3438,"mtime":1646365950274,"results":"67","hashOfConfig":"57"},{"size":2106,"mtime":1646365950236,"results":"68","hashOfConfig":"57"},{"size":1200,"mtime":1646365950248,"results":"69","hashOfConfig":"57"},{"size":1094,"mtime":1646365950229,"results":"70","hashOfConfig":"57"},{"size":873,"mtime":1646365950323,"results":"71","hashOfConfig":"57"},{"size":4423,"mtime":1646365950196,"results":"72","hashOfConfig":"57"},{"size":788,"mtime":1646365950226,"results":"73","hashOfConfig":"57"},{"size":3809,"mtime":1646365950233,"results":"74","hashOfConfig":"57"},{"size":8320,"mtime":1646365950243,"results":"75","hashOfConfig":"57"},{"size":2585,"mtime":1646365950201,"results":"76","hashOfConfig":"57"},{"size":1703,"mtime":1646365950203,"results":"77","hashOfConfig":"57"},{"size":2553,"mtime":1646365950212,"results":"78","hashOfConfig":"57"},{"size":730,"mtime":1646365950326,"results":"79","hashOfConfig":"57"},{"size":760,"mtime":1646365950324,"results":"80","hashOfConfig":"57"},{"size":1117,"mtime":1646365950310,"results":"81","hashOfConfig":"57"},{"size":902,"mtime":1646365950289,"results":"82","hashOfConfig":"57"},{"size":2199,"mtime":1646365950307,"results":"83","hashOfConfig":"57"},{"size":1880,"mtime":1646365950284,"results":"84","hashOfConfig":"57"},{"size":1525,"mtime":1646365950321,"results":"85","hashOfConfig":"57"},{"size":877,"mtime":1646365950314,"results":"86","hashOfConfig":"57"},{"size":1101,"mtime":1646365950302,"results":"87","hashOfConfig":"57"},{"size":2287,"mtime":1646365950317,"results":"88","hashOfConfig":"57"},{"size":2655,"mtime":1646365950297,"results":"89","hashOfConfig":"57"},{"size":766,"mtime":1646365950291,"results":"90","hashOfConfig":"57"},{"size":156,"mtime":1646365950327,"results":"91","hashOfConfig":"57"},{"size":189,"mtime":1646365950312,"results":"92","hashOfConfig":"57"},{"size":684,"mtime":1646365950309,"results":"93","hashOfConfig":"57"},{"size":223,"mtime":1646365950291,"results":"94","hashOfConfig":"57"},{"size":395,"mtime":1646365950285,"results":"95","hashOfConfig":"57"},{"size":192,"mtime":1646365950304,"results":"96","hashOfConfig":"57"},{"size":334,"mtime":1646365950323,"results":"97","hashOfConfig":"57"},{"size":206,"mtime":1646365950315,"results":"98","hashOfConfig":"57"},{"size":444,"mtime":1646365950319,"results":"99","hashOfConfig":"57"},{"size":496,"mtime":1646365950300,"results":"100","hashOfConfig":"57"},{"size":1791,"mtime":1646365950316,"results":"101","hashOfConfig":"57"},{"size":2260,"mtime":1646365950295,"results":"102","hashOfConfig":"57"},{"size":1506,"mtime":1646365950320,"results":"103","hashOfConfig":"57"},{"size":894,"mtime":1646365950313,"results":"104","hashOfConfig":"57"},{"size":842,"mtime":1646365950300,"results":"105","hashOfConfig":"57"},{"size":878,"mtime":1646365950310,"results":"106","hashOfConfig":"57"},{"size":1993,"mtime":1646365950281,"results":"107","hashOfConfig":"57"},{"size":902,"mtime":1646365950287,"results":"108","hashOfConfig":"57"},{"size":3328,"mtime":1646365950306,"results":"109","hashOfConfig":"57"},{"size":1420,"mtime":1646365950199,"results":"110","hashOfConfig":"57"},{"size":1373,"mtime":1646762046334,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13vihri",{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\index.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\App.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\reportWebVitals.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\store.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\TopBar.js",["234"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  checkUserRequest,\r\n  logoutRequest,\r\n  kakaoLogoutRequest,\r\n  checkSessionRequest,\r\n} from \"../redux\";\r\nimport { useHistory } from \"react-router\";\r\n// import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction TopBar({\r\n  isLoggedIn,\r\n  kakaoLogoutRequest,\r\n  checkSessionRequest,\r\n}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    checkSessionRequest();\r\n\r\n    // 현재 경로가 '/'라면 Home으로 이동\r\n    if (thisPath === \"/\") {\r\n      history.push(\"/Home\");\r\n    }\r\n  }, []);\r\n  const history = useHistory();\r\n  let thisPath = history.location.pathname;\r\n  const classes = useStyles();\r\n\r\n  const toastOnLogout = () => toast(\"로그아웃 되었습니다.\");\r\n\r\n  const onLogout = (e) => {\r\n    kakaoLogoutRequest().then(() => {\r\n      toastOnLogout();\r\n      window.location.replace(\"/Home\");\r\n    });\r\n  };\r\n\r\n  const loginButton = (\r\n    <div>\r\n      <Button href=\"/Login\" color=\"inherit\">\r\n        로그인\r\n      </Button>\r\n      |\r\n      <Button href=\"/SignUp\" color=\"inherit\">\r\n        회원가입\r\n      </Button>\r\n    </div>\r\n  );\r\n  const logoutButton = (\r\n    <div>\r\n      <Button onClick={onLogout} color=\"inherit\">\r\n        로그아웃\r\n      </Button>\r\n      |\r\n      <Button href=\"/Mypage\" color=\"inherit\">\r\n        MyPage\r\n      </Button>\r\n      |\r\n      <Button href=\"/Ranking\" color=\"inherit\">\r\n        Ranking\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Button href=\"/Home\" color=\"inherit\" className={classes.title}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Kotudy\r\n            </Typography>\r\n          </Button>\r\n          {isLoggedIn ? logoutButton : loginButton}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userStatus: state.authentication.status,\r\n    isLoggedIn: state.kakaoAuth.status.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutRequest: () => {\r\n      return dispatch(logoutRequest());\r\n    },\r\n    checkUserRequest: () => {\r\n      return dispatch(checkUserRequest());\r\n    },\r\n    kakaoLogoutRequest: () => {\r\n      return dispatch(kakaoLogoutRequest());\r\n    },\r\n    checkSessionRequest: () => {\r\n      return dispatch(checkSessionRequest());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordRanking.js",["235","236","237","238","239","240","241","242","243","244","245"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { userRankingRequest, wordRankingRequest } from \"../redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  CardActions,\r\n  CardContent,\r\n  Card,\r\n  ButtonGroup\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    // width: '100%',\r\n    // maxWidth: '100ch',\r\n    maxheight: \"100\",\r\n    // backgroundColor: \"#3d3d3d\",\r\n    borderRadius: \"20px\",\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  paper: {\r\n    // padding: theme.spacing(2),\r\n    textAlign: \"left\",\r\n    fontWeight: \"900\",\r\n    marginBottom: \"10px\",\r\n    // height: '7ch',\r\n    // display: \"flex\",\r\n    borderRadius: \"20px\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n    borderTop: \"1px solid #D9D9D9\",\r\n\r\n    // borderBottom: \"1px solid #D9D9D9\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#63ccff\",\r\n    },\r\n  },\r\n  number: {\r\n    textAlign: \"right\",\r\n    fontWeight: \"600\",\r\n    width: \"35px\",\r\n    marginRight: \"100px\",\r\n    display: \"inline-block\",\r\n    fontFamily: \"BMHANNApro\",\r\n    fontSize: \"12px\",\r\n  },\r\n  word: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"900\",\r\n    marginRight: \"50px\",\r\n    display: \"inline-block\",\r\n    fontFamily: \"BMHANNAp\",\r\n    fontSize: \"20px\",\r\n  },\r\n  word2: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"900\",\r\n    marginLeft: \"100px\",\r\n    color: \"#6666FF\",\r\n    display: \"inline-block\",\r\n    fontFamily: \"BMHANNAp\",\r\n    fontSize: \"15px\",\r\n  },\r\n  word3: {\r\n    textAlign: \"right\",\r\n    fontWeight: \"400\",\r\n    marginLeft: \"100px\",\r\n    display: \"inline-block\",\r\n    fontFamily: \"BMHANNApro\",\r\n    fontSize: \"15px\",\r\n  },\r\n  cover: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  img: {\r\n    maxWidth: \"50px\",\r\n    height: \"auto\",\r\n    display: \"block\",\r\n    borderRadius: \"70%\",\r\n  },\r\n  subimg: {\r\n    display: \"inline-block\",\r\n    marginBottom: \"-7px\",\r\n    marginTop: \"5px\",\r\n    marginLeft: \"10px\",\r\n    maxWidth: \"25px\",\r\n    height: \"auto\",\r\n    borderRadius: \"70%\",\r\n  },\r\n  card: {\r\n    width: \"30%\",\r\n    maxWidth: \"200px\",\r\n    // backgroundColor: \"#ffff6c\",\r\n    \"&:hover\": {\r\n      // width: \"11%\",\r\n      // display: \"block\",\r\n      backgroundColor: \"#63ccff\",\r\n      // border: \"1px solid #6ca8a8\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction WordRanking({\r\n  userRanking,\r\n  userRankingRequest,\r\n  wordRanking,\r\n  wordRankingRequest,\r\n}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    wordRankingRequest();\r\n    userRankingRequest();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  // 단어페이지 이동 핸들러\r\n  const onClickOneWord = (word) => {\r\n    window.location.replace(`/Word/${word}`);\r\n  };\r\n\r\n  let wordlist = []; // wordranking데이터\r\n  let datalen = 0;\r\n  let datalen2 = 0;\r\n  let userlist = []; // userranking데이터\r\n\r\n  //데이터 복사 -> [0] : 단어,닉네임 [1] : 점수, [2] : 이미지\r\n  if (wordRanking && wordRanking.length > 0) {\r\n    wordlist.push(wordRanking[0][0]);\r\n    wordlist.push(wordRanking[1][0]);\r\n    datalen = wordlist[0].length;\r\n  }\r\n  if (userRanking && userRanking.length > 0) {\r\n    userlist.push(userRanking[0][0]);\r\n    userlist.push(userRanking[1][0]);\r\n    userlist.push(userRanking[2][0]);\r\n    datalen2 = userlist[0].length;\r\n  }\r\n\r\n\r\n\r\n  //top3로 분류\r\n  let top3word = [[], []];\r\n  let top3user = [[], [], []];\r\n\r\n  if (datalen > 2) {\r\n    top3word[0].push(wordlist[0][0]);\r\n    top3word[1].push(wordlist[1][0]);\r\n    top3word[0].push(wordlist[0][1]);\r\n    top3word[1].push(wordlist[1][1]);\r\n    top3word[0].push(wordlist[0][2]);\r\n    top3word[1].push(wordlist[1][2]);\r\n  } else if (datalen == 2) {\r\n    top3word[0].push(wordlist[0][0]);\r\n    top3word[1].push(wordlist[1][0]);\r\n    top3word[0].push(wordlist[0][1]);\r\n    top3word[1].push(wordlist[1][1]);\r\n  } else if (datalen == 1) {\r\n    top3word[0].push(wordlist[0][0]);\r\n    top3word[1].push(wordlist[1][0]);\r\n  }\r\n\r\n  if (datalen2 > 2) {\r\n    top3user[0].push(userlist[0][0]);\r\n    top3user[1].push(userlist[1][0]);\r\n    top3user[2].push(userlist[2][0]);\r\n    top3user[0].push(userlist[0][1]);\r\n    top3user[1].push(userlist[1][1]);\r\n    top3user[2].push(userlist[2][1]);\r\n    top3user[0].push(userlist[0][2]);\r\n    top3user[1].push(userlist[1][2]);\r\n    top3user[2].push(userlist[2][2]);\r\n  } else if (datalen2 == 2) {\r\n    top3user[0].push(userlist[0][0]);\r\n    top3user[1].push(userlist[1][0]);\r\n    top3user[2].push(userlist[2][0]);\r\n    top3user[0].push(userlist[0][1]);\r\n    top3user[1].push(userlist[1][1]);\r\n    top3user[2].push(userlist[2][1]);\r\n  } else if (datalen2 == 1) {\r\n    top3user[0].push(userlist[0][0]);\r\n    top3user[1].push(userlist[1][0]);\r\n    top3user[2].push(userlist[2][0]);\r\n  }\r\n\r\n  console.log(top3user);\r\n  console.log(top3word);\r\n  console.log(wordRanking);\r\n  console.log(userRanking);\r\n  console.log(wordlist);\r\n  console.log(userlist);\r\n\r\n\r\n\r\n\r\n\r\n  //top3표시하는 컴포넌트\r\n  function WordBasicCard(props) {\r\n    let image = \"rd-place.png\";\r\n    if (props.value2 === 1) image = \"st-place.png\";\r\n    else if (props.value2 === 2) image = \"nd-place.png\";\r\n    return (\r\n      <Card className={classes.card} sx={{ minWidth: 275 }}>\r\n        <CardContent>\r\n          <img\r\n            className={classes.img}\r\n            src={image}\r\n            // alt={'img'}\r\n            loading=\"lazy\"\r\n          />\r\n          <br></br>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {props.value1}\r\n          </Typography>\r\n          <br></br>\r\n          <Typography variant=\"body2\">\r\n            {props.value3} 명이 선택했어요!\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size=\"small\" onClick={() => onClickOneWord(props.value1)}>\r\n            단어 자세히 보기\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n  function UserBasicCard(props) {\r\n    return (\r\n      <Card className={classes.card} sx={{ minWidth: 275 }}>\r\n        <CardContent>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n            {props.value2}\r\n          </Typography>\r\n          <img\r\n            className={classes.img}\r\n            src={props.value4}\r\n            // alt={'img'}\r\n            loading=\"lazy\"\r\n          />\r\n          <br></br>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {props.value1}\r\n          </Typography>\r\n          <br></br>\r\n          <Typography variant=\"body2\">{props.value3} 점</Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <h3>단어랭킹</h3>\r\n        <div className={classes.cover}>\r\n          {top3word[0].map((item, index) => (\r\n            <WordBasicCard\r\n              value1={top3word[0][index]}\r\n              value2={index + 1}\r\n              value3={top3word[1][index]}\r\n            ></WordBasicCard>\r\n          ))}\r\n        </div>\r\n        <br></br>\r\n        {wordlist.length ? (\r\n          wordlist[0].map((item, index) => (\r\n            <div className={classes.cover}>\r\n              <Grid item xs={6} className={classes.paper}>\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  gutterBottom\r\n                  color=\"textPrimary\"\r\n                  className={classes.number}\r\n                >\r\n                  {index + 1}\r\n                </Typography>\r\n                <Typography\r\n                  gutterBottom\r\n                  color=\"textPrimary\"\r\n                  className={classes.word}\r\n                >\r\n                  {wordlist[0][index]}\r\n                </Typography>\r\n                <Typography\r\n                  gutterBottom\r\n                  color=\"textPrimary\"\r\n                  className={classes.word2}\r\n                >\r\n                  {wordlist[1][index]} 명이 선택했어요!\r\n                </Typography>\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={() => onClickOneWord(wordlist[0][index])}\r\n                  className={classes.word3}\r\n                >\r\n                  단어 자세히 보기\r\n                </Button>\r\n              </Grid>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n\r\n\r\n      <div className={classes.root}>\r\n        <h3>유저랭킹</h3>\r\n        <div className={classes.cover}>\r\n          {top3user[0].map((item, index) => (\r\n            <UserBasicCard\r\n              value1={top3user[0][index]}\r\n              value2={index+1} \r\n              value3={top3user[1][index]} \r\n              value4={top3user[2][index]}\r\n            ></UserBasicCard>                \r\n          ))}              \r\n        </div>\r\n        <br></br>\r\n        {userlist.length ? (\r\n          userlist[0].map((item, index) => (\r\n          <div className={classes.cover}>\r\n            <Grid item xs={6} className={classes.paper}>\r\n              <img\r\n                className={classes.subimg}\r\n                src={userlist[2][index]}\r\n                // alt={'img'}\r\n                loading=\"lazy\"\r\n              />\r\n              <Typography variant=\"h4\" gutterBottom color=\"textPrimary\" className={classes.number}>\r\n              {index+1}\r\n              </Typography>\r\n              <Typography gutterBottom color=\"textPrimary\" className={classes.word}>\r\n              {userlist[0][index]}\r\n              </Typography>\r\n              <Typography gutterBottom color=\"textPrimary\" className={classes.word2}>\r\n              {userlist[1][index]} 점\r\n              </Typography>\r\n            </Grid>\r\n          </div>\r\n          ))\r\n        ) : (\r\n        <div></div>\r\n        )}\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    wordRanking: state.ranking.status.wordRanking,\r\n    userRanking: state.ranking.status.userRanking,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    wordRankingRequest: () => {\r\n      return dispatch(wordRankingRequest());\r\n    },\r\n    userRankingRequest: () => {\r\n      return dispatch(userRankingRequest());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WordRanking);","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\MyPage.js",["246","247"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MySearch from \"../components/MyPage/MySearch\";\r\nimport MyDictionary from \"../components/MyPage/MyDictionary\";\r\nimport {\r\n  dictionaryWordsRequest,\r\n  searchWordsRequest,\r\n  wordDeleteRequest,\r\n} from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction MyPage({\r\n  dictionaryWordsList,\r\n  searchWordsList,\r\n  dictionaryWordsRequest,\r\n  searchWordsRequest,\r\n  wordDeleteRequest,\r\n}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    dictionaryWordsRequest(false);\r\n    searchWordsRequest();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const handleDelete = (word) => {\r\n    wordDeleteRequest(word);\r\n    console.log(word);\r\n    console.log(dictionaryWordsList);\r\n  };\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <MyDictionary\r\n              dictionaryWordsList={dictionaryWordsList}\r\n              handleDelete={handleDelete}\r\n            ></MyDictionary>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // userID: state.authentication.status.currentUser,\r\n    searchWordsList: state.myPage.status.searchWordsList,\r\n    dictionaryWordsList: state.myPage.status.dictionaryWordsList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    searchWordsRequest: () => {\r\n      return dispatch(searchWordsRequest());\r\n    },\r\n    dictionaryWordsRequest: (word, definition) => {\r\n      return dispatch(dictionaryWordsRequest(word, definition));\r\n    },\r\n    wordDeleteRequest: (word) => {\r\n      return dispatch(wordDeleteRequest(word));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPage);\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Main.js",["248","249","250","251","252"],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Login.js",["253","254","255","256"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport OAuth from \"../components/login/OAuth\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Login({}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={12}></Grid>\r\n          <Grid item xs={12}>\r\n            <h2>LOGIN</h2>\r\n          </Grid>\r\n          <Grid item xs={12}></Grid>\r\n          <Grid item xs={12}>\r\n            <OAuth></OAuth>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return { isLoggedIn: state.kakaoAuth.status.isLoggedIn };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\Quiz.js",["257","258","259","260","261","262","263","264","265"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { postQuizResult, quizRequest, quizSummaryUpdate } from \"../../redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./quiz.css\";\r\nimport QuizItem from \"./QuizItem\";\r\n\r\n\r\nfunction Quiz({ postQuizResult, isLoggedIn, quizStatus, quizValid, quizSummaryUpdate }) {\r\n\r\n  let quizList = []\r\n  let quizTemp = []\r\n  let maxNumQuiz = 0\r\n\r\n  useEffect(() => {\r\n    // rendering\r\n    quizRequest();\r\n  }, [])\r\n\r\n  let quizStatus2 = [{\r\n    word: \"word1\",\r\n    word_mean: \"word_mean1\",\r\n    wrong_answer1: \"wrong_answer1\",\r\n    wrong_answer2: \"wrong_answer2\",\r\n    wrong_answer3: \"wrong_answer3\",\r\n  }, {\r\n    word: \"word2\",\r\n    word_mean: \"word_mean2\",\r\n    wrong_answer1: \"wrong_answer1\",\r\n    wrong_answer2: \"wrong_answer2\",\r\n    wrong_answer3: \"wrong_answer3\",\r\n  },\r\n  {\r\n    word: \"word3\",\r\n    word_mean: \"word_mean3\",\r\n    wrong_answer1: \"wrong_answer1\",\r\n    wrong_answer2: \"wrong_answer2\",\r\n    wrong_answer3: \"wrong_answer3\",\r\n  },]\r\n\r\n  // word,\r\n  // word_mean,\r\n  // wrong_answer1,\r\n  // wrong_answer2,\r\n  // wrong_answer3\r\n\r\n  // init quiz content\r\n  console.log(quizValid)\r\n  if (quizValid === true){\r\n    quizList = quizStatus;\r\n    console.log(quizList)\r\n\r\n    maxNumQuiz = quizList.length\r\n\r\n    function shuffle(array) {\r\n      array.sort(() => Math.random() - 0.5);\r\n    }\r\n\r\n    // Quiz select shuffle\r\n    quizList.map((item, index) => (\r\n      quizTemp.push([item.word_mean, item.wrong_answer1,\r\n        item.wrong_answer2, item.wrong_answer3])\r\n    ))\r\n    console.log(quizTemp)\r\n    quizTemp.map((i, index) => (\r\n      shuffle(i)\r\n    ))\r\n  }\r\n\r\n\r\n  const requestLogin = (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Button color=\"primary\" onClick={() => {window.location.replace(\"/Login\");}} variant=\"contained\">\r\n        로그인 후 이용해 주세요.\r\n      </Button>\r\n    </Grid>\r\n  );\r\n\r\n\r\n  const showQuiz = (\r\n    <div>\r\n      <QuizItem \r\n      quizList={quizList}\r\n      quizTemp={quizTemp}\r\n      maxNumQuiz={maxNumQuiz} \r\n      postQuizResult={postQuizResult} \r\n      quizSummaryUpdate={quizSummaryUpdate}></QuizItem>\r\n    </div>\r\n  )\r\n\r\n\r\n  const getQuizError = (\r\n    <div>\r\n      <h2>Quiz Request Error</h2>\r\n    </div>\r\n  )\r\n\r\n  const checkQuizValid = (\r\n    <>\r\n      {quizValid ? showQuiz : getQuizError}\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"quiz-title\">Quiz Page</h2>\r\n      <div id=\"flicker-container\">\r\n        <div className=\"eg-flick-container\">\r\n          {isLoggedIn ? checkQuizValid : requestLogin}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.kakaoAuth.status.isLoggedIn,\r\n    quizStatus: state.quiz.status.quizStatus,\r\n    quizValid: state.quiz.status.valid,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    postQuizResult: (score) => {\r\n      return dispatch(postQuizResult(score));\r\n    },\r\n    quizRequest: () => {\r\n      return dispatch(quizRequest());\r\n    },\r\n    quizSummaryUpdate: (summary) => {\r\n      return dispatch(quizSummaryUpdate(summary))\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Word.js",["266","267","268"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { oneWordRequest, dictionaryWordsRequest } from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  padding: {\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  paper: {\r\n    borderBottom: \"1px solid black\",\r\n  },\r\n}));\r\nfunction Word({ wordStatus, oneWordRequest, dictionaryWordsRequest }) {\r\n  useEffect(() => {\r\n    oneWordRequest(keyword);\r\n  }, []);\r\n  const { keyword } = useParams();\r\n  console.log(keyword);\r\n  let wordName = [];\r\n  let pronunciation = [];\r\n  let pos = [];\r\n  let sense = [];\r\n  let definition = [];\r\n  const itemLoad = wordStatus.map((item, index) => (\r\n    <div key={index}>\r\n      {\r\n        (wordName.push(item.word),\r\n        pronunciation.push(item.pronunciation),\r\n        pos.push(item.pos),\r\n        sense.push(item.sense),\r\n        definition.push(item.sense[0].definition))\r\n      }\r\n    </div>\r\n  ));\r\n  const classes = useStyles();\r\n  const handleClickDictionary = () => {\r\n    dictionaryWordsRequest(wordName[0], definition[0]).then(() => {\r\n      toastAddToNoteSuccess();\r\n    });\r\n  };\r\n\r\n  const toastAddToNoteSuccess = () => toast(\"단어장에 추가되었습니다!\");\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={3}>\r\n            <h3>\r\n              {wordName[0]} [{pronunciation[0]}]\r\n            </h3>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n          <Grid item xs={7}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={handleClickDictionary}\r\n            >\r\n              나만의 단어장에 추가\r\n            </Button>\r\n          </Grid>\r\n          {wordName.map((word, index) => (\r\n            <Grid item key={index} xs={12} className={classes.paper}>\r\n              <h4>\r\n                {wordName[index]}[{pronunciation[index]}]\r\n              </h4>\r\n              <h4>{pos[index]}</h4>\r\n              {sense[index].map((item, i) => (\r\n                <h5>\r\n                  {i + 1}.{item.definition}\r\n                  {console.log(definition[i])}\r\n                </h5>\r\n              ))}\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    wordStatus: state.oneWord.status.wordStatus,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    oneWordRequest: (word) => {\r\n      return dispatch(oneWordRequest(word));\r\n    },\r\n    dictionaryWordsRequest: (word, definition) => {\r\n      return dispatch(dictionaryWordsRequest(word, definition));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Word);\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\Summary.js",["269","270","271","272"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./quiz.css\";\r\n\r\n\r\nfunction Summary({quizSummary, quizValid}) {\r\n\r\n  const [isOpenAnswer, setIsOpenAnswer] = useState(false)\r\n\r\n  let quizAnswerList;\r\n\r\n  if (quizValid) {\r\n    quizAnswerList = quizSummary.quizList.map((quiz, index) => (\r\n      <li>\r\n        <Button fullWidth>\r\n        <Link to={`/Word/${quiz.word}`}>{quiz.word} - {quiz.word_mean}</Link>\r\n        </Button>\r\n      </li>\r\n    ));\r\n  }\r\n  else {\r\n  }\r\n\r\n\r\n  const closeAnswer = (\r\n    <Button onClick={() => {setIsOpenAnswer(true)}}>정답보기▼</Button>\r\n  )\r\n\r\n  const openAnswer = (\r\n    <>\r\n      <ol>\r\n        {quizAnswerList}\r\n      </ol>\r\n      <Button onClick={() => {setIsOpenAnswer(false)}}>접기▲</Button>\r\n    </>\r\n  )\r\n\r\n  const gotoQuiz = (\r\n    <Button color=\"primary\" onClick={() => {window.location.replace(\"/Quiz\");}} variant=\"contained\">\r\n      퀴즈 풀러 가기\r\n    </Button>\r\n  );\r\n\r\n  const showSummary = (\r\n    <div>\r\n        <h2 className=\"quiz-summary-title\">\r\n          퀴즈 결과\r\n        </h2>\r\n        <div>\r\n          <h2 className=\"quiz-summary-score\"><b>{quizSummary.numberOfCorrect}</b>점</h2>\r\n          <h2 className=\"quiz-summary-count\">총 <b>{quizSummary.numberOfQuestions}</b> 문제 중 <b>{quizSummary.numberOfCorrect}</b>\r\n          </h2>\r\n          <div>\r\n            {isOpenAnswer ? openAnswer : closeAnswer}\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n\r\n\r\n  return (\r\n    <div className=\"quiz-summary-box\">\r\n      {quizValid ? showSummary : gotoQuiz}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.kakaoAuth.status.isLoggedIn,\r\n    quizSummary: state.quiz.status.quizSummary,\r\n    quizValid: state.quiz.status.valid,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Summary);","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\SignUp.js",["273"],"/* 회원가입 */\r\nimport React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AuthSignUp from \"./AuthSignUp\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerRequest } from \"../../redux/signup/actions\";\r\n\r\nclass SignUp extends Component {\r\n  handleRegister = (body) => {\r\n    return this.props.registerRequest(body).then(() => {\r\n      console.log(this.props.history);\r\n      if (this.props.statusReg === \"SUCCESS\") {\r\n        // 회원가입 성공시 로그인 화면으로 돌아감.\r\n        this.props.history.push(\"/Login\");\r\n        return true;\r\n      } else {\r\n        console.log(\"회원가입 실패\");\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AuthSignUp onRegister={this.handleRegister} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    statusReg: state.register.register.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    registerRequest: (body) => {\r\n      return dispatch(registerRequest(body));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuthRedirectHandler.js",["274","275","276","277"],"// 리다이렉트될 화면\r\n// OAuthRedirectHandeler.js\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { kakaoAuthRequest } from \"../../redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n//import Spinner from \"./Spinner\";\r\n\r\nfunction OAuthRedirectHandler({ kakaoAuthRequest, isLoggedIn }) {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    kakaoAuthRequest(code);\r\n  }, []);\r\n\r\n  // 인가코드\r\n  let code = new URL(window.location.href).searchParams.get(\"code\");\r\n  console.log(code);\r\n\r\n  if (isLoggedIn === true) {\r\n    // 카카오 로그인 되면\r\n    history.push(\"/Home\");\r\n  }\r\n\r\n  return <div>hello kakao</div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.kakaoAuth.status.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    kakaoAuthRequest: (code) => {\r\n      return dispatch(kakaoAuthRequest(code));\r\n    },\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(OAuthRedirectHandler);\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\rootReducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainWordOfTheDay.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuth.js",["278","279","280","281"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./OAuth.css\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n  },\r\n}));\r\n\r\nexport default function OAuth({}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  const CLIENT_ID = \"ade593cab628c91e766dd3f9497bbc92\";\r\n  const REDIRECT_URI = \"http://localhost:3000/kakaoAuth\";\r\n\r\n  const KAKAO_AUTH_URL = `https://kauth.kakao.com/oauth/authorize?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=code`;\r\n\r\n  return (\r\n    <div>\r\n      <Button id=\"kakaoLoginButton\" href={KAKAO_AUTH_URL}></Button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\QuizItem.js",["282"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Button, Grid, Typography  } from '@mui/material';\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./quiz.css\";\r\n\r\n\r\nfunction QuizItem({quizList, quizTemp, maxNumQuiz, postQuizResult, quizSummaryUpdate}) {\r\n\r\n  let history = useHistory()\r\n  const [quizCorrectCount, setQuizCorrectCount] = useState(0)\r\n  const [quizWrongCount, setQuizWrongCount] = useState(0)\r\n  //let quizCorrectCount = 0;\r\n  //let quizWrongCount = 0;\r\n\r\n  const [currentQuiz, setCurrentQuiz] = useState(0);\r\n\r\n  const gotoSummary = () => {\r\n    const summary = {\r\n      numberOfQuestions: maxNumQuiz,\r\n      numberOfCorrect: quizCorrectCount,\r\n      numberOfWrong: quizWrongCount,\r\n      quizList: quizList,\r\n    };\r\n    console.log(summary)\r\n    postQuizResult(quizCorrectCount);\r\n    quizSummaryUpdate(summary);\r\n    history.push('/Summary')\r\n  }\r\n\r\n  // toast Alert (answer/wrong)\r\n  const toastAnswer = () => toast(\"정답입니다!\");\r\n  const toastWrong = () => toast.error(\"틀렸습니다!\");\r\n\r\n\r\n  const handleClickSelect = (select, index) => {\r\n    // Check Answer & get score\r\n    if (select === quizList[index].word_mean) {\r\n      setQuizCorrectCount(quizCorrectCount+1)\r\n      toastAnswer()\r\n    }\r\n    else {\r\n      setQuizWrongCount(quizWrongCount+1)\r\n      toastWrong()\r\n    }\r\n    setCurrentQuiz(currentQuiz+1);\r\n  }\r\n\r\n  // Check LastQuiz\r\n  if (quizCorrectCount+quizWrongCount === maxNumQuiz){\r\n    gotoSummary()\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      {quizList.map((quiz, index) => {\r\n          return (\r\n            <div className={index === currentQuiz ? 'quiz-slide active' : 'quiz-slide'}>\r\n              <Grid\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Typography>{index+1} of {maxNumQuiz}</Typography>\r\n                <h2 className=\"quiz-question-sub\">알맞은 뜻을 고르세요</h2>\r\n                <strong className=\"quiz-question\">{quiz.word}</strong>\r\n                <div className=\"multiple-answer-list\">\r\n                  <Button \r\n                    className=\"multiple-answer-item\" \r\n                    onClick={() => {handleClickSelect(quizTemp[index][0], index);}} \r\n                    variant=\"outlined\">{quizTemp[index][0]}\r\n                  </Button>\r\n                  <Button \r\n                    className=\"multiple-answer-item\" \r\n                    onClick={() => {handleClickSelect(quizTemp[index][1], index);}} \r\n                    variant=\"outlined\">{quizTemp[index][1]}\r\n                  </Button>\r\n                  <Button \r\n                    className=\"multiple-answer-item\" \r\n                    onClick={() => {handleClickSelect(quizTemp[index][2], index);}} \r\n                    variant=\"outlined\">{quizTemp[index][2]}\r\n                  </Button>\r\n                  <Button \r\n                    className=\"multiple-answer-item\" \r\n                    onClick={() => {handleClickSelect(quizTemp[index][3], index);}} \r\n                    variant=\"outlined\">{quizTemp[index][3]}\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            </div>\r\n          )\r\n        })}\r\n\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nQuizItem.defaultProps = {\r\n  quizList: [],\r\n  quizTemp: [],\r\n  maxNumQuiz: 0,\r\n}\r\n\r\nexport default QuizItem;","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\AuthSignUp.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MyDictionary.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MySearch.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordMeaning\\MainWordMeaning.js",["283"],"import React, { useState } from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport \"./MainWordMeaning.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSpeechRecognition } from \"react-speech-kit\";\r\n\r\nexport default function MainWordMeaning({ handleMorpheme, item }) {\r\n  const [checked, setChecked] = useState(false);\r\n  const [searchBox, setSearchBox] = useState(\"\");\r\n\r\n  // 음성인식\r\n  const { listen, listening, stop } = useSpeechRecognition({\r\n    onResult: (result) => {\r\n      // 음성인식 결과가 value 상태값으로 할당됩니다.\r\n      setSearchBox(result);\r\n    },\r\n  });\r\n\r\n  const handleChange = ({ target }) => {\r\n    setSearchBox(target.value);\r\n  };\r\n\r\n  const checkMorpheme = (e) => {\r\n    handleMorpheme(searchBox);\r\n    setChecked(true);\r\n  };\r\n\r\n  const morpheme = {\r\n    pos: [],\r\n    name: [],\r\n  };\r\n\r\n  const morphemeLoad = () => {\r\n    for (let i = 0; i < item.length; i++) {\r\n      if (i % 2 == 0) {\r\n        morpheme.pos.push(item[i]);\r\n      } else {\r\n        morpheme.name.push(item[i]);\r\n      }\r\n    }\r\n  };\r\n  morphemeLoad();\r\n  const searchPage = (\r\n    <div className=\"inputs\">\r\n      <div> 문장 / 단어</div>\r\n      <TextField\r\n        className=\"search\"\r\n        id=\"filled-basic\"\r\n        label=\"원하는 단어나 문장을 입력해 주세요.\"\r\n        value={searchBox}\r\n        autoFocus\r\n        onChange={(e) => handleChange(e)}\r\n      />\r\n      <Button color=\"primary\" onClick={checkMorpheme} variant=\"contained\">\r\n        검색\r\n      </Button>\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        onMouseDown={(e) => listen()}\r\n        onMouseUp={stop}\r\n      >\r\n        🎤\r\n      </Button>\r\n      {listening && <div>음성인식 활성화 중</div>}\r\n    </div>\r\n  );\r\n  const searchSuccess = morpheme.pos.map((item, index) => (\r\n    <div key={index}>\r\n      <h2 style={{ margineft: 10 }}>\r\n        [{morpheme.pos[index]}] {morpheme.name[index]}\r\n      </h2>\r\n      <Link to={`/Word/${morpheme.name[index]}`}>\r\n        <Button color=\"primary\" variant=\"contained\">\r\n          더 알아보기\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h3 className=\"title\"> 이건 무슨 뜻이지? </h3>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          {searchPage}\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          {!checked ? null : searchSuccess}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\index.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\Mainquiz.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainQuiz.js",[],{"ruleId":"284","severity":1,"message":"285","line":47,"column":6,"nodeType":"286","endLine":47,"endColumn":8,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"292","line":2,"column":19,"nodeType":"290","messageId":"291","endLine":2,"endColumn":30},{"ruleId":"288","severity":1,"message":"293","line":12,"column":3,"nodeType":"290","messageId":"291","endLine":12,"endColumn":14},{"ruleId":"284","severity":1,"message":"294","line":124,"column":6,"nodeType":"286","endLine":124,"endColumn":8,"suggestions":"295"},{"ruleId":"296","severity":1,"message":"297","line":164,"column":22,"nodeType":"298","messageId":"299","endLine":164,"endColumn":24},{"ruleId":"296","severity":1,"message":"297","line":169,"column":22,"nodeType":"298","messageId":"299","endLine":169,"endColumn":24},{"ruleId":"296","severity":1,"message":"297","line":184,"column":23,"nodeType":"298","messageId":"299","endLine":184,"endColumn":25},{"ruleId":"296","severity":1,"message":"297","line":191,"column":23,"nodeType":"298","messageId":"299","endLine":191,"endColumn":25},{"ruleId":"300","severity":1,"message":"301","line":216,"column":11,"nodeType":"302","endLine":221,"endColumn":13},{"ruleId":"300","severity":1,"message":"301","line":246,"column":11,"nodeType":"302","endLine":251,"endColumn":13},{"ruleId":"300","severity":1,"message":"301","line":338,"column":15,"nodeType":"302","endLine":343,"endColumn":17},{"ruleId":"288","severity":1,"message":"303","line":4,"column":8,"nodeType":"290","messageId":"291","endLine":4,"endColumn":16},{"ruleId":"284","severity":1,"message":"304","line":32,"column":6,"nodeType":"286","endLine":32,"endColumn":8,"suggestions":"305"},{"ruleId":"288","severity":1,"message":"289","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"306","line":18,"column":26,"nodeType":"290","messageId":"291","endLine":18,"endColumn":31},{"ruleId":"284","severity":1,"message":"307","line":47,"column":6,"nodeType":"286","endLine":47,"endColumn":8,"suggestions":"308"},{"ruleId":"288","severity":1,"message":"309","line":49,"column":9,"nodeType":"290","messageId":"291","endLine":49,"endColumn":16},{"ruleId":"288","severity":1,"message":"310","line":50,"column":9,"nodeType":"290","messageId":"291","endLine":50,"endColumn":30},{"ruleId":"288","severity":1,"message":"289","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"292","line":2,"column":19,"nodeType":"290","messageId":"291","endLine":2,"endColumn":30},{"ruleId":"288","severity":1,"message":"306","line":8,"column":26,"nodeType":"290","messageId":"291","endLine":8,"endColumn":31},{"ruleId":"311","severity":1,"message":"312","line":17,"column":16,"nodeType":"313","messageId":"299","endLine":17,"endColumn":18},{"ruleId":"288","severity":1,"message":"289","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"292","line":2,"column":19,"nodeType":"290","messageId":"291","endLine":2,"endColumn":30},{"ruleId":"288","severity":1,"message":"314","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":14},{"ruleId":"288","severity":1,"message":"315","line":5,"column":10,"nodeType":"290","messageId":"291","endLine":5,"endColumn":20},{"ruleId":"288","severity":1,"message":"316","line":7,"column":18,"nodeType":"290","messageId":"291","endLine":7,"endColumn":28},{"ruleId":"288","severity":1,"message":"317","line":8,"column":10,"nodeType":"290","messageId":"291","endLine":8,"endColumn":24},{"ruleId":"288","severity":1,"message":"306","line":8,"column":26,"nodeType":"290","messageId":"291","endLine":8,"endColumn":31},{"ruleId":"288","severity":1,"message":"318","line":8,"column":33,"nodeType":"290","messageId":"291","endLine":8,"endColumn":37},{"ruleId":"288","severity":1,"message":"319","line":25,"column":7,"nodeType":"290","messageId":"291","endLine":25,"endColumn":18},{"ruleId":"284","severity":1,"message":"320","line":27,"column":6,"nodeType":"286","endLine":27,"endColumn":8,"suggestions":"321"},{"ruleId":"288","severity":1,"message":"322","line":35,"column":9,"nodeType":"290","messageId":"291","endLine":35,"endColumn":17},{"ruleId":"323","severity":1,"message":"324","line":38,"column":34,"nodeType":"325","messageId":"326","endLine":38,"endColumn":35},{"ruleId":"288","severity":1,"message":"327","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"328","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"292","line":2,"column":19,"nodeType":"290","messageId":"291","endLine":2,"endColumn":30},{"ruleId":"288","severity":1,"message":"329","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":21},{"ruleId":"288","severity":1,"message":"292","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":4,"column":28,"nodeType":"290","messageId":"291","endLine":4,"endColumn":36},{"ruleId":"288","severity":1,"message":"292","line":5,"column":19,"nodeType":"290","messageId":"291","endLine":5,"endColumn":30},{"ruleId":"288","severity":1,"message":"330","line":5,"column":32,"nodeType":"290","messageId":"291","endLine":5,"endColumn":43},{"ruleId":"284","severity":1,"message":"331","line":16,"column":6,"nodeType":"286","endLine":16,"endColumn":8,"suggestions":"332"},{"ruleId":"288","severity":1,"message":"289","line":1,"column":28,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"292","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":21},{"ruleId":"311","severity":1,"message":"312","line":12,"column":31,"nodeType":"313","messageId":"299","endLine":12,"endColumn":33},{"ruleId":"288","severity":1,"message":"309","line":17,"column":9,"nodeType":"290","messageId":"291","endLine":17,"endColumn":16},{"ruleId":"288","severity":1,"message":"328","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"296","severity":1,"message":"297","line":36,"column":17,"nodeType":"298","messageId":"299","endLine":36,"endColumn":19},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkSessionRequest', 'history', and 'thisPath'. Either include them or remove the dependency array. If 'checkSessionRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["333"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'ButtonGroup' is defined but never used.","React Hook useEffect has missing dependencies: 'userRankingRequest' and 'wordRankingRequest'. Either include them or remove the dependency array. If 'wordRankingRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["334"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MySearch' is defined but never used.","React Hook useEffect has missing dependencies: 'dictionaryWordsRequest' and 'searchWordsRequest'. Either include them or remove the dependency array. If 'dictionaryWordsRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["335"],"'toast' is defined but never used.","React Hook useEffect has missing dependencies: 'dailyWordsRequest' and 'wordRankingRequest'. Either include them or remove the dependency array. If 'dailyWordsRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["336"],"'classes' is assigned a value but never used.","'paraphraseCheckResult' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'Link' is defined but never used.","'makeStyles' is defined but never used.","'Typography' is defined but never used.","'ToastContainer' is defined but never used.","'Flip' is defined but never used.","'quizStatus2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'keyword' and 'oneWordRequest'. Either include them or remove the dependency array. If 'oneWordRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["337"],"'itemLoad' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Component' is defined but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'code' and 'kakaoAuthRequest'. Either include them or remove the dependency array. If 'kakaoAuthRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["338"],{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},"Update the dependencies array to be: [checkSessionRequest, history, thisPath]",{"range":"351","text":"352"},"Update the dependencies array to be: [userRankingRequest, wordRankingRequest]",{"range":"353","text":"354"},"Update the dependencies array to be: [dictionaryWordsRequest, searchWordsRequest]",{"range":"355","text":"356"},"Update the dependencies array to be: [dailyWordsRequest, wordRankingRequest]",{"range":"357","text":"358"},"Update the dependencies array to be: [keyword, oneWordRequest]",{"range":"359","text":"360"},"Update the dependencies array to be: [code, kakaoAuthRequest]",{"range":"361","text":"362"},[1167,1169],"[checkSessionRequest, history, thisPath]",[2874,2876],"[userRankingRequest, wordRankingRequest]",[752,754],"[dictionaryWordsRequest, searchWordsRequest]",[1157,1159],"[dailyWordsRequest, wordRankingRequest]",[803,805],"[keyword, oneWordRequest]",[454,456],"[code, kakaoAuthRequest]"]