[{"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\index.js":"1","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\App.js":"2","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\store.js":"3","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\reportWebVitals.js":"4","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\SignUp.js":"5","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\rootReducer.js":"6","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Word.js":"7","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Main.js":"8","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\MyPage.js":"9","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Login.js":"10","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordRanking.js":"11","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\TopBar.js":"12","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuthRedirectHandler.js":"13","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\Quiz.js":"14","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\AuthSignUp.js":"15","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainWordOfTheDay.js":"16","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\actions.js":"17","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\reducer.js":"18","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\reducer.js":"19","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\reducer.js":"20","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\reducer.js":"21","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\reducer.js":"22","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuth.js":"23","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\is-empty.js":"24","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\reducer.js":"25","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\reducer.js":"26","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\reducer.js":"27","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\reducer.js":"28","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\reducer.js":"29","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MyDictionary.js":"30","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordMeaning\\MainWordMeaning.js":"31","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MySearch.js":"32","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\index.js":"33","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\types.js":"34","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\types.js":"35","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\types.js":"36","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\types.js":"37","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\types.js":"38","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\types.js":"39","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\types.js":"40","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\types.js":"41","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\types.js":"42","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\types.js":"43","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\actions.js":"44","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\actions.js":"45","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\actions.js":"46","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\actions.js":"47","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\actions.js":"48","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\actions.js":"49","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\actions.js":"50","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\actions.js":"51","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\actions.js":"52","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\voiceRecognition\\VoiceRecognition.js":"53","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\voiceRecognition\\actions.js":"54","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\voiceRecognition\\types.js":"55","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\voiceRecognition\\reducer.js":"56","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\sentenceParaphrase\\SentenceParaphrase.js":"57","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\voiceRecognition\\VoiceRecognition2.js":"58","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\Summary.js":"59","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\Mainquiz.js":"60"},{"size":643,"mtime":1631274722000,"results":"61","hashOfConfig":"62"},{"size":1292,"mtime":1639834096000,"results":"63","hashOfConfig":"62"},{"size":667,"mtime":1631274722000,"results":"64","hashOfConfig":"62"},{"size":375,"mtime":1631274722000,"results":"65","hashOfConfig":"62"},{"size":1200,"mtime":1631274722000,"results":"66","hashOfConfig":"62"},{"size":873,"mtime":1639938293513,"results":"67","hashOfConfig":"62"},{"size":3438,"mtime":1639938183345,"results":"68","hashOfConfig":"62"},{"size":4178,"mtime":1639929567165,"results":"69","hashOfConfig":"62"},{"size":2023,"mtime":1639938138025,"results":"70","hashOfConfig":"62"},{"size":1652,"mtime":1636463504000,"results":"71","hashOfConfig":"62"},{"size":10307,"mtime":1639938002510,"results":"72","hashOfConfig":"62"},{"size":4210,"mtime":1639929504240,"results":"73","hashOfConfig":"62"},{"size":1094,"mtime":1636463504000,"results":"74","hashOfConfig":"62"},{"size":8929,"mtime":1639937932768,"results":"75","hashOfConfig":"62"},{"size":8829,"mtime":1639937939221,"results":"76","hashOfConfig":"62"},{"size":4450,"mtime":1635862228000,"results":"77","hashOfConfig":"62"},{"size":760,"mtime":1631274722000,"results":"78","hashOfConfig":"62"},{"size":730,"mtime":1631274722000,"results":"79","hashOfConfig":"62"},{"size":902,"mtime":1631274722000,"results":"80","hashOfConfig":"62"},{"size":1117,"mtime":1631274722000,"results":"81","hashOfConfig":"62"},{"size":1880,"mtime":1634049116000,"results":"82","hashOfConfig":"62"},{"size":877,"mtime":1634111616000,"results":"83","hashOfConfig":"62"},{"size":1572,"mtime":1636463504000,"results":"84","hashOfConfig":"62"},{"size":235,"mtime":1637074594042,"results":"85","hashOfConfig":"62"},{"size":2199,"mtime":1631274722000,"results":"86","hashOfConfig":"62"},{"size":1099,"mtime":1631274722000,"results":"87","hashOfConfig":"62"},{"size":2659,"mtime":1639926601000,"results":"88","hashOfConfig":"62"},{"size":1525,"mtime":1639938247861,"results":"89","hashOfConfig":"62"},{"size":1986,"mtime":1639921218000,"results":"90","hashOfConfig":"62"},{"size":2718,"mtime":1639977431291,"results":"91","hashOfConfig":"62"},{"size":2553,"mtime":1639937946816,"results":"92","hashOfConfig":"62"},{"size":1730,"mtime":1631274722000,"results":"93","hashOfConfig":"62"},{"size":747,"mtime":1639938271392,"results":"94","hashOfConfig":"62"},{"size":156,"mtime":1631274722000,"results":"95","hashOfConfig":"62"},{"size":223,"mtime":1631274722000,"results":"96","hashOfConfig":"62"},{"size":395,"mtime":1634049112000,"results":"97","hashOfConfig":"62"},{"size":189,"mtime":1631274722000,"results":"98","hashOfConfig":"62"},{"size":206,"mtime":1631274722000,"results":"99","hashOfConfig":"62"},{"size":684,"mtime":1631274722000,"results":"100","hashOfConfig":"62"},{"size":190,"mtime":1631274722000,"results":"101","hashOfConfig":"62"},{"size":334,"mtime":1639938255269,"results":"102","hashOfConfig":"62"},{"size":496,"mtime":1639926608000,"results":"103","hashOfConfig":"62"},{"size":380,"mtime":1639841805000,"results":"104","hashOfConfig":"62"},{"size":894,"mtime":1631274722000,"results":"105","hashOfConfig":"62"},{"size":1609,"mtime":1639921226000,"results":"106","hashOfConfig":"62"},{"size":2260,"mtime":1639926594000,"results":"107","hashOfConfig":"62"},{"size":1993,"mtime":1634222802000,"results":"108","hashOfConfig":"62"},{"size":902,"mtime":1631274722000,"results":"109","hashOfConfig":"62"},{"size":1506,"mtime":1639938234816,"results":"110","hashOfConfig":"62"},{"size":932,"mtime":1631274722000,"results":"111","hashOfConfig":"62"},{"size":878,"mtime":1637247828000,"results":"112","hashOfConfig":"62"},{"size":3326,"mtime":1637248150000,"results":"113","hashOfConfig":"62"},{"size":6575,"mtime":1639842834762,"results":"114","hashOfConfig":"62"},{"size":1201,"mtime":1638249069706,"results":"115","hashOfConfig":"62"},{"size":219,"mtime":1637246094188,"results":"116","hashOfConfig":"62"},{"size":886,"mtime":1637246336709,"results":"117","hashOfConfig":"62"},{"size":4311,"mtime":1637674581145,"results":"118","hashOfConfig":"62"},{"size":671,"mtime":1639843125236,"results":"119","hashOfConfig":"62"},{"size":2603,"mtime":1639937935767,"results":"120","hashOfConfig":"62"},{"size":2148,"mtime":1639838670000,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"bynrpb",{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"124"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"124"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"181"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"181"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"124"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"124"},"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\index.js",[],["259","260"],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\App.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\store.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\reportWebVitals.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\SignUp.js",["261"],"/* 회원가입 */\r\nimport React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AuthSignUp from \"./AuthSignUp\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerRequest } from \"../../redux/signup/actions\";\r\n\r\nclass SignUp extends Component {\r\n  handleRegister = (body) => {\r\n    return this.props.registerRequest(body).then(() => {\r\n      console.log(this.props.history);\r\n      if (this.props.statusReg === \"SUCCESS\") {\r\n        // 회원가입 성공시 로그인 화면으로 돌아감.\r\n        this.props.history.push(\"/Login\");\r\n        return true;\r\n      } else {\r\n        console.log(\"회원가입 실패\");\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AuthSignUp onRegister={this.handleRegister} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    statusReg: state.register.register.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    registerRequest: (body) => {\r\n      return dispatch(registerRequest(body));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\rootReducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Word.js",["262","263","264"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { oneWordRequest, dictionaryWordsRequest } from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  padding: {\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  paper: {\r\n    borderBottom: \"1px solid black\",\r\n  },\r\n}));\r\nfunction Word({ wordStatus, oneWordRequest, dictionaryWordsRequest }) {\r\n  useEffect(() => {\r\n    oneWordRequest(keyword);\r\n  }, []);\r\n  const { keyword } = useParams();\r\n  console.log(keyword);\r\n  let wordName = [];\r\n  let pronunciation = [];\r\n  let pos = [];\r\n  let sense = [];\r\n  let definition = [];\r\n  const itemLoad = wordStatus.map((item, index) => (\r\n    <div key={index}>\r\n      {\r\n        (wordName.push(item.word),\r\n        pronunciation.push(item.pronunciation),\r\n        pos.push(item.pos),\r\n        sense.push(item.sense),\r\n        definition.push(item.sense[0].definition))\r\n      }\r\n    </div>\r\n  ));\r\n  const classes = useStyles();\r\n  const handleClickDictionary = () => {\r\n    dictionaryWordsRequest(wordName[0], definition[0]).then(() => {\r\n      toastAddToNoteSuccess();\r\n    });\r\n  };\r\n\r\n  const toastAddToNoteSuccess = () => toast(\"단어장에 추가되었습니다!\");\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={3}>\r\n            <h3>\r\n              {wordName[0]} [{pronunciation[0]}]\r\n            </h3>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n          <Grid item xs={7}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={handleClickDictionary}\r\n            >\r\n              나만의 단어장에 추가\r\n            </Button>\r\n          </Grid>\r\n          {wordName.map((word, index) => (\r\n            <Grid item key={index} xs={12} className={classes.paper}>\r\n              <h4>\r\n                {wordName[index]}[{pronunciation[index]}]\r\n              </h4>\r\n              <h4>{pos[index]}</h4>\r\n              {sense[index].map((item, i) => (\r\n                <h5>\r\n                  {i + 1}.{item.definition}\r\n                  {console.log(definition[i])}\r\n                </h5>\r\n              ))}\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    wordStatus: state.oneWord.status.wordStatus,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    oneWordRequest: (word) => {\r\n      return dispatch(oneWordRequest(word));\r\n    },\r\n    dictionaryWordsRequest: (word, definition) => {\r\n      return dispatch(dictionaryWordsRequest(word, definition));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Word);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Main.js",["265","266","267","268"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\n\r\nimport MainWordOfTheDay from \"../components/MainWordOfTheDay\";\r\nimport MainWordMeaning from \"../components/WordMeaning/MainWordMeaning\";\r\nimport {\r\n  dailyWordsRequest,\r\n  oneWordRequest,\r\n  paraphraseCheckRequest,\r\n  morphemeCheckRequest,\r\n  wordRankingRequest,\r\n  quizRequest,\r\n} from \"../redux\";\r\nimport Mainquiz from \"../components/Mainquiz\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Main({\r\n  dailyWordsList,\r\n  quizStatus,\r\n  dailyWordsRequest,\r\n  oneWordRequest,\r\n  isLoggedIn,\r\n  paraphraseCheckRequest,\r\n  paraphraseResult,\r\n  paraphraseCheckValid,\r\n  morphemeCheckRequest,\r\n  wordRankingRequest,\r\n  quizRequest,\r\n  item,\r\n}) {\r\n  useEffect(() => {\r\n    quizRequest();\r\n    dailyWordsRequest();\r\n    wordRankingRequest();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const paraphraseCheckResult = useSelector(\r\n    (state) => state.paraphrase.status.result\r\n  );\r\n\r\n  // const handleOneWord = (word) => {\r\n  //   oneWordRequest(word);\r\n  //   console.log(word);\r\n  // };\r\n\r\n  const handleMorpheme = (search) => {\r\n    let body = {\r\n      analysisCode: \"ner\",\r\n      text: search,\r\n    };\r\n    console.log(search);\r\n    morphemeCheckRequest(body);\r\n  };\r\n\r\n  const toastCheckParaphrase = () => toast(\"같은 의미입니다!\");\r\n  const toastCheckNonParaphrase = () =>\r\n    toast.error(\"다른 의미입니다. 다시 입력해 주세요.\");\r\n  const toastCheckParaphraseFailure = () => toast.error(\"확인 실패했습니다.\");\r\n\r\n  const onClickCheckParaphrase = (body) => {\r\n    paraphraseCheckRequest(body).then(() => {});\r\n  };\r\n\r\n  if (paraphraseCheckResult === \"paraphrase\") {\r\n    toastCheckParaphrase();\r\n  } else if (paraphraseCheckResult === \"not paraphrase\") {\r\n    toastCheckNonParaphrase();\r\n  }\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={8}>\r\n            <MainWordOfTheDay\r\n              isLoggedIn={isLoggedIn}\r\n              dailyWordsList={dailyWordsList}\r\n            ></MainWordOfTheDay>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Mainquiz quizStatus={quizStatus}></Mainquiz>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MainWordMeaning\r\n              handleMorpheme={handleMorpheme}\r\n              item={item}\r\n            ></MainWordMeaning>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    quizStatus: state.quiz.status.quizStatus,\r\n    dailyWordsList: state.dailyWords.status.dailyWordsList,\r\n    isLoggedIn: state.kakaoAuth.status.isLoggedIn,\r\n    paraphraseResult: state.paraphrase.status.result,\r\n    wordStatus: state.oneWord.status.wordStatus,\r\n    paraphraseCheckValid: state.paraphrase.status.valid,\r\n    item: state.morpheme.status.item,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dailyWordsRequest: () => {\r\n      return dispatch(dailyWordsRequest());\r\n    },\r\n    oneWordRequest: (word) => {\r\n      return dispatch(oneWordRequest(word));\r\n    },\r\n    paraphraseCheckRequest: (body) => {\r\n      return dispatch(paraphraseCheckRequest(body));\r\n    },\r\n    morphemeCheckRequest: (body) => {\r\n      return dispatch(morphemeCheckRequest(body));\r\n    },\r\n    wordRankingRequest: () => {\r\n      return dispatch(wordRankingRequest());\r\n    },\r\n    quizRequest: () => {\r\n      return dispatch(quizRequest());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\MyPage.js",["269","270"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MySearch from \"../components/MyPage/MySearch\";\r\nimport MyDictionary from \"../components/MyPage/MyDictionary\";\r\nimport {\r\n  dictionaryWordsRequest,\r\n  searchWordsRequest,\r\n  wordDeleteRequest,\r\n} from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction MyPage({\r\n  dictionaryWordsList,\r\n  searchWordsList,\r\n  dictionaryWordsRequest,\r\n  searchWordsRequest,\r\n  wordDeleteRequest,\r\n}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    dictionaryWordsRequest(false);\r\n    searchWordsRequest();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const handleDelete = (word) => {\r\n    wordDeleteRequest(word);\r\n    console.log(word);\r\n    console.log(dictionaryWordsList);\r\n  };\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <MyDictionary\r\n              dictionaryWordsList={dictionaryWordsList}\r\n              handleDelete={handleDelete}\r\n            ></MyDictionary>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // userID: state.authentication.status.currentUser,\r\n    searchWordsList: state.myPage.status.searchWordsList,\r\n    dictionaryWordsList: state.myPage.status.dictionaryWordsList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    searchWordsRequest: () => {\r\n      return dispatch(searchWordsRequest());\r\n    },\r\n    dictionaryWordsRequest: (word, definition) => {\r\n      return dispatch(dictionaryWordsRequest(word, definition));\r\n    },\r\n    wordDeleteRequest: (word) => {\r\n      return dispatch(wordDeleteRequest(word));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPage);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Login.js",["271","272","273","274"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport OAuth from \"../components/login/OAuth\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Login({}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={12}></Grid>\r\n          <Grid item xs={12}>\r\n            <h2>LOGIN</h2>\r\n          </Grid>\r\n          <Grid item xs={12}></Grid>\r\n          <Grid item xs={12}>\r\n            <OAuth></OAuth>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return { isLoggedIn: state.kakaoAuth.status.isLoggedIn };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordRanking.js",["275","276","277","278","279","280","281","282","283","284","285"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { userRankingRequest, wordRankingRequest } from \"../redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Button,\r\n  formatMs,\r\n  Typography,\r\n  CardActions,\r\n  CardContent,\r\n  Card,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    // width: '100%',\r\n    // maxWidth: '100ch',\r\n    maxheight: \"100\",\r\n    // backgroundColor: \"#3d3d3d\",\r\n    borderRadius: \"20px\",\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  paper: {\r\n    // padding: theme.spacing(2),\r\n    textAlign: \"left\",\r\n    fontWeight: \"900\",\r\n    marginBottom: \"10px\",\r\n    // height: '7ch',\r\n    // display: \"flex\",\r\n    borderRadius: \"20px\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n    borderTop: \"1px solid #D9D9D9\",\r\n\r\n    // borderBottom: \"1px solid #D9D9D9\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#63ccff\",\r\n    },\r\n  },\r\n  number: {\r\n    textAlign: \"right\",\r\n    fontWeight: \"600\",\r\n    width: \"35px\",\r\n    marginRight: \"100px\",\r\n    display: \"inline-block\",\r\n    fontFamily: \"BMHANNApro\",\r\n    fontSize: \"12px\",\r\n  },\r\n  word: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"900\",\r\n    marginRight: \"50px\",\r\n    display: \"inline-block\",\r\n    fontFamily: \"BMHANNAp\",\r\n    fontSize: \"20px\",\r\n  },\r\n  word2: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"900\",\r\n    marginLeft: \"100px\",\r\n    color: \"#6666FF\",\r\n    display: \"inline-block\",\r\n    fontFamily: \"BMHANNAp\",\r\n    fontSize: \"15px\",\r\n  },\r\n  word3: {\r\n    textAlign: \"right\",\r\n    fontWeight: \"400\",\r\n    marginLeft: \"100px\",\r\n    display: \"inline-block\",\r\n    fontFamily: \"BMHANNApro\",\r\n    fontSize: \"15px\",\r\n  },\r\n  cover: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  img: {\r\n    maxWidth: \"50px\",\r\n    height: \"auto\",\r\n    display: \"block\",\r\n    borderRadius: \"70%\",\r\n  },\r\n  subimg: {\r\n    display: \"inline-block\",\r\n    marginBottom: \"-7px\",\r\n    marginTop: \"5px\",\r\n    marginLeft: \"10px\",\r\n    maxWidth: \"25px\",\r\n    height: \"auto\",\r\n    borderRadius: \"70%\",\r\n  },\r\n  card: {\r\n    width: \"30%\",\r\n    maxWidth: \"200px\",\r\n    // backgroundColor: \"#ffff6c\",\r\n    \"&:hover\": {\r\n      // width: \"11%\",\r\n      // display: \"block\",\r\n      backgroundColor: \"#63ccff\",\r\n      // border: \"1px solid #6ca8a8\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction WordRanking({\r\n  userRanking,\r\n  userRankingRequest,\r\n  wordRanking,\r\n  wordRankingRequest,\r\n}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    wordRankingRequest();\r\n    userRankingRequest();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  const onClickOneWord = (word) => {\r\n    window.location.replace(`/Word/${word}`);\r\n  };\r\n\r\n  function create2DArray(rows, columns) {\r\n    var arr = new Array(rows);\r\n    for (var i = 0; i < rows; i++) {\r\n      arr[i] = new Array(columns);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  //시우랑 연동하면 쓸거1\r\n  let wordlist = []; // wordranking데이터\r\n  let datalen = 0;\r\n  let userlist = create2DArray(3, 100); // userranking데이터\r\n  if (wordRanking && wordRanking.length > 0) {\r\n    wordlist.push(wordRanking[0][0]);\r\n    wordlist.push(wordRanking[1][0]);\r\n    datalen = wordlist[0].length;\r\n  }\r\n\r\n  //top3로 분류\r\n  let top3word = [[], []];\r\n  let top3user;\r\n  if (datalen > 2) {\r\n    top3word[0].push(wordlist[0][0]);\r\n    top3word[1].push(wordlist[1][0]);\r\n    top3word[0].push(wordlist[0][1]);\r\n    top3word[1].push(wordlist[1][1]);\r\n    top3word[0].push(wordlist[0][2]);\r\n    top3word[1].push(wordlist[1][2]);\r\n  } else if (datalen == 2) {\r\n    top3word[0].push(wordlist[0][0]);\r\n    top3word[1].push(wordlist[1][0]);\r\n    top3word[0].push(wordlist[0][1]);\r\n    top3word[1].push(wordlist[1][1]);\r\n  } else if (datalen == 1) {\r\n    top3word[0].push(wordlist[0][0]);\r\n    top3word[1].push(wordlist[1][0]);\r\n  }\r\n  console.log(top3word);\r\n  // if(userlist[0].length > 2)\r\n  // {\r\n  //     for(let i=0 ; i<4 ; i++){\r\n  //         top3user[i] = userlist[i].slice(0,3);\r\n  //     }\r\n  // }\r\n  // else if(userlist[0].length == 2){\r\n  //     top3user[0] = userlist[0].slice(0,2);\r\n  //     top3user[1] = userlist[1].slice(0,2);\r\n  // }\r\n  // else if(userlist[0].lenght == 1){\r\n  //     top3user[0] = userlist[0].slice(0,1);\r\n  // }\r\n  console.log(wordRanking);\r\n  console.log(userRanking);\r\n  console.log(wordlist);\r\n  // console.log(top3word);\r\n  console.log(userlist);\r\n  // console.log(top3user);\r\n\r\n  //top3표시하는 컴포넌트\r\n  function WordBasicCard(props) {\r\n    let image = \"rd-place.png\";\r\n    if (props.value2 === 1) image = \"st-place.png\";\r\n    else if (props.value2 === 2) image = \"nd-place.png\";\r\n    return (\r\n      <Card className={classes.card} sx={{ minWidth: 275 }}>\r\n        <CardContent>\r\n          <img\r\n            className={classes.img}\r\n            src={image}\r\n            // alt={'img'}\r\n            loading=\"lazy\"\r\n          />\r\n          <br></br>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {props.value1}\r\n          </Typography>\r\n          <br></br>\r\n          <Typography variant=\"body2\">\r\n            {props.value3} 명이 선택했어요!\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size=\"small\" onClick={() => onClickOneWord(props.value1)}>\r\n            단어 자세히 보기\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n  function UserBasicCard(props) {\r\n    return (\r\n      <Card className={classes.card} sx={{ minWidth: 275 }}>\r\n        <CardContent>\r\n          <img\r\n            className={classes.img}\r\n            src={props.value4}\r\n            // alt={'img'}\r\n            loading=\"lazy\"\r\n          />\r\n          <br></br>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {props.value1}\r\n          </Typography>\r\n          <br></br>\r\n          <Typography variant=\"body2\">{props.value3} 점</Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      {/* 시우랑 연동하면 쓸거2 */}\r\n      <div className={classes.root}>\r\n        <h3>단어랭킹</h3>\r\n        <div className={classes.cover}>\r\n          {top3word[0].map((item, index) => (\r\n            <WordBasicCard\r\n              value1={top3word[0][index]}\r\n              value2={index + 1}\r\n              value3={top3word[1][index]}\r\n            ></WordBasicCard>\r\n          ))}\r\n        </div>\r\n        <br></br>\r\n        {wordlist.length ? (\r\n          wordlist[0].map((item, index) => (\r\n            <div className={classes.cover}>\r\n              <Grid item xs={6} className={classes.paper}>\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  gutterBottom\r\n                  color=\"textPrimary\"\r\n                  className={classes.number}\r\n                >\r\n                  {index + 1}\r\n                </Typography>\r\n                <Typography\r\n                  gutterBottom\r\n                  color=\"textPrimary\"\r\n                  className={classes.word}\r\n                >\r\n                  {wordlist[0][index]}\r\n                </Typography>\r\n                <Typography\r\n                  gutterBottom\r\n                  color=\"textPrimary\"\r\n                  className={classes.word2}\r\n                >\r\n                  {wordlist[1][index]} 명이 선택했어요!\r\n                </Typography>\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={() => onClickOneWord(wordlist[0][index])}\r\n                  className={classes.word3}\r\n                >\r\n                  단어 자세히 보기\r\n                </Button>\r\n              </Grid>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n\r\n      {/* <div className={classes.root}>\r\n                <h3>유저랭킹</h3>\r\n                    <div className={classes.cover}>\r\n                        {top3user[0].map((item, index) => (\r\n                            <UserBasicCard value1={top3user[0][index]} value2={index+1} value3={top3user[1][index]} value4={top3user[2][index]}>\r\n                            </UserBasicCard>\r\n                        ))}\r\n                    </div>\r\n                    <br>\r\n                    </br>\r\n                    {userlist[0].map((item, index) => (\r\n                        <div className={classes.cover}>\r\n                            <Grid item xs={6} className={classes.paper}>\r\n                                <img\r\n                                className={classes.subimg}\r\n                                src={userlist[2][index]}\r\n                                // alt={'img'}\r\n                                loading=\"lazy\"\r\n                                />\r\n                                <Typography variant=\"h4\" gutterBottom color=\"textPrimary\" className={classes.number}>\r\n                                    {index+1}\r\n                                </Typography>\r\n                                <Typography gutterBottom color=\"textPrimary\" className={classes.word}>\r\n                                    {userlist[0][index]}\r\n                                </Typography>\r\n                                <Typography gutterBottom color=\"textPrimary\" className={classes.word2}>\r\n                                    {userlist[1][index]} 점\r\n                                </Typography>\r\n                            </Grid>\r\n                        </div>\r\n                    ))}\r\n            </div> */}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    wordRanking: state.ranking.status.wordRanking,\r\n    userRanking: state.ranking.status.userRanking,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    wordRankingRequest: () => {\r\n      return dispatch(wordRankingRequest());\r\n    },\r\n    userRankingRequest: () => {\r\n      return dispatch(userRankingRequest());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WordRanking);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\TopBar.js",["286","287"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  checkUserRequest,\r\n  logoutRequest,\r\n  kakaoLogoutRequest,\r\n  checkSessionRequest,\r\n} from \"../redux\";\r\nimport { useHistory } from \"react-router\";\r\n// import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// 색 적용은 나중에 해보기\r\n// import { createTheme } from '@material-ui/core/styles';\r\n\r\n// const theme = createTheme({\r\n//   palette: {\r\n//     primary: {\r\n//       light: '#ffd149',\r\n//       main: '#3f50b5',\r\n//       dark: '#002884',\r\n//       contrastText: '#fff',\r\n//     },\r\n//     secondary: {\r\n//       light: '#ff7961',\r\n//       main: '#f44336',\r\n//       dark: '#ba000d',\r\n//       contrastText: '#000',\r\n//     },\r\n//   },\r\n// });\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction TopBar({\r\n  userStatus,\r\n  checkUserRequest,\r\n  logoutRequest,\r\n  isLoggedIn,\r\n  kakaoLogoutRequest,\r\n  checkSessionRequest,\r\n}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    checkSessionRequest();\r\n\r\n    // 현재 경로가 '/'라면 Home으로 이동\r\n    if (thisPath === \"/\") {\r\n      history.push(\"/Home\");\r\n    }\r\n  }, []);\r\n  const history = useHistory();\r\n  let thisPath = history.location.pathname;\r\n  const classes = useStyles();\r\n\r\n  const toastOnLogout = () => toast(\"로그아웃 되었습니다.\");\r\n\r\n  const onLogout = (e) => {\r\n    kakaoLogoutRequest().then(() => {\r\n      toastOnLogout();\r\n      window.location.replace(\"/Home\");\r\n    });\r\n  };\r\n\r\n  const loginButton = (\r\n    <div>\r\n      <Button href=\"/Login\" color=\"inherit\">\r\n        로그인\r\n      </Button>\r\n      |\r\n      <Button href=\"/SignUp\" color=\"inherit\">\r\n        회원가입\r\n      </Button>\r\n    </div>\r\n  );\r\n  const logoutButton = (\r\n    <div>\r\n      <Button onClick={onLogout} color=\"inherit\">\r\n        로그아웃\r\n      </Button>\r\n      |\r\n      <Button href=\"/Mypage\" color=\"inherit\">\r\n        MyPage\r\n      </Button>\r\n      |\r\n      <Button href=\"/Ranking\" color=\"inherit\">\r\n        Ranking\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Button href=\"/Home\" color=\"inherit\" className={classes.title}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Kotudy\r\n            </Typography>\r\n          </Button>\r\n          {isLoggedIn ? logoutButton : loginButton}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userStatus: state.authentication.status,\r\n    isLoggedIn: state.kakaoAuth.status.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutRequest: () => {\r\n      return dispatch(logoutRequest());\r\n    },\r\n    checkUserRequest: () => {\r\n      return dispatch(checkUserRequest());\r\n    },\r\n    kakaoLogoutRequest: () => {\r\n      return dispatch(kakaoLogoutRequest());\r\n    },\r\n    checkSessionRequest: () => {\r\n      return dispatch(checkSessionRequest());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuthRedirectHandler.js",["288","289","290","291"],"// 리다이렉트될 화면\r\n// OAuthRedirectHandeler.js\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { kakaoAuthRequest } from \"../../redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n//import Spinner from \"./Spinner\";\r\n\r\nfunction OAuthRedirectHandler({ kakaoAuthRequest, isLoggedIn }) {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    kakaoAuthRequest(code);\r\n  }, []);\r\n\r\n  // 인가코드\r\n  let code = new URL(window.location.href).searchParams.get(\"code\");\r\n  console.log(code);\r\n\r\n  if (isLoggedIn === true) {\r\n    // 카카오 로그인 되면\r\n    history.push(\"/Home\");\r\n  }\r\n\r\n  return <div>hello kakao</div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.kakaoAuth.status.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    kakaoAuthRequest: (code) => {\r\n      return dispatch(kakaoAuthRequest(code));\r\n    },\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(OAuthRedirectHandler);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\Quiz.js",["292","293","294","295","296","297","298","299","300","301","302","303"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport M from \"materialize-css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { postQuizResult } from \"../../redux\";\r\nimport { useLocation } from \"react-router\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./_quiz.scss\";\r\nimport classnames from \"classnames\";\r\nimport * as _ from \"lodash\";\r\nimport { shuffle } from \"lodash\";\r\n\r\nfunction Quiz({ postQuizResult, match }) {\r\n  let history = useHistory();\r\n  const [end, setend] = useState(false);\r\n  const [currentQuestion, setCurrentQuestion] = useState({});\r\n  const [nextQuestion, setNextQuestion] = useState({});\r\n  const [previousQuestion, setPreviousQuestion] = useState({});\r\n  var currentAnswer = \"\";\r\n  const [numberOfQuestions, setNumberOfQuestions] = useState(0);\r\n  const [numberOfAnswered, setNumberOfAnswered] = useState(0);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [wrongAnswers, setWrongAnswers] = useState(0);\r\n  const quizunit = useLocation();\r\n  let randomQuestion = [];\r\n  let myquestions = quizunit.state;\r\n  // let myquestions = questions;\r\n\r\n  const [NBDisabled, setNBDisabled] = useState(false);\r\n  const [PBDisabled, setPBDisabled] = useState(false);\r\n\r\n  // const morphemeLoad = () => {\r\n  //     for (let i = 0; i < 10; i++) {\r\n  //         for (let j =0; j < 4; j++){\r\n  //             if(j==0) {\r\n  //                 randomQuestion\r\n  //             }\r\n  //         }\r\n  //     }\r\n  //   };\r\n  const Summary = {\r\n    vaild: true,\r\n    totalScore: 0,\r\n    totalNumberOfQuestions: 0,\r\n    numberOfAnsweredQuestions: 0,\r\n    totalCorrectAnswers: 0,\r\n    totalWrongAnswers: 0,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const quizParam = match.params.quizStatus;\r\n    console.log(\"받아오기 성공!\");\r\n    displayQuestions();\r\n  }, [match.params.quizStatus]);\r\n\r\n  const quizStatus = useSelector((state) => state.quiz.status.quizStatus);\r\n\r\n  const displayQuestions = () => {\r\n    console.log(myquestions);\r\n    if (currentQuestionIndex == 0) {\r\n      console.log(\"처음\");\r\n      setCurrentQuestionIndex(\r\n        (currentQuestionIndex) => currentQuestionIndex + 1\r\n      );\r\n    }\r\n    // myquestions = _.cloneDeep(questions);\r\n    setCurrentQuestion(myquestions[currentQuestionIndex]);\r\n    setNextQuestion(myquestions[currentQuestionIndex + 1]);\r\n    setNumberOfQuestions(myquestions.length);\r\n    currentAnswer = currentQuestion.word_mean;\r\n    handleDisableButton();\r\n    // setRandomQuestion([\r\n    //     currentQuestion.word_mean,\r\n    //     currentQuestion.wrong_answer1,\r\n    //     currentQuestion.wrong_answer2,\r\n    //     currentQuestion.wrong_answer3\r\n    // ]);\r\n    // randomQuestion()\r\n    if (currentQuestionIndex <= 1) {\r\n      setPreviousQuestion(myquestions[currentQuestionIndex - 1]);\r\n    }\r\n  };\r\n  function suffle(array) {\r\n    array.sort(() => Math.random() - 0.5);\r\n  }\r\n  // const randomQuestion = () => {\r\n  //     console.log(randomA);\r\n  //     suffle(randomA);\r\n  // }\r\n  const Quizend = () => {\r\n    Summary.totalScore = score;\r\n    Summary.totalNumberOfQuestions = numberOfQuestions;\r\n    Summary.numberOfAnsweredQuestions = correctAnswers + wrongAnswers;\r\n    Summary.totalCorrectAnswers = correctAnswers;\r\n    Summary.totalWrongAnswers = wrongAnswers;\r\n  };\r\n  const endGame = () => {\r\n    Quizend();\r\n    postQuizResult(Summary.totalScore);\r\n    setTimeout(() => {\r\n      history.push({\r\n        pathname: \"/Summary\",\r\n        state: Summary,\r\n      });\r\n    }, 1000);\r\n  };\r\n  const handleOptionClick = (e) => {\r\n    currentAnswer = currentQuestion.word_mean;\r\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    if (e.target.innerHTML == currentAnswer) {\r\n      clickCorrect();\r\n    } else {\r\n      clickWrong();\r\n    }\r\n  };\r\n  const clickCorrect = () => {\r\n    M.toast({\r\n      html: \"정답입니다!\",\r\n      classes: \"toast-valid\",\r\n      displayLength: 1500,\r\n    });\r\n\r\n    setScore((score) => score + 1);\r\n    setCorrectAnswers(correctAnswers + 1);\r\n    let CQI = currentQuestionIndex + 1;\r\n    setCurrentQuestionIndex(CQI);\r\n    setNumberOfAnswered(numberOfAnswered + 1);\r\n\r\n    if (nextQuestion === undefined) {\r\n      setScore(score + 1);\r\n      setCorrectAnswers(correctAnswers + 1);\r\n      setNumberOfAnswered(numberOfAnswered + 1);\r\n      setend(true);\r\n    } else {\r\n      displayQuestions();\r\n    }\r\n  };\r\n  const clickWrong = () => {\r\n    navigator.vibrate(1000);\r\n    M.toast({\r\n      html: \"틀렸습니다!\",\r\n      classes: \"toast-invalid\",\r\n      displayLength: 1500,\r\n    });\r\n\r\n    setWrongAnswers(wrongAnswers + 1);\r\n    let CQI = currentQuestionIndex + 1;\r\n    setCurrentQuestionIndex(CQI);\r\n    setNumberOfAnswered(numberOfAnswered + 1);\r\n\r\n    if (nextQuestion === undefined) {\r\n      setWrongAnswers(wrongAnswers + 1);\r\n      setNumberOfAnswered(numberOfAnswered + 1);\r\n      setend(true);\r\n    } else {\r\n      displayQuestions();\r\n    }\r\n  };\r\n  const handleNextButtonClick = () => {\r\n    if (nextQuestion !== undefined) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      displayQuestions();\r\n    }\r\n  };\r\n  const handlePreviousButtonClick = () => {\r\n    if (previousQuestion == undefined) {\r\n      M.toast({\r\n        html: \"이전 문제가 없습니다.\",\r\n        classes: \"toast-invalid\",\r\n        displayLength: 1500,\r\n      });\r\n      displayQuestions();\r\n    } else if (nextQuestion !== undefined) {\r\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n      displayQuestions();\r\n    }\r\n  };\r\n  const handleQuitButtonClick = () => {\r\n    if (window.confirm(\"나가시겠습니까?\")) {\r\n      history.push(\"/Home\");\r\n    }\r\n  };\r\n  const handleButtonClick = (e) => {\r\n    switch (e.target.id) {\r\n      case \"next-button\":\r\n        handleNextButtonClick();\r\n        break;\r\n      case \"previous-button\":\r\n        handlePreviousButtonClick();\r\n        break;\r\n      case \"quit-button\":\r\n        handleQuitButtonClick();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleDisableButton = () => {\r\n    if (currentQuestionIndex === 0 || currentQuestionIndex < 0) {\r\n      setPBDisabled(true);\r\n    } else {\r\n      setPBDisabled(false);\r\n    }\r\n\r\n    if (\r\n      nextQuestion === undefined ||\r\n      currentQuestionIndex + 1 === numberOfQuestions\r\n    ) {\r\n      setNBDisabled(true);\r\n    } else {\r\n      setNBDisabled(false);\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>Quiz Page</title>\r\n      </Helmet>\r\n      {end ? (\r\n        <div className=\"questions\">\r\n          <h2>퀴즈가 끝났습니다.</h2>\r\n          <button className=\"end-button\" onClick={endGame}>\r\n            결과로 가기\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"questions\">\r\n          <h2>오늘의 퀴즈</h2>\r\n          <div className=\"lifeline-container\"></div>\r\n          <div className=\"timer-container\">\r\n            <p>\r\n              <span className=\"left\" style={{ float: \"left\" }}>\r\n                {currentQuestionIndex} of {numberOfQuestions}\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <h5>{currentQuestion.word}</h5>\r\n          <div className=\"options-container\">\r\n            <p onClick={handleOptionClick} className=\"option\">\r\n              {currentQuestion.word_mean}\r\n            </p>\r\n            <p onClick={handleOptionClick} className=\"option\">\r\n              {currentQuestion.wrong_answer1}\r\n            </p>\r\n          </div>\r\n          <div className=\"options-container\">\r\n            <p onClick={handleOptionClick} className=\"option\">\r\n              {currentQuestion.wrong_answer2}\r\n            </p>\r\n            <p onClick={handleOptionClick} className=\"option\">\r\n              {currentQuestion.wrong_answer3}\r\n            </p>\r\n          </div>\r\n          <div className=\"button-container\">\r\n            <button\r\n              className={classnames(\"\", { disable: PBDisabled })}\r\n              id=\"previous-button\"\r\n              onClick={handleButtonClick}\r\n            >\r\n              이전\r\n            </button>\r\n            <button\r\n              className={classnames(\"\", { disable: NBDisabled })}\r\n              id=\"next-button\"\r\n              onClick={handleButtonClick}\r\n            >\r\n              다음\r\n            </button>\r\n            <button id=\"quit-button\" onClick={handleButtonClick}>\r\n              나가기\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    postQuizResult: (score) => {\r\n      return dispatch(postQuizResult(score));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\AuthSignUp.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainWordOfTheDay.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuth.js",["304","305","306","307"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./OAuth.css\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n\r\n    // padding: theme.spacing(10),\r\n    // width: '100%',\r\n    // maxWidth: '30ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #D9D9D9\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  test: {\r\n    // height: '50%',\r\n    float: \"right\",\r\n    // border: '1px solid #D9D9D9',\r\n    // position: 'abolute',\r\n    // left: '50%',\r\n    // top: '50%',\r\n    // transform: 'translate(-50%, -50%)',\r\n\r\n    // display: 'flex',\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n  },\r\n  box: {\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  bottom: {\r\n    display: \"inline\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n  },\r\n}));\r\n\r\nexport default function OAuth({}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  const CLIENT_ID = \"ade593cab628c91e766dd3f9497bbc92\";\r\n  const REDIRECT_URI = \"http://localhost:3000/kakaoAuth\";\r\n\r\n  const KAKAO_AUTH_URL = `https://kauth.kakao.com/oauth/authorize?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=code`;\r\n\r\n  return (\r\n    <div>\r\n      <Button id=\"kakaoLoginButton\" href={KAKAO_AUTH_URL}></Button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\is-empty.js",[],["308","309"],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MyDictionary.js",["310","311","312","313"],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordMeaning\\MainWordMeaning.js",["314"],"import React, { useState } from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport \"./MainWordMeaning.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSpeechRecognition } from \"react-speech-kit\";\r\n\r\nexport default function MainWordMeaning({ handleMorpheme, item }) {\r\n  const [checked, setChecked] = useState(false);\r\n  const [searchBox, setSearchBox] = useState(\"\");\r\n\r\n  // 음성인식\r\n  const { listen, listening, stop } = useSpeechRecognition({\r\n    onResult: (result) => {\r\n      // 음성인식 결과가 value 상태값으로 할당됩니다.\r\n      setSearchBox(result);\r\n    },\r\n  });\r\n\r\n  const handleChange = ({ target }) => {\r\n    setSearchBox(target.value);\r\n  };\r\n\r\n  const checkMorpheme = (e) => {\r\n    handleMorpheme(searchBox);\r\n    setChecked(true);\r\n  };\r\n\r\n  const morpheme = {\r\n    pos: [],\r\n    name: [],\r\n  };\r\n\r\n  const morphemeLoad = () => {\r\n    for (let i = 0; i < item.length; i++) {\r\n      if (i % 2 == 0) {\r\n        morpheme.pos.push(item[i]);\r\n      } else {\r\n        morpheme.name.push(item[i]);\r\n      }\r\n    }\r\n  };\r\n  morphemeLoad();\r\n  const searchPage = (\r\n    <div className=\"inputs\">\r\n      <div> 문장 / 단어</div>\r\n      <TextField\r\n        className=\"search\"\r\n        id=\"filled-basic\"\r\n        label=\"원하는 단어나 문장을 입력해 주세요.\"\r\n        value={searchBox}\r\n        autoFocus\r\n        onChange={(e) => handleChange(e)}\r\n      />\r\n      <Button color=\"primary\" onClick={checkMorpheme} variant=\"contained\">\r\n        검색\r\n      </Button>\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        onMouseDown={(e) => listen()}\r\n        onMouseUp={stop}\r\n      >\r\n        🎤\r\n      </Button>\r\n      {listening && <div>음성인식 활성화 중</div>}\r\n    </div>\r\n  );\r\n  const searchSuccess = morpheme.pos.map((item, index) => (\r\n    <div key={index}>\r\n      <h2 style={{ margineft: 10 }}>\r\n        [{morpheme.pos[index]}] {morpheme.name[index]}\r\n      </h2>\r\n      <Link to={`/Word/${morpheme.name[index]}`}>\r\n        <Button color=\"primary\" variant=\"contained\">\r\n          더 알아보기\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h3 className=\"title\"> 이건 무슨 뜻이지? </h3>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          {searchPage}\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          {!checked ? null : searchSuccess}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MySearch.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\index.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\voiceRecognition\\VoiceRecognition.js",["315","316","317","318","319"],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\voiceRecognition\\actions.js",["320"],"import axios from \"axios\";\r\nimport {\r\n  VOICE_RECOGNITION,\r\n  VOICE_RECOGNITION_SUCCESS,\r\n  VOICE_RECOGNITION_FAILURE,\r\n} from \"./types\";\r\n\r\nexport function voiceRecognitionRequest(data) {\r\n  return (dispatch) => {\r\n    dispatch(voiceRecognition());\r\n\r\n    // audio file formData로 줄때\r\n    const formData = new FormData();\r\n\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    };\r\n\r\n    formData.append(\"audioFile\", data);\r\n\r\n    // audio base64 데이터로 줄 때\r\n    let body = {\r\n      audio: data,\r\n    };\r\n    console.log(formData.get(\"audioFile\"));\r\n    return axios\r\n      .post(\"http://localhost:8080/voiceRecognition\", formData, config)\r\n      .then((response) => {\r\n        dispatch(voiceRecognitionSuccess(response.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(voiceRecognitionFailure());\r\n      });\r\n  };\r\n}\r\n\r\nexport function voiceRecognition() {\r\n  return {\r\n    type: VOICE_RECOGNITION,\r\n  };\r\n}\r\n\r\nexport function voiceRecognitionSuccess(result) {\r\n  return {\r\n    type: VOICE_RECOGNITION_SUCCESS,\r\n    result,\r\n  };\r\n}\r\n\r\nexport function voiceRecognitionFailure() {\r\n  return {\r\n    type: VOICE_RECOGNITION_FAILURE,\r\n  };\r\n}\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\voiceRecognition\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\voiceRecognition\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\sentenceParaphrase\\SentenceParaphrase.js",["321","322"],"import React, { useEffect, useState } from \"react\";\r\nimport {} from \"../../redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingLeft: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n    // padding: theme.spacing(10),\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #D9D9D9\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  test: {\r\n    // height: '50%',\r\n    float: \"right\",\r\n    // border: '1px solid #D9D9D9',\r\n    // position: 'abolute',\r\n    // left: '50%',\r\n    // top: '50%',\r\n    // transform: 'translate(-50%, -50%)',\r\n\r\n    // display: 'flex',\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n  },\r\n  box: {\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  bottom: {\r\n    display: \"inline\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n  },\r\n}));\r\n\r\nexport default function SentenceParaphrase({\r\n  onClickCheckParaphrase,\r\n  paraphraseCheckValid,\r\n  paraphraseResult,\r\n}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  const [userSentence, setUserSentence] = useState(\"\");\r\n  const paraphraseCheckResult = useSelector(\r\n    (state) => state.paraphrase.status.result\r\n  );\r\n\r\n  const handleChange = ({ target }) => {\r\n    setUserSentence(target.value);\r\n  };\r\n\r\n  let exampleSentence =\r\n    \"성탄 전야 미사를 집전하며 프란치스코 교황이 전한 메시지는 '어린이를 향한 관심'입니다.\";\r\n\r\n  const checkParaphrase = (e) => {\r\n    let body = {\r\n      sentence1: exampleSentence,\r\n      sentence2: userSentence,\r\n    };\r\n\r\n    onClickCheckParaphrase(body);\r\n  };\r\n\r\n  if (paraphraseCheckResult === \"paraphrase\") {\r\n    exampleSentence =\r\n      \"거짓을 행하는 자는 내 집 안에 거주하지 못하며 거짓말하는 자는 내 목전에 서지 못하리로다.\";\r\n  }\r\n  // const checkResultParaphrase = <div style=\"color: #0A0\">같은 의미입니다!</div>;\r\n  // const checkResultNonParaphrase = (\r\n  //   <div style=\"color: #0A0\">다른 의미입니다. 다시 입력해 주세요.</div>\r\n  // );\r\n  // const checkResult =\r\n  //   paraphraseResult === \"paraphrase\"\r\n  //     ? checkResultParaphrase\r\n  //     : checkResultNonParaphrase;\r\n\r\n  // // hanspell-example.js\r\n  // const hanspell = require(\"hanspell\");\r\n\r\n  // const sentence = \"리랜드는 얼굴 골격이 굵은게,\";\r\n  // const end = function () {\r\n  //   console.log(\"// check ends\");\r\n  // };\r\n  // const error = function (err) {\r\n  //   console.error(\"// error: \" + err);\r\n  // };\r\n\r\n  // hanspell.spellCheckByDAUM(sentence, 6000, console.log, end, error);\r\n  // hanspell.spellCheckByPNU(sentence, 6000, console.log, end, error);\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <h5>바꿔쓰기(Paraphrasing)</h5>\r\n        </Grid>\r\n        <h6>{exampleSentence}</h6>\r\n        <TextField\r\n          id=\"standard-textarea\"\r\n          multiline\r\n          label=\"같은 뜻의 문장을 입력하세요.\"\r\n          name=\"sentence\"\r\n          autoFocus\r\n          fullWidth\r\n          value={userSentence}\r\n          onChange={handleChange}\r\n        />\r\n        <Grid item>\r\n          <Button color=\"primary\" onClick={checkParaphrase} variant=\"contained\">\r\n            확인하기\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\voiceRecognition\\VoiceRecognition2.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\Summary.js",["323","324","325"],"import React, { Component, Fragment, useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport { BiTimeFive } from \"react-icons/bi\";\r\nimport \"./_summary.scss\";\r\n\r\nexport default function Suumary({}) {\r\n  useEffect(() => {\r\n    console.log(\"성공!\");\r\n    console.log(Summary);\r\n    scoreMessage();\r\n  });\r\n\r\n  const Quiz = useLocation();\r\n  let Summary = Quiz.state;\r\n  let remark;\r\n\r\n  const userScore = Summary.totalScore;\r\n\r\n  const scoreMessage = () => {\r\n    console.log();\r\n    if (userScore <= 3) {\r\n      remark = \"좀 더 연습하세요!\";\r\n    } else if (userScore > 3 && userScore <= 5) {\r\n      remark = \"다음번엔 더 잘 할수 있을거에요!\";\r\n    } else if (userScore <= 7 && userScore > 5) {\r\n      remark = \"아쉬워요!\";\r\n    } else if (userScore > 7 && userScore <= 8) {\r\n      remark = \"잘했어요!\";\r\n    } else {\r\n      remark = \"매우 잘했어요!\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        <Helmet>\r\n          <title>퀴즈 결과</title>\r\n        </Helmet>\r\n        <div className=\"quiz-summary\">\r\n          {Summary ? (\r\n            <Fragment>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <BiTimeFive className=\"success-icon\" />\r\n              </div>\r\n              <h1>퀴즈 종료</h1>\r\n              <div className=\"container stats\">\r\n                <h4>{remark}</h4>\r\n                <h2> score: {Summary.totalScore}점</h2>\r\n                <span className=\"stat left\">전체 문제 수</span>\r\n                <span className=\"right\">{Summary.totalNumberOfQuestions}</span>\r\n                <br />\r\n                <span className=\"stat left\">정답 수</span>\r\n                <span className=\"right\">{Summary.totalCorrectAnswers}</span>\r\n                <br />\r\n                <span className=\"stat left\">오답 수</span>\r\n                <span className=\"right\">{Summary.totalWrongAnswers}</span>\r\n              </div>\r\n              <section>\r\n                <ul>\r\n                  <li>\r\n                    <Link to=\"/Home\">홈으로</Link>\r\n                  </li>\r\n                </ul>\r\n              </section>\r\n            </Fragment>\r\n          ) : (\r\n            <section>\r\n              <h1 className=\"no-state\">결과가 없습니다.</h1>\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/Home\">홈으로</Link>\r\n                </li>\r\n              </ul>\r\n            </section>\r\n          )}\r\n        </div>\r\n      </Fragment>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\Mainquiz.js",["326","327","328"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      paddingTop: theme.spacing(3),\r\n      paddingLeft: theme.spacing(5),\r\n      paddingRight: theme.spacing(5),\r\n      paddingBottom: theme.spacing(5),\r\n  \r\n      // padding: theme.spacing(10),\r\n      // width: '100%',\r\n      // maxWidth: '30ch',\r\n      height: \"42ch\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid #D9D9D9\",\r\n      borderRadius: \"20px\",\r\n    },\r\n    test: {\r\n      float: \"right\",\r\n    },\r\n    box: {\r\n      border: \"1px solid #D9D9D9\",\r\n    },\r\n    bottom: {\r\n      display: \"inline\",\r\n      borderBottom: \"1px solid #D9D9D9\",\r\n    },\r\n}));\r\n\r\nexport default function Mainquiz({\r\n    quizStatus\r\n})\r\n{\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const handleClick = () => {\r\n      console.log(quizStatus);\r\n        setTimeout(() => {\r\n            history.push({\r\n                pathname: '/Quiz',\r\n                state: quizStatus\r\n            });\r\n        }, 1000);\r\n    }\r\nreturn (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <h3>오늘의 퀴즈</h3>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button color=\"primary\" onClick={handleClick} variant=\"contained\">\r\n            퀴즈로 가기\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","severity":1,"message":"334","line":3,"column":10,"nodeType":"335","messageId":"336","endLine":3,"endColumn":21},{"ruleId":"337","severity":1,"message":"338","line":27,"column":6,"nodeType":"339","endLine":27,"endColumn":8,"suggestions":"340"},{"ruleId":"333","severity":1,"message":"341","line":35,"column":9,"nodeType":"335","messageId":"336","endLine":35,"endColumn":17},{"ruleId":"342","severity":1,"message":"343","line":38,"column":34,"nodeType":"344","messageId":"345","endLine":38,"endColumn":35},{"ruleId":"333","severity":1,"message":"346","line":1,"column":28,"nodeType":"335","messageId":"336","endLine":1,"endColumn":36},{"ruleId":"337","severity":1,"message":"347","line":45,"column":6,"nodeType":"339","endLine":45,"endColumn":8,"suggestions":"348"},{"ruleId":"333","severity":1,"message":"349","line":69,"column":9,"nodeType":"335","messageId":"336","endLine":69,"endColumn":36},{"ruleId":"333","severity":1,"message":"350","line":71,"column":9,"nodeType":"335","messageId":"336","endLine":71,"endColumn":31},{"ruleId":"333","severity":1,"message":"351","line":4,"column":8,"nodeType":"335","messageId":"336","endLine":4,"endColumn":16},{"ruleId":"337","severity":1,"message":"352","line":32,"column":6,"nodeType":"339","endLine":32,"endColumn":8,"suggestions":"353"},{"ruleId":"333","severity":1,"message":"346","line":1,"column":28,"nodeType":"335","messageId":"336","endLine":1,"endColumn":36},{"ruleId":"333","severity":1,"message":"334","line":2,"column":19,"nodeType":"335","messageId":"336","endLine":2,"endColumn":30},{"ruleId":"333","severity":1,"message":"354","line":8,"column":26,"nodeType":"335","messageId":"336","endLine":8,"endColumn":31},{"ruleId":"355","severity":1,"message":"356","line":17,"column":16,"nodeType":"357","messageId":"358","endLine":17,"endColumn":18},{"ruleId":"333","severity":1,"message":"346","line":1,"column":28,"nodeType":"335","messageId":"336","endLine":1,"endColumn":36},{"ruleId":"333","severity":1,"message":"334","line":2,"column":19,"nodeType":"335","messageId":"336","endLine":2,"endColumn":30},{"ruleId":"333","severity":1,"message":"359","line":8,"column":3,"nodeType":"335","messageId":"336","endLine":8,"endColumn":11},{"ruleId":"333","severity":1,"message":"360","line":13,"column":3,"nodeType":"335","messageId":"336","endLine":13,"endColumn":6},{"ruleId":"337","severity":1,"message":"361","line":125,"column":6,"nodeType":"339","endLine":125,"endColumn":8,"suggestions":"362"},{"ruleId":"333","severity":1,"message":"363","line":153,"column":7,"nodeType":"335","messageId":"336","endLine":153,"endColumn":15},{"ruleId":"364","severity":1,"message":"365","line":161,"column":22,"nodeType":"366","messageId":"358","endLine":161,"endColumn":24},{"ruleId":"364","severity":1,"message":"365","line":166,"column":22,"nodeType":"366","messageId":"358","endLine":166,"endColumn":24},{"ruleId":"367","severity":1,"message":"368","line":199,"column":11,"nodeType":"369","endLine":204,"endColumn":13},{"ruleId":"333","severity":1,"message":"370","line":222,"column":12,"nodeType":"335","messageId":"336","endLine":222,"endColumn":25},{"ruleId":"367","severity":1,"message":"368","line":226,"column":11,"nodeType":"369","endLine":231,"endColumn":13},{"ruleId":"333","severity":1,"message":"346","line":1,"column":28,"nodeType":"335","messageId":"336","endLine":1,"endColumn":36},{"ruleId":"337","severity":1,"message":"371","line":69,"column":6,"nodeType":"339","endLine":69,"endColumn":8,"suggestions":"372"},{"ruleId":"333","severity":1,"message":"346","line":4,"column":28,"nodeType":"335","messageId":"336","endLine":4,"endColumn":36},{"ruleId":"333","severity":1,"message":"334","line":5,"column":19,"nodeType":"335","messageId":"336","endLine":5,"endColumn":30},{"ruleId":"333","severity":1,"message":"373","line":5,"column":32,"nodeType":"335","messageId":"336","endLine":5,"endColumn":43},{"ruleId":"337","severity":1,"message":"374","line":16,"column":6,"nodeType":"339","endLine":16,"endColumn":8,"suggestions":"375"},{"ruleId":"333","severity":1,"message":"376","line":5,"column":8,"nodeType":"335","messageId":"336","endLine":5,"endColumn":14},{"ruleId":"333","severity":1,"message":"377","line":8,"column":10,"nodeType":"335","messageId":"336","endLine":8,"endColumn":14},{"ruleId":"333","severity":1,"message":"378","line":11,"column":13,"nodeType":"335","messageId":"336","endLine":11,"endColumn":14},{"ruleId":"333","severity":1,"message":"379","line":12,"column":10,"nodeType":"335","messageId":"336","endLine":12,"endColumn":17},{"ruleId":"333","severity":1,"message":"380","line":28,"column":7,"nodeType":"335","messageId":"336","endLine":28,"endColumn":21},{"ruleId":"333","severity":1,"message":"381","line":54,"column":11,"nodeType":"335","messageId":"336","endLine":54,"endColumn":20},{"ruleId":"337","severity":1,"message":"382","line":57,"column":6,"nodeType":"339","endLine":57,"endColumn":31,"suggestions":"383"},{"ruleId":"333","severity":1,"message":"384","line":59,"column":9,"nodeType":"335","messageId":"336","endLine":59,"endColumn":19},{"ruleId":"364","severity":1,"message":"365","line":63,"column":30,"nodeType":"366","messageId":"358","endLine":63,"endColumn":32},{"ruleId":"333","severity":1,"message":"385","line":86,"column":12,"nodeType":"335","messageId":"336","endLine":86,"endColumn":18},{"ruleId":"364","severity":1,"message":"365","line":113,"column":28,"nodeType":"366","messageId":"358","endLine":113,"endColumn":30},{"ruleId":"364","severity":1,"message":"365","line":169,"column":26,"nodeType":"366","messageId":"358","endLine":169,"endColumn":28},{"ruleId":"333","severity":1,"message":"346","line":1,"column":28,"nodeType":"335","messageId":"336","endLine":1,"endColumn":36},{"ruleId":"333","severity":1,"message":"334","line":2,"column":10,"nodeType":"335","messageId":"336","endLine":2,"endColumn":21},{"ruleId":"355","severity":1,"message":"356","line":43,"column":31,"nodeType":"357","messageId":"358","endLine":43,"endColumn":33},{"ruleId":"333","severity":1,"message":"386","line":48,"column":9,"nodeType":"335","messageId":"336","endLine":48,"endColumn":16},{"ruleId":"329","replacedBy":"387"},{"ruleId":"331","replacedBy":"388"},{"ruleId":"333","severity":1,"message":"376","line":5,"column":8,"nodeType":"335","messageId":"336","endLine":5,"endColumn":14},{"ruleId":"333","severity":1,"message":"389","line":6,"column":10,"nodeType":"335","messageId":"336","endLine":6,"endColumn":20},{"ruleId":"333","severity":1,"message":"390","line":67,"column":7,"nodeType":"335","messageId":"336","endLine":67,"endColumn":20},{"ruleId":"333","severity":1,"message":"341","line":68,"column":9,"nodeType":"335","messageId":"336","endLine":68,"endColumn":17},{"ruleId":"364","severity":1,"message":"365","line":36,"column":17,"nodeType":"366","messageId":"358","endLine":36,"endColumn":19},{"ruleId":"333","severity":1,"message":"391","line":2,"column":18,"nodeType":"335","messageId":"336","endLine":2,"endColumn":27},{"ruleId":"333","severity":1,"message":"377","line":5,"column":10,"nodeType":"335","messageId":"336","endLine":5,"endColumn":14},{"ruleId":"333","severity":1,"message":"392","line":29,"column":7,"nodeType":"335","messageId":"336","endLine":29,"endColumn":16},{"ruleId":"393","severity":1,"message":"394","line":75,"column":5,"nodeType":"395","messageId":"396","endLine":77,"endColumn":6},{"ruleId":"337","severity":1,"message":"397","line":118,"column":6,"nodeType":"339","endLine":118,"endColumn":16,"suggestions":"398"},{"ruleId":"333","severity":1,"message":"399","line":22,"column":9,"nodeType":"335","messageId":"336","endLine":22,"endColumn":13},{"ruleId":"333","severity":1,"message":"389","line":9,"column":10,"nodeType":"335","messageId":"336","endLine":9,"endColumn":20},{"ruleId":"333","severity":1,"message":"354","line":11,"column":26,"nodeType":"335","messageId":"336","endLine":11,"endColumn":31},{"ruleId":"333","severity":1,"message":"400","line":1,"column":17,"nodeType":"335","messageId":"336","endLine":1,"endColumn":26},{"ruleId":"333","severity":1,"message":"346","line":1,"column":49,"nodeType":"335","messageId":"336","endLine":1,"endColumn":57},{"ruleId":"355","severity":1,"message":"356","line":8,"column":33,"nodeType":"357","messageId":"358","endLine":8,"endColumn":35},{"ruleId":"333","severity":1,"message":"401","line":1,"column":17,"nodeType":"335","messageId":"336","endLine":1,"endColumn":26},{"ruleId":"333","severity":1,"message":"346","line":1,"column":28,"nodeType":"335","messageId":"336","endLine":1,"endColumn":36},{"ruleId":"333","severity":1,"message":"354","line":6,"column":26,"nodeType":"335","messageId":"336","endLine":6,"endColumn":31},"no-native-reassign",["402"],"no-negated-in-lhs",["403"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'keyword' and 'oneWordRequest'. Either include them or remove the dependency array. If 'oneWordRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["404"],"'itemLoad' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dailyWordsRequest', 'quizRequest', and 'wordRankingRequest'. Either include them or remove the dependency array. If 'quizRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["405"],"'toastCheckParaphraseFailure' is assigned a value but never used.","'onClickCheckParaphrase' is assigned a value but never used.","'MySearch' is defined but never used.","React Hook useEffect has missing dependencies: 'dictionaryWordsRequest' and 'searchWordsRequest'. Either include them or remove the dependency array. If 'dictionaryWordsRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["406"],"'toast' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'formatMs' is defined but never used.","'Box' is defined but never used.","React Hook useEffect has missing dependencies: 'userRankingRequest' and 'wordRankingRequest'. Either include them or remove the dependency array. If 'wordRankingRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["407"],"'top3user' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'UserBasicCard' is defined but never used.","React Hook useEffect has missing dependencies: 'checkSessionRequest', 'history', and 'thisPath'. Either include them or remove the dependency array. If 'checkSessionRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["408"],"'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'code' and 'kakaoAuthRequest'. Either include them or remove the dependency array. If 'kakaoAuthRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["409"],"'Button' is defined but never used.","'Link' is defined but never used.","'_' is defined but never used.","'shuffle' is defined but never used.","'randomQuestion' is assigned a value but never used.","'quizParam' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'displayQuestions'. Either include it or remove the dependency array.",["410"],"'quizStatus' is assigned a value but never used.","'suffle' is defined but never used.","'classes' is assigned a value but never used.",["402"],["403"],"'Typography' is defined but never used.","'wordForDelete' is assigned a value but never used.","'TextField' is defined but never used.","'voiceFile' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useCallback has missing dependencies: 'onSearchAudioFile' and 'value'. Either include them or remove the dependency array.",["411"],"'body' is assigned a value but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},"Update the dependencies array to be: [keyword, oneWordRequest]",{"range":"428","text":"429"},"Update the dependencies array to be: [dailyWordsRequest, quizRequest, wordRankingRequest]",{"range":"430","text":"431"},"Update the dependencies array to be: [dictionaryWordsRequest, searchWordsRequest]",{"range":"432","text":"433"},"Update the dependencies array to be: [userRankingRequest, wordRankingRequest]",{"range":"434","text":"435"},"Update the dependencies array to be: [checkSessionRequest, history, thisPath]",{"range":"436","text":"437"},"Update the dependencies array to be: [code, kakaoAuthRequest]",{"range":"438","text":"439"},"Update the dependencies array to be: [displayQuestions, match.params.quizStatus]",{"range":"440","text":"441"},"Update the dependencies array to be: [audioUrl, onSearchAudioFile, value]",{"range":"442","text":"443"},[803,805],"[keyword, oneWordRequest]",[1131,1133],"[dailyWordsRequest, quizRequest, wordRankingRequest]",[752,754],"[dictionaryWordsRequest, searchWordsRequest]",[2880,2882],"[userRankingRequest, wordRankingRequest]",[1667,1669],"[checkSessionRequest, history, thisPath]",[454,456],"[code, kakaoAuthRequest]",[2015,2040],"[displayQuestions, match.params.quizStatus]",[3526,3536],"[audioUrl, onSearchAudioFile, value]"]