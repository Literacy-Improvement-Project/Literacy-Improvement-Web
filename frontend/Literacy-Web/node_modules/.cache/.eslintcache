[{"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\index.js":"1","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\App.js":"2","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\store.js":"3","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\reportWebVitals.js":"4","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\SignUp.js":"5","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\rootReducer.js":"6","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Word.js":"7","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Main.js":"8","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\MyPage.js":"9","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Login.js":"10","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordRanking.js":"11","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\TopBar.js":"12","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuthRedirectHandler.js":"13","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\Quiz.js":"14","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\AuthSignUp.js":"15","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainWordOfTheDay.js":"16","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\actions.js":"17","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\reducer.js":"18","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\reducer.js":"19","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\reducer.js":"20","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\reducer.js":"21","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\reducer.js":"22","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuth.js":"23","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\is-empty.js":"24","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\reducer.js":"25","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\reducer.js":"26","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\reducer.js":"27","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\reducer.js":"28","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\reducer.js":"29","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MyDictionary.js":"30","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordMeaning\\MainWordMeaning.js":"31","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MySearch.js":"32","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\index.js":"33","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\types.js":"34","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\types.js":"35","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\types.js":"36","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\types.js":"37","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\types.js":"38","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\types.js":"39","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\types.js":"40","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\types.js":"41","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\types.js":"42","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\types.js":"43","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\actions.js":"44","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\actions.js":"45","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\actions.js":"46","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\actions.js":"47","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\actions.js":"48","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\actions.js":"49","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\actions.js":"50","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\actions.js":"51","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\actions.js":"52","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\voiceRecognition\\VoiceRecognition.js":"53","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\voiceRecognition\\actions.js":"54","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\voiceRecognition\\types.js":"55","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\voiceRecognition\\reducer.js":"56","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\sentenceParaphrase\\SentenceParaphrase.js":"57"},{"size":643,"mtime":1637074594080,"results":"58","hashOfConfig":"59"},{"size":1186,"mtime":1637673957613,"results":"60","hashOfConfig":"59"},{"size":667,"mtime":1637074594165,"results":"61","hashOfConfig":"59"},{"size":375,"mtime":1637074594172,"results":"62","hashOfConfig":"59"},{"size":1200,"mtime":1637074594055,"results":"63","hashOfConfig":"59"},{"size":972,"mtime":1637246626389,"results":"64","hashOfConfig":"59"},{"size":3215,"mtime":1637074594092,"results":"65","hashOfConfig":"59"},{"size":4751,"mtime":1637674052331,"results":"66","hashOfConfig":"59"},{"size":2010,"mtime":1637074594090,"results":"67","hashOfConfig":"59"},{"size":1652,"mtime":1637074594083,"results":"68","hashOfConfig":"59"},{"size":3485,"mtime":1637074594013,"results":"69","hashOfConfig":"59"},{"size":4327,"mtime":1637076717909,"results":"70","hashOfConfig":"59"},{"size":1094,"mtime":1637683440162,"results":"71","hashOfConfig":"59"},{"size":10216,"mtime":1637074594034,"results":"72","hashOfConfig":"59"},{"size":8829,"mtime":1637074594046,"results":"73","hashOfConfig":"59"},{"size":4450,"mtime":1637674640224,"results":"74","hashOfConfig":"59"},{"size":760,"mtime":1637074594159,"results":"75","hashOfConfig":"59"},{"size":730,"mtime":1637074594161,"results":"76","hashOfConfig":"59"},{"size":902,"mtime":1637074594107,"results":"77","hashOfConfig":"59"},{"size":1117,"mtime":1637074594135,"results":"78","hashOfConfig":"59"},{"size":1880,"mtime":1637074594099,"results":"79","hashOfConfig":"59"},{"size":877,"mtime":1637074594141,"results":"80","hashOfConfig":"59"},{"size":1572,"mtime":1637074594027,"results":"81","hashOfConfig":"59"},{"size":235,"mtime":1637074594042,"results":"82","hashOfConfig":"59"},{"size":2199,"mtime":1637074594128,"results":"83","hashOfConfig":"59"},{"size":1099,"mtime":1637074594122,"results":"84","hashOfConfig":"59"},{"size":2659,"mtime":1637075303757,"results":"85","hashOfConfig":"59"},{"size":1107,"mtime":1637074594154,"results":"86","hashOfConfig":"59"},{"size":1112,"mtime":1637074594147,"results":"87","hashOfConfig":"59"},{"size":3812,"mtime":1637074593994,"results":"88","hashOfConfig":"59"},{"size":2033,"mtime":1637673536176,"results":"89","hashOfConfig":"59"},{"size":1730,"mtime":1637074593996,"results":"90","hashOfConfig":"59"},{"size":782,"mtime":1637246582740,"results":"91","hashOfConfig":"59"},{"size":156,"mtime":1637074594163,"results":"92","hashOfConfig":"59"},{"size":223,"mtime":1637074594108,"results":"93","hashOfConfig":"59"},{"size":395,"mtime":1637074594102,"results":"94","hashOfConfig":"59"},{"size":189,"mtime":1637074594137,"results":"95","hashOfConfig":"59"},{"size":206,"mtime":1637074594143,"results":"96","hashOfConfig":"59"},{"size":684,"mtime":1637074594130,"results":"97","hashOfConfig":"59"},{"size":190,"mtime":1637074594124,"results":"98","hashOfConfig":"59"},{"size":165,"mtime":1637074594156,"results":"99","hashOfConfig":"59"},{"size":496,"mtime":1637075308613,"results":"100","hashOfConfig":"59"},{"size":189,"mtime":1637074594150,"results":"101","hashOfConfig":"59"},{"size":894,"mtime":1637074594139,"results":"102","hashOfConfig":"59"},{"size":783,"mtime":1637074594145,"results":"103","hashOfConfig":"59"},{"size":2260,"mtime":1637241045752,"results":"104","hashOfConfig":"59"},{"size":1993,"mtime":1637074594097,"results":"105","hashOfConfig":"59"},{"size":902,"mtime":1637074594105,"results":"106","hashOfConfig":"59"},{"size":869,"mtime":1637074594153,"results":"107","hashOfConfig":"59"},{"size":932,"mtime":1637074594120,"results":"108","hashOfConfig":"59"},{"size":878,"mtime":1637074594133,"results":"109","hashOfConfig":"59"},{"size":3287,"mtime":1637074594126,"results":"110","hashOfConfig":"59"},{"size":5954,"mtime":1637685880467,"results":"111","hashOfConfig":"59"},{"size":1101,"mtime":1637681934691,"results":"112","hashOfConfig":"59"},{"size":219,"mtime":1637246094188,"results":"113","hashOfConfig":"59"},{"size":886,"mtime":1637246336709,"results":"114","hashOfConfig":"59"},{"size":4311,"mtime":1637674581145,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"bynrpb",{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"118"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"118"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"118"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"118"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"118"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"118"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"118"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\index.js",[],["241","242"],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\App.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\store.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\reportWebVitals.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\SignUp.js",["243"],"/* 회원가입 */\r\nimport React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AuthSignUp from \"./AuthSignUp\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerRequest } from \"../../redux/signup/actions\";\r\n\r\nclass SignUp extends Component {\r\n  handleRegister = (body) => {\r\n    return this.props.registerRequest(body).then(() => {\r\n      console.log(this.props.history);\r\n      if (this.props.statusReg === \"SUCCESS\") {\r\n        // 회원가입 성공시 로그인 화면으로 돌아감.\r\n        this.props.history.push(\"/Login\");\r\n        return true;\r\n      } else {\r\n        console.log(\"회원가입 실패\");\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AuthSignUp onRegister={this.handleRegister} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    statusReg: state.register.register.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    registerRequest: (body) => {\r\n      return dispatch(registerRequest(body));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\rootReducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Word.js",["244","245","246"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { oneWordRequest, dictionaryWordsRequest } from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  padding: {\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  paper: {\r\n    borderBottom: \"1px solid black\",\r\n  },\r\n}));\r\nfunction Word({ wordStatus, oneWordRequest, dictionaryWordsRequest }) {\r\n  useEffect(() => {\r\n    oneWordRequest(keyword);\r\n  }, []);\r\n  const { keyword } = useParams();\r\n  console.log(keyword);\r\n  let wordName = [];\r\n  let pronunciation = [];\r\n  let pos = [];\r\n  let sense = [];\r\n  const itemLoad = wordStatus.map((item, index) => (\r\n    <div key={index}>\r\n      {\r\n        (wordName.push(item.word),\r\n        pronunciation.push(item.pronunciation),\r\n        pos.push(item.pos),\r\n        sense.push(item.sense))\r\n      }\r\n    </div>\r\n  ));\r\n  const classes = useStyles();\r\n  const handleClickDictionary = () => {\r\n    dictionaryWordsRequest(wordName[0]).then(()=> {\r\n      toastAddToNoteSuccess()\r\n    });\r\n    console.log(wordName[0]);\r\n  };\r\n\r\n  const toastAddToNoteSuccess = () => toast(\"단어장에 추가되었습니다!\");\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={3}>\r\n            <h3>\r\n              {wordName[0]} [{pronunciation[0]}]\r\n            </h3>\r\n          </Grid>\r\n          <Grid item xs={2}></Grid>\r\n          <Grid item xs={7}>\r\n            <Button color=\"primary\" variant=\"contained\" onClick={handleClickDictionary}>나만의 단어장에 추가</Button>\r\n          </Grid>\r\n          {wordName.map((word, index) => (\r\n            <Grid item key={index} xs={12} className={classes.paper}>\r\n              <h4>\r\n                {wordName[index]}[{pronunciation[index]}]\r\n              </h4>\r\n              <h4>{pos[index]}</h4>\r\n              {sense[index].map((item, i) => (\r\n                <h5>\r\n                  {i + 1}.{item.definition}\r\n                </h5>\r\n              ))}\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    wordStatus: state.oneWord.status.wordStatus,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    oneWordRequest: (word) => {\r\n      return dispatch(oneWordRequest(word));\r\n    },\r\n    dictionaryWordsRequest: (word) => {\r\n      return dispatch(dictionaryWordsRequest(word));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Word);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Main.js",["247","248","249"],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\MyPage.js",["250","251"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MySearch from \"../components/MyPage/MySearch\";\r\nimport MyDictionary from \"../components/MyPage/MyDictionary\";\r\nimport {\r\n  dictionaryWordsRequest,\r\n  searchWordsRequest,\r\n  wordDeleteRequest,\r\n} from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction MyPage({\r\n  dictionaryWordsList,\r\n  searchWordsList,\r\n  dictionaryWordsRequest,\r\n  searchWordsRequest,\r\n  wordDeleteRequest,\r\n}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    dictionaryWordsRequest(false);\r\n    searchWordsRequest();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const handleDelete = (word) => {\r\n    wordDeleteRequest(word);\r\n    console.log(word);\r\n    console.log(dictionaryWordsList);\r\n  };\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <MyDictionary\r\n              dictionaryWordsList={dictionaryWordsList}\r\n              handleDelete={handleDelete}\r\n            ></MyDictionary>\r\n          </Grid>\r\n         \r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // userID: state.authentication.status.currentUser,\r\n    searchWordsList: state.myPage.status.searchWordsList,\r\n    dictionaryWordsList: state.myPage.status.dictionaryWordsList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    searchWordsRequest: () => {\r\n      return dispatch(searchWordsRequest());\r\n    },\r\n    dictionaryWordsRequest: (word) => {\r\n      return dispatch(dictionaryWordsRequest(word));\r\n    },\r\n    wordDeleteRequest: (word) => {\r\n      return dispatch(wordDeleteRequest(word));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPage);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Login.js",["252","253","254","255"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport OAuth from \"../components/login/OAuth\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Login({}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={12}></Grid>\r\n          <Grid item xs={12}>\r\n            <h2>LOGIN</h2>\r\n          </Grid>\r\n          <Grid item xs={12}></Grid>\r\n          <Grid item xs={12}>\r\n            <OAuth></OAuth>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return { isLoggedIn: state.kakaoAuth.status.isLoggedIn };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordRanking.js",["256","257","258","259"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport {\r\n    wordRankingRequest,\r\n} from \"../redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(5),\r\n        paddingRight: theme.spacing(5),\r\n        paddingBottom: theme.spacing(5),\r\n        marginTop: theme.spacing(2),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        // width: '100%',\r\n        // maxWidth: '100ch',\r\n        height: \"42ch\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: \"20px\",\r\n        border: \"1px solid #D9D9D9\",\r\n    },\r\n    paper: {\r\n        // padding: theme.spacing(2),\r\n        textAlign: \"center\",\r\n        // height: '7ch',\r\n        color: theme.palette.text.secondary,\r\n        display: \"flex\",\r\n        borderBottom: \"1px solid #D9D9D9\",\r\n    },\r\n}));\r\n\r\nfunction WordRanking({\r\n    wordRanking,\r\n    wordRankingRequest,\r\n}) {\r\n    useEffect(() => {\r\n        // 렌더링\r\n        wordRankingRequest();\r\n    }, []);\r\n\r\n    console.log(wordRanking);\r\n    const classes = useStyles();\r\n    const onClickOneWord = (word) => {\r\n        window.location.replace(`/Word/${word}`);\r\n    };\r\n    let tmp = [1]\r\n    let wordlist = [];\r\n    const loadData =\r\n        tmp.map((item, index) => (\r\n            <div key={index}>\r\n                {\r\n                    wordRanking[0].map((itemm, indexx) => (\r\n                        <div key={indexx}>\r\n                            {\r\n                                wordlist.push(wordRanking[0][indexx])\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n        )\r\n    console.log(wordlist)\r\n    // let test = [[\"초롱\", \"사랑\", \"김정원\"], [1, 2, 3]]\r\n    // 사용자에게 보여지는 부분\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <h3>단어랭킹</h3>\r\n                {wordlist.map((item, index) => (\r\n                    <Button fullWidth onClick={() => onClickOneWord(wordRanking[0][index])}>\r\n                        <Grid item xs={12} className={classes.paper}>\r\n                            <Grid item xs={3}>\r\n                                <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\r\n                                    {wordRanking[0][index]}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Typography variant=\"body2\" gutterBottom color=\"textPrimary\">\r\n                                    {wordRanking[1][index]}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        wordRanking: state.ranking.status.wordRanking,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        wordRankingRequest: () => {\r\n            return dispatch(wordRankingRequest());\r\n        },\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WordRanking);","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\TopBar.js",["260","261"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  checkUserRequest,\r\n  logoutRequest,\r\n  kakaoLogoutRequest,\r\n  checkSessionRequest,\r\n} from \"../redux\";\r\nimport { useHistory } from \"react-router\";\r\n// import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// 색 적용은 나중에 해보기\r\n// import { createTheme } from '@material-ui/core/styles';\r\n\r\n// const theme = createTheme({\r\n//   palette: {\r\n//     primary: {\r\n//       light: '#ffd149',\r\n//       main: '#3f50b5',\r\n//       dark: '#002884',\r\n//       contrastText: '#fff',\r\n//     },\r\n//     secondary: {\r\n//       light: '#ff7961',\r\n//       main: '#f44336',\r\n//       dark: '#ba000d',\r\n//       contrastText: '#000',\r\n//     },\r\n//   },\r\n// });\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction TopBar({\r\n  userStatus,\r\n  checkUserRequest,\r\n  logoutRequest,\r\n  isLoggedIn,\r\n  kakaoLogoutRequest,\r\n  checkSessionRequest,\r\n}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    checkSessionRequest();\r\n\r\n    // 현재 경로가 '/'라면 Home으로 이동\r\n    if (thisPath === \"/\") {\r\n      history.push(\"/Home\");\r\n    }\r\n  }, []);\r\n  const history = useHistory();\r\n  let thisPath = history.location.pathname;\r\n  const classes = useStyles();\r\n\r\n  const toastOnLogout = () => toast(\"로그아웃 되었습니다.\");\r\n\r\n  const onLogout = (e) => {\r\n    kakaoLogoutRequest().then(() => {\r\n      toastOnLogout();\r\n      window.location.replace(\"/Home\");\r\n    });\r\n  };\r\n\r\n  const loginButton = (\r\n    <div>\r\n      <Button href=\"/Login\" color=\"inherit\">\r\n        로그인\r\n      </Button>\r\n      |\r\n      <Button href=\"/SignUp\" color=\"inherit\">\r\n        회원가입\r\n      </Button>\r\n    </div>\r\n  );\r\n  const logoutButton = (\r\n    <div>\r\n      <Button onClick={onLogout} color=\"inherit\">\r\n        로그아웃\r\n      </Button>\r\n      |\r\n      <Button href=\"/Mypage\" color=\"inherit\">\r\n        MyPage\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Button href=\"/Home\" color=\"inherit\" className={classes.title}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Kotudy\r\n            </Typography>\r\n          </Button>\r\n          <Button href=\"/Quiz\" color=\"inherit\" className={classes.title}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Quiz\r\n            </Typography>\r\n          </Button>\r\n          {isLoggedIn ? logoutButton : loginButton}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        transition={Flip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userStatus: state.authentication.status,\r\n    isLoggedIn: state.kakaoAuth.status.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutRequest: () => {\r\n      return dispatch(logoutRequest());\r\n    },\r\n    checkUserRequest: () => {\r\n      return dispatch(checkUserRequest());\r\n    },\r\n    kakaoLogoutRequest: () => {\r\n      return dispatch(kakaoLogoutRequest());\r\n    },\r\n    checkSessionRequest: () => {\r\n      return dispatch(checkSessionRequest());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuthRedirectHandler.js",["262","263","264","265"],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\Quiz.js",["266","267","268","269","270","271","272","273","274","275","276","277"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { Helmet } from 'react-helmet';\r\nimport M from 'materialize-css';\r\n\r\nimport questions from '../../questions.json';\r\nimport { quizRequest } from \"../../redux\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport isEmpty from './is-empty';\r\nimport './_quiz.scss';\r\nimport classnames from 'classnames';\r\nimport * as _ from 'lodash';\r\n\r\nfunction Quiz({ quizStatus, quizRequest}){\r\n    \r\n    \r\n    let history = useHistory();\r\n\r\n    let myquestions = {};\r\n    const [myQuestions, setMyQuestions] = useState({});\r\n    const [currentQuestion, setCurrentQuestion] = useState({});\r\n    const [nextQuestion, setNextQuestion] = useState({});\r\n    const [previousQuestion, setPreviousQuestion] = useState({});\r\n    var currentAnswer = '';\r\n    const [numberOfQuestions,setNumberOfQuestions] = useState(0);\r\n    const [numberOfAnswered,setNumberOfAnswered] = useState(0);\r\n    const [currentQuestionIndex,setCurrentQuestionIndex] = useState(0);\r\n    const [score,setScore] = useState(0);\r\n    const [correctAnswers, setCorrectAnswers] = useState(0);\r\n    const [wrongAnswers,setWrongAnswers] = useState(0);\r\n    const [time, setTime] = useState({});\r\n    const [interval, setInterval] = useState(null);\r\n    const [NBDisabled,setNBDisabled] = useState(false);\r\n    const [PBDisabled,setPBDisabled] = useState(false);\r\n\r\n    useEffect(()=> {\r\n        quizRequest();\r\n        displayQuestions();\r\n        startTimer();\r\n    }, []);\r\n\r\n    const displayQuestions = () => { \r\n        if(currentQuestionIndex == 0) {\r\n            setCurrentQuestionIndex(currentQuestionIndex + 1 );\r\n        }\r\n        myquestions = _.cloneDeep(questions);\r\n        console.log(questions);\r\n        console.log(myquestions);\r\n        console.log(currentQuestionIndex);\r\n        setCurrentQuestion(myquestions[currentQuestionIndex]);\r\n        setNextQuestion(myquestions[currentQuestionIndex + 1]);\r\n        console.log(nextQuestion.question);\r\n        setNumberOfQuestions(myquestions.length);\r\n        currentAnswer = currentQuestion.answer;\r\n        handleDisableButton();\r\n        if(currentQuestionIndex <= 1) {\r\n            setPreviousQuestion(myquestions[currentQuestionIndex -1]);\r\n        }\r\n    }\r\n    const endGame = () => {\r\n        if (window.confirm('투표가 끝났습니다.')) {\r\n            history.push('/Home');\r\n        }\r\n\r\n    }\r\n    const handleOptionClick = (e) => {\r\n        currentAnswer = currentQuestion.answer;\r\n        console.log(currentAnswer);\r\n        setCurrentQuestionIndex(currentQuestionIndex +1);\r\n        if (e.target.innerHTML.toString().toLowerCase() === currentAnswer.toLowerCase())  {\r\n            clickCorrect();\r\n        }else {\r\n            clickWrong();\r\n        }\r\n    }\r\n    const clickCorrect = () => {\r\n        M.toast({\r\n            html: '정답입니다!',\r\n            classes: 'toast-valid',\r\n            displayLength: 1500\r\n        });\r\n   \r\n        if(currentQuestionIndex == 0){ \r\n            setScore(score+1);\r\n            setCorrectAnswers(correctAnswers+1);\r\n            setNumberOfAnswered(numberOfAnswered+1);\r\n        }\r\n        else if(currentQuestionIndex != 0) {\r\n            setScore(score+1);\r\n            setCorrectAnswers(correctAnswers+1);\r\n            let CQI = currentQuestionIndex +1;\r\n            setCurrentQuestionIndex(CQI);\r\n            console.log(currentQuestionIndex);\r\n            setNumberOfAnswered(numberOfAnswered+1);\r\n        }\r\n        if (nextQuestion === undefined) {\r\n            endGame();\r\n        } else {\r\n            displayQuestions();\r\n        }\r\n    }\r\n    const clickWrong = () => {\r\n        navigator.vibrate(1000);\r\n        M.toast({\r\n            html: '틀렸습니다!',\r\n            classes: 'toast-invalid',\r\n            displayLength: 1500\r\n        });\r\n        if(currentQuestionIndex == 0) {\r\n            setWrongAnswers(wrongAnswers+1);\r\n            setNumberOfAnswered(numberOfAnswered);\r\n        }\r\n        else if(currentQuestionIndex != 0) {\r\n            setWrongAnswers(wrongAnswers+1);\r\n            setNumberOfAnswered(numberOfAnswered);\r\n            let CQI = currentQuestionIndex +1;\r\n            setCurrentQuestionIndex(CQI);\r\n            console.log(currentQuestionIndex);\r\n            setNumberOfAnswered(numberOfAnswered+1);\r\n        }   \r\n        if (nextQuestion === undefined) {\r\n            endGame();\r\n        } else {\r\n            displayQuestions();\r\n        }\r\n    }\r\n    const handleNextButtonClick = () => {\r\n        if (nextQuestion !== undefined) {\r\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n            displayQuestions();\r\n        }\r\n    };\r\n    const handlePreviousButtonClick = () => {\r\n        if (previousQuestion == undefined) {\r\n            M.toast({\r\n                html: '이전 문제가 없습니다.',\r\n                classes: 'toast-invalid',\r\n                displayLength: 1500\r\n            });\r\n            displayQuestions();\r\n        }\r\n        else if (nextQuestion !== undefined) {\r\n            setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n            displayQuestions();\r\n        }\r\n    };\r\n    const handleQuitButtonClick = () => {\r\n        if (window.confirm('나가시겠습니까?')) {\r\n            history.push('/Home');\r\n        }\r\n    };\r\n    const handleButtonClick = (e) => {\r\n        switch (e.target.id) {\r\n            case 'next-button':\r\n                handleNextButtonClick();\r\n                break;\r\n            case 'previous-button':\r\n                handlePreviousButtonClick();\r\n                break;\r\n            case 'quit-button':\r\n                handleQuitButtonClick();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    const startTimer = () => {\r\n        const countDownTime = Date.now + 180000;\r\n        console.log(countDownTime);\r\n        setInterval(() => {\r\n            let now = new Date();\r\n            let distance = countDownTime - now;\r\n\r\n            let minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\r\n            let seconds = Math.floor(distance % (1000 * 60) / (1000));\r\n\r\n            if (distance < 0) {\r\n                clearInterval(interval);\r\n                setTime({\r\n                        minutes: 0,\r\n                        seconds: 0\r\n                }, () => {\r\n                    alert('퀴즈가 끝났습니다!');\r\n                    history.push('/Home');\r\n                });\r\n            } else {\r\n                setTime({\r\n                        minutes,\r\n                        seconds,\r\n                        distance\r\n                    }\r\n                )\r\n            }\r\n        }, 1000);\r\n    }\r\n    const handleDisableButton = () => {\r\n        if(currentQuestionIndex === 0 || currentQuestionIndex < 0) {\r\n            setPBDisabled(true);\r\n        }\r\n        else {\r\n            setPBDisabled(false);\r\n        }\r\n\r\n        if(nextQuestion === undefined || currentQuestionIndex + 1 === numberOfQuestions) {\r\n            setNBDisabled(true);\r\n        }\r\n        else {\r\n            setNBDisabled(false);\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Helmet><title>Quiz Page</title></Helmet>\r\n            <div className = \"questions\">\r\n                <h2>오늘의 퀴즈</h2>\r\n                <div className = \"lifeline-container\">\r\n                    {/* <p>\r\n                        <span className = \"mdi mdi-clock-outline mdi-24px\"></span>\r\n                        <span className = \"lifeline\">5</span>\r\n                    </p>\r\n                    <p>\r\n                        <span className = \"mdi mdi-clock-outline mdi-24px\"></span>\r\n                        <span className = \"lifeline\">5</span>\r\n                    </p> */}\r\n                </div>\r\n                <div className = \"timer-container\">\r\n                    <p>\r\n                        <span className= \"left\" style={{float: 'left'}}>\r\n                            {currentQuestionIndex+1} of {numberOfQuestions}</span>\r\n                        <span className= \"right\">\r\n                                {time.minutes}:{time.seconds}\r\n                            <span  className=\"mdi mdi-clock-outline mdi-24px\"></span></span>\r\n                    </p>\r\n                </div>\r\n                <h5>{currentQuestion.question}</h5>\r\n                {console.log(currentQuestion)}\r\n                {console.log(currentQuestionIndex)}\r\n                {console.log(time.minutes)}\r\n                {console.log(time)}\r\n                <div className=\"options-container\">\r\n                    <p onClick={handleOptionClick} className=\"option\">{currentQuestion.optionA}</p>\r\n                    <p onClick={handleOptionClick} className=\"option\">{currentQuestion.optionB}</p>\r\n                </div>\r\n                <div className=\"options-container\">\r\n                    <p onClick={handleOptionClick} className=\"option\">{currentQuestion.optionC}</p>\r\n                    <p onClick={handleOptionClick} className=\"option\">{currentQuestion.optionD}</p>\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <button\r\n                        className = {classnames('', {'disable' : PBDisabled})}\r\n                        id=\"previous-button\"\r\n                        onClick={handleButtonClick}>\r\n                        이전\r\n                    </button>\r\n                    <button\r\n                        className = {classnames('', {'disable' : NBDisabled})}\r\n                        id=\"next-button\"\r\n                        onClick={handleButtonClick}>\r\n                        다음\r\n                    </button>\r\n                    <button id=\"quit-button\" onClick={handleButtonClick}>나가기</button>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quizStatus: state.quiz.status.quizStatus,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        quizRequest: () => {\r\n            return dispatch(quizRequest());\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\AuthSignUp.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainWordOfTheDay.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\OAuth.js",["278","279","280","281"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./OAuth.css\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n\r\n    // padding: theme.spacing(10),\r\n    // width: '100%',\r\n    // maxWidth: '30ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #D9D9D9\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  test: {\r\n    // height: '50%',\r\n    float: \"right\",\r\n    // border: '1px solid #D9D9D9',\r\n    // position: 'abolute',\r\n    // left: '50%',\r\n    // top: '50%',\r\n    // transform: 'translate(-50%, -50%)',\r\n\r\n    // display: 'flex',\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n  },\r\n  box: {\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  bottom: {\r\n    display: \"inline\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n  },\r\n}));\r\n\r\nexport default function OAuth({}) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  const CLIENT_ID = \"ade593cab628c91e766dd3f9497bbc92\";\r\n  const REDIRECT_URI = \"http://localhost:3000/kakaoAuth\";\r\n\r\n  const KAKAO_AUTH_URL = `https://kauth.kakao.com/oauth/authorize?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=code`;\r\n\r\n  return (\r\n    <div>\r\n      <Button id=\"kakaoLoginButton\" href={KAKAO_AUTH_URL}></Button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\quiz\\is-empty.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MyDictionary.js",["282","283"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(5),\r\n    paddingBottom: theme.spacing(5),\r\n    // width: '100%',\r\n    // maxWidth: '100ch',\r\n    // height: \"42ch\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: \"20px\",\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  paper: {\r\n    //padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    // height: '7ch',\r\n    color: theme.palette.text.secondary,\r\n    display: \"inline-block\",\r\n    borderBottom: \"1px solid #D9D9D9\",\r\n    width: \"40%\",\r\n  },\r\n  button: {\r\n    float: \"left\",\r\n    border: \"none\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"5px\",\r\n    width: \"150px\",\r\n    height: \"2.5rem\",\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: \"400\",\r\n    textAlign: \"left\",\r\n  },\r\n  deletebutton: {\r\n    float: \"right\",\r\n    border: \"none\",\r\n    width: \"3rem\",\r\n    height: \"2rem\",\r\n    borderRadius: \"5px\",\r\n    color: \"white\",\r\n    fontSize: \"0.85rem\",\r\n    fontWeight: \"400\",\r\n    opacity: \"0.6\",\r\n\r\n    backgroundColor: \"#FF0101\",\r\n  },\r\n  test: {\r\n    border: \"1px solid #D9D9D9\",\r\n  },\r\n  decoration: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n  },\r\n}));\r\n\r\nexport default function MyDictionary({ dictionaryWordsList, handleDelete }) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n  }, []);\r\n\r\n  let wordName = [];\r\n  let wordForDelete = \"\";\r\n  const itemLoad = dictionaryWordsList.map((item, index) => (\r\n    <div key={index}>{wordName.push(item)}</div>\r\n  ));\r\n  const classes = useStyles();\r\n\r\n  const wordDelete = (word) => {\r\n    handleDelete(word);\r\n  };\r\n\r\n  console.log(wordName);\r\n  let ttt = [\"김정원\", \"김태식\", \"김또깡\"];\r\n  const myWordList = ttt.map((word, index) => (\r\n    <Grid item key={index} xs={6}>\r\n      <Card>\r\n        <Link to={`/Word/${wordName[index]}`} className={classes.decoration}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {wordName[index]}\r\n            </Typography>\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n              {wordName[index]}\r\n            </Typography>\r\n            <Typography component=\"p\">\r\n              여기다가 예제 몇개 써놓으면 괜찮지 않을까\r\n              <br />\r\n              {'\"a benevolent smile\"'}\r\n            </Typography>\r\n          </CardContent>\r\n        </Link>\r\n        <br />\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            className={classes.deletebutton}\r\n            onClick={() => wordDelete(wordName[index])}\r\n          >\r\n            삭제\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n\r\n      {/* <Link to={`/Word/${wordName[index]}`}>\r\n        <button className={classes.button}>{wordName[index]}</button>\r\n      </Link>\r\n      <Button\r\n        className={classes.deletebutton}\r\n        onClick={() => wordDelete(wordName[index])}\r\n      >\r\n        삭제\r\n      </Button> */}\r\n    </Grid>\r\n  ));\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        // direction=\"column\"\r\n        // justifyContent=\"center\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <h3>내 단어장</h3>\r\n        </Grid>\r\n        {myWordList}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n//props 내용물 설정되면 출력형식 바꿔야함\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordMeaning\\MainWordMeaning.js",["284"],"import React, { useState } from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport \"./MainWordMeaning.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function MainWordMeaning({ handleMorpheme, item }) {\r\n  const [checked, setChecked] = useState(false);\r\n  const [searchBox, setSearchBox] = useState(\"\");\r\n\r\n  const handleChange = ({ target }) => {\r\n    setSearchBox(target.value);\r\n  };\r\n\r\n  const checkMorpheme = (e) => {\r\n    handleMorpheme(searchBox);\r\n    setChecked(true);\r\n  };\r\n\r\n  const morpheme = {\r\n    pos: [],\r\n    name: [],\r\n  };\r\n\r\n  const morphemeLoad = () => {\r\n    for (let i = 0; i < item.length; i++) {\r\n      if (i % 2 == 0) {\r\n        morpheme.pos.push(item[i]);\r\n      } else {\r\n        morpheme.name.push(item[i]);\r\n      }\r\n    }\r\n  };\r\n  morphemeLoad();\r\n  const searchPage = (\r\n    <div className=\"inputs\">\r\n      <div> 문장 / 단어</div>\r\n      <TextField\r\n        className=\"search\"\r\n        id=\"filled-basic\"\r\n        label=\"원하는 단어나 문장을 입력해 주세요.\"\r\n        value={searchBox}\r\n        autoFocus\r\n        onChange={(e) => handleChange(e)}\r\n      />\r\n      <Button color=\"primary\" onClick={checkMorpheme} variant=\"contained\">\r\n        검색\r\n      </Button>\r\n    </div>\r\n  );\r\n  const searchSuccess = morpheme.pos.map((item, index) => (\r\n    <div key={index}>\r\n      <h2 style={{ margineft: 10 }}>\r\n        [{morpheme.pos[index]}] {morpheme.name[index]}\r\n      </h2>\r\n      <Link to={`/Word/${morpheme.name[index]}`}>\r\n        <Button color=\"primary\" variant=\"contained\">\r\n          더 알아보기\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h3 className=\"title\"> 이건 무슨 뜻이지? </h3>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          {searchPage}\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          {!checked ? null : searchSuccess}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MyPage\\MySearch.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\index.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\paraphrase\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\quiz\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\kakaoAuth\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\ranking\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\morpheme\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\oneWord\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\myPage\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\voiceRecognition\\VoiceRecognition.js",["285","286","287","288"],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\voiceRecognition\\actions.js",["289"],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\voiceRecognition\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\voiceRecognition\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\sentenceParaphrase\\SentenceParaphrase.js",["290","291"],{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":3,"column":10,"nodeType":"298","messageId":"299","endLine":3,"endColumn":21},{"ruleId":"300","severity":1,"message":"301","line":27,"column":6,"nodeType":"302","endLine":27,"endColumn":8,"suggestions":"303"},{"ruleId":"296","severity":1,"message":"304","line":34,"column":9,"nodeType":"298","messageId":"299","endLine":34,"endColumn":17},{"ruleId":"305","severity":1,"message":"306","line":37,"column":34,"nodeType":"307","messageId":"308","endLine":37,"endColumn":35},{"ruleId":"296","severity":1,"message":"309","line":1,"column":28,"nodeType":"298","messageId":"299","endLine":1,"endColumn":36},{"ruleId":"300","severity":1,"message":"310","line":47,"column":6,"nodeType":"302","endLine":47,"endColumn":8,"suggestions":"311"},{"ruleId":"296","severity":1,"message":"312","line":71,"column":9,"nodeType":"298","messageId":"299","endLine":71,"endColumn":36},{"ruleId":"296","severity":1,"message":"313","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":16},{"ruleId":"300","severity":1,"message":"314","line":32,"column":6,"nodeType":"302","endLine":32,"endColumn":8,"suggestions":"315"},{"ruleId":"296","severity":1,"message":"309","line":1,"column":28,"nodeType":"298","messageId":"299","endLine":1,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":2,"column":19,"nodeType":"298","messageId":"299","endLine":2,"endColumn":30},{"ruleId":"296","severity":1,"message":"316","line":8,"column":26,"nodeType":"298","messageId":"299","endLine":8,"endColumn":31},{"ruleId":"317","severity":1,"message":"318","line":17,"column":16,"nodeType":"319","messageId":"320","endLine":17,"endColumn":18},{"ruleId":"296","severity":1,"message":"309","line":1,"column":28,"nodeType":"298","messageId":"299","endLine":1,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":2,"column":19,"nodeType":"298","messageId":"299","endLine":2,"endColumn":30},{"ruleId":"300","severity":1,"message":"321","line":43,"column":8,"nodeType":"302","endLine":43,"endColumn":10,"suggestions":"322"},{"ruleId":"296","severity":1,"message":"323","line":52,"column":11,"nodeType":"298","messageId":"299","endLine":52,"endColumn":19},{"ruleId":"296","severity":1,"message":"309","line":1,"column":28,"nodeType":"298","messageId":"299","endLine":1,"endColumn":36},{"ruleId":"300","severity":1,"message":"324","line":69,"column":6,"nodeType":"302","endLine":69,"endColumn":8,"suggestions":"325"},{"ruleId":"296","severity":1,"message":"309","line":4,"column":28,"nodeType":"298","messageId":"299","endLine":4,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":5,"column":19,"nodeType":"298","messageId":"299","endLine":5,"endColumn":30},{"ruleId":"296","severity":1,"message":"326","line":5,"column":32,"nodeType":"298","messageId":"299","endLine":5,"endColumn":43},{"ruleId":"300","severity":1,"message":"327","line":16,"column":6,"nodeType":"302","endLine":16,"endColumn":8,"suggestions":"328"},{"ruleId":"296","severity":1,"message":"297","line":2,"column":19,"nodeType":"298","messageId":"299","endLine":2,"endColumn":30},{"ruleId":"296","severity":1,"message":"329","line":8,"column":10,"nodeType":"298","messageId":"299","endLine":8,"endColumn":14},{"ruleId":"296","severity":1,"message":"330","line":9,"column":8,"nodeType":"298","messageId":"299","endLine":9,"endColumn":15},{"ruleId":"296","severity":1,"message":"331","line":20,"column":12,"nodeType":"298","messageId":"299","endLine":20,"endColumn":23},{"ruleId":"296","severity":1,"message":"332","line":20,"column":25,"nodeType":"298","messageId":"299","endLine":20,"endColumn":39},{"ruleId":"300","severity":1,"message":"333","line":40,"column":8,"nodeType":"302","endLine":40,"endColumn":10,"suggestions":"334"},{"ruleId":"335","severity":1,"message":"336","line":43,"column":33,"nodeType":"337","messageId":"320","endLine":43,"endColumn":35},{"ruleId":"335","severity":1,"message":"336","line":83,"column":33,"nodeType":"337","messageId":"320","endLine":83,"endColumn":35},{"ruleId":"335","severity":1,"message":"338","line":88,"column":38,"nodeType":"337","messageId":"320","endLine":88,"endColumn":40},{"ruleId":"335","severity":1,"message":"336","line":109,"column":33,"nodeType":"337","messageId":"320","endLine":109,"endColumn":35},{"ruleId":"335","severity":1,"message":"338","line":113,"column":38,"nodeType":"337","messageId":"320","endLine":113,"endColumn":40},{"ruleId":"335","severity":1,"message":"336","line":134,"column":30,"nodeType":"337","messageId":"320","endLine":134,"endColumn":32},{"ruleId":"296","severity":1,"message":"309","line":1,"column":28,"nodeType":"298","messageId":"299","endLine":1,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":21},{"ruleId":"317","severity":1,"message":"318","line":43,"column":31,"nodeType":"319","messageId":"320","endLine":43,"endColumn":33},{"ruleId":"296","severity":1,"message":"339","line":48,"column":9,"nodeType":"298","messageId":"299","endLine":48,"endColumn":16},{"ruleId":"296","severity":1,"message":"340","line":77,"column":7,"nodeType":"298","messageId":"299","endLine":77,"endColumn":20},{"ruleId":"296","severity":1,"message":"304","line":78,"column":9,"nodeType":"298","messageId":"299","endLine":78,"endColumn":17},{"ruleId":"335","severity":1,"message":"336","line":27,"column":17,"nodeType":"337","messageId":"320","endLine":27,"endColumn":19},{"ruleId":"296","severity":1,"message":"341","line":2,"column":18,"nodeType":"298","messageId":"299","endLine":2,"endColumn":27},{"ruleId":"296","severity":1,"message":"329","line":5,"column":10,"nodeType":"298","messageId":"299","endLine":5,"endColumn":14},{"ruleId":"296","severity":1,"message":"342","line":19,"column":7,"nodeType":"298","messageId":"299","endLine":19,"endColumn":16},{"ruleId":"300","severity":1,"message":"343","line":100,"column":6,"nodeType":"302","endLine":100,"endColumn":16,"suggestions":"344"},{"ruleId":"296","severity":1,"message":"345","line":17,"column":9,"nodeType":"298","messageId":"299","endLine":17,"endColumn":13},{"ruleId":"296","severity":1,"message":"346","line":9,"column":10,"nodeType":"298","messageId":"299","endLine":9,"endColumn":20},{"ruleId":"296","severity":1,"message":"316","line":11,"column":26,"nodeType":"298","messageId":"299","endLine":11,"endColumn":31},"no-native-reassign",["347"],"no-negated-in-lhs",["348"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'keyword' and 'oneWordRequest'. Either include them or remove the dependency array. If 'oneWordRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["349"],"'itemLoad' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dailyWordsRequest' and 'wordRankingRequest'. Either include them or remove the dependency array. If 'dailyWordsRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["350"],"'toastCheckParaphraseFailure' is assigned a value but never used.","'MySearch' is defined but never used.","React Hook useEffect has missing dependencies: 'dictionaryWordsRequest' and 'searchWordsRequest'. Either include them or remove the dependency array. If 'dictionaryWordsRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["351"],"'toast' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'wordRankingRequest'. Either include it or remove the dependency array. If 'wordRankingRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["352"],"'loadData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkSessionRequest', 'history', and 'thisPath'. Either include them or remove the dependency array. If 'checkSessionRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["353"],"'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'code' and 'kakaoAuthRequest'. Either include them or remove the dependency array. If 'kakaoAuthRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["354"],"'Link' is defined but never used.","'isEmpty' is defined but never used.","'myQuestions' is assigned a value but never used.","'setMyQuestions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'displayQuestions', 'quizRequest', and 'startTimer'. Either include them or remove the dependency array. If 'quizRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["355"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","'classes' is assigned a value but never used.","'wordForDelete' is assigned a value but never used.","'TextField' is defined but never used.","'voiceFile' is defined but never used.","React Hook useCallback has a missing dependency: 'onSearchAudioFile'. Either include it or remove the dependency array.",["356"],"'body' is assigned a value but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},"Update the dependencies array to be: [keyword, oneWordRequest]",{"range":"373","text":"374"},"Update the dependencies array to be: [dailyWordsRequest, wordRankingRequest]",{"range":"375","text":"376"},"Update the dependencies array to be: [dictionaryWordsRequest, searchWordsRequest]",{"range":"377","text":"378"},"Update the dependencies array to be: [wordRankingRequest]",{"range":"379","text":"380"},"Update the dependencies array to be: [checkSessionRequest, history, thisPath]",{"range":"381","text":"382"},"Update the dependencies array to be: [code, kakaoAuthRequest]",{"range":"383","text":"384"},"Update the dependencies array to be: [displayQuestions, quizRequest, startTimer]",{"range":"385","text":"386"},"Update the dependencies array to be: [audioUrl, onSearchAudioFile]",{"range":"387","text":"388"},[803,805],"[keyword, oneWordRequest]",[1269,1271],"[dailyWordsRequest, wordRankingRequest]",[752,754],"[dictionaryWordsRequest, searchWordsRequest]",[1266,1268],"[wordRankingRequest]",[1667,1669],"[checkSessionRequest, history, thisPath]",[454,456],"[code, kakaoAuthRequest]",[1545,1547],"[displayQuestions, quizRequest, startTimer]",[3142,3152],"[audioUrl, onSearchAudioFile]"]