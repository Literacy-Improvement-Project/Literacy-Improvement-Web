[{"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\index.js":"1","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\App.js":"2","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\reportWebVitals.js":"3","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\store.js":"4","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\rootReducer.js":"5","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\test\\reducer.js":"6","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\index.js":"7","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\test\\types.js":"8","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Word.js":"9","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\TopBar.js":"10","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainThemeWord.js":"11","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainSide.js":"12","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainWordOfTheDay.js":"13","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainWordMeaning.js":"14","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordDefinition.js":"15","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordExample.js":"16","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordSide.js":"17","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\reducer.js":"18","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\reducer.js":"19","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\reducer.js":"20","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\types.js":"21","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\types.js":"22","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\types.js":"23","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Main.js":"24","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\SignUp.js":"25","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\Login.js":"26","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\AuthSignUp.js":"27","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\Authentication.js":"28","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\actions.js":"29","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\actions.js":"30","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\actions.js":"31"},{"size":643,"mtime":1630417588811,"results":"32","hashOfConfig":"33"},{"size":653,"mtime":1630588771479,"results":"34","hashOfConfig":"33"},{"size":375,"mtime":1630417588818,"results":"35","hashOfConfig":"33"},{"size":667,"mtime":1630417588814,"results":"36","hashOfConfig":"33"},{"size":424,"mtime":1630588928979,"results":"37","hashOfConfig":"33"},{"size":695,"mtime":1630417588816,"results":"38","hashOfConfig":"33"},{"size":282,"mtime":1630587480885,"results":"39","hashOfConfig":"33"},{"size":119,"mtime":1630417588817,"results":"40","hashOfConfig":"33"},{"size":1515,"mtime":1630587349987,"results":"41","hashOfConfig":"33"},{"size":2864,"mtime":1630590483231,"results":"42","hashOfConfig":"33"},{"size":3641,"mtime":1630587349967,"results":"43","hashOfConfig":"33"},{"size":1068,"mtime":1630587349965,"results":"44","hashOfConfig":"33"},{"size":2041,"mtime":1630587923438,"results":"45","hashOfConfig":"33"},{"size":1139,"mtime":1630587349969,"results":"46","hashOfConfig":"33"},{"size":1840,"mtime":1630587349977,"results":"47","hashOfConfig":"33"},{"size":2706,"mtime":1630587349980,"results":"48","hashOfConfig":"33"},{"size":2075,"mtime":1630587349981,"results":"49","hashOfConfig":"33"},{"size":1880,"mtime":1630587480874,"results":"50","hashOfConfig":"33"},{"size":730,"mtime":1630587480892,"results":"51","hashOfConfig":"33"},{"size":902,"mtime":1630587480881,"results":"52","hashOfConfig":"33"},{"size":156,"mtime":1630587480895,"results":"53","hashOfConfig":"33"},{"size":395,"mtime":1630587480876,"results":"54","hashOfConfig":"33"},{"size":223,"mtime":1630587480883,"results":"55","hashOfConfig":"33"},{"size":1755,"mtime":1630588210326,"results":"56","hashOfConfig":"33"},{"size":1201,"mtime":1630587480868,"results":"57","hashOfConfig":"33"},{"size":1485,"mtime":1630587480862,"results":"58","hashOfConfig":"33"},{"size":8837,"mtime":1630587480865,"results":"59","hashOfConfig":"33"},{"size":5281,"mtime":1630587480860,"results":"60","hashOfConfig":"33"},{"size":786,"mtime":1630588777208,"results":"61","hashOfConfig":"33"},{"size":2019,"mtime":1630588779213,"results":"62","hashOfConfig":"33"},{"size":902,"mtime":1630587480878,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"wfhujz",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\index.js",[],["136","137"],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\App.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\reportWebVitals.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\store.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\rootReducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\test\\reducer.js",[],["138","139"],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\index.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\test\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Word.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\TopBar.js",["140","141"],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainThemeWord.js",["142","143"],"import React, { useEffect } from \"react\";\r\nimport { } from \"../redux\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(5),\r\n        paddingRight: theme.spacing(5),\r\n        paddingBottom: theme.spacing(5),\r\n\r\n        // padding: theme.spacing(10),\r\n        // width: '100%',\r\n        // maxWidth: '30ch',\r\n        height: '42ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #D9D9D9',\r\n        borderRadius: '20px',\r\n    },\r\n    test: {\r\n        // height: '50%',\r\n        float: 'right',\r\n        // border: '1px solid #D9D9D9',\r\n        // position: 'abolute',\r\n        // left: '50%',\r\n        // top: '50%',\r\n        // transform: 'translate(-50%, -50%)',\r\n\r\n        // display: 'flex',\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n\r\n    },\r\n    box: {\r\n        border: '1px solid #D9D9D9',\r\n    },\r\n    bottom: {\r\n        display: 'inline',\r\n        borderBottom: '1px solid #D9D9D9',\r\n    },\r\n}));\r\n\r\nexport default function ThemeWord() {\r\n    useEffect(() => {\r\n        // 렌더링\r\n    }, []);\r\n\r\n    let test = [1, 2, 3, 4, 5];\r\n    // const handleClick = (e) => {\r\n    //     e.\r\n    // }\r\n    const classes = useStyles();\r\n    // 사용자에게 보여지는 부분\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={5}>\r\n                    <h3>테마 단어</h3>\r\n                </Grid>\r\n                <Grid item xs={2} >\r\n                </Grid>\r\n                <Grid item xs={5} >\r\n                    <h3 />\r\n                    <button className={classes.test}>\r\n                        더 알아보기\r\n                    </button>\r\n                </Grid>\r\n                {\r\n                    test.map((item, index) => (\r\n                        <Grid item xs={12} key={index} className={classes.bottom}>\r\n                            <h3></h3>\r\n                            <button className={classes.test}>\r\n                                더 알아보기\r\n                            </button>\r\n                        </Grid>\r\n                    ))\r\n                }\r\n                {/* <Grid item xs={12} className={classes.bottom}>\r\n                    <h3 />\r\n                    <button className={classes.test}>\r\n                        더 알아보기\r\n                    </button>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.bottom}>\r\n                    <h3 />\r\n                    <button className={classes.test}>\r\n                        더 알아보기\r\n                    </button>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.bottom}>\r\n                    <h3 />\r\n                    <button className={classes.test}>\r\n                        더 알아보기\r\n                    </button>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.bottom}>\r\n                    <h3 />\r\n                    <button className={classes.test}>\r\n                        더 알아보기\r\n                    </button>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.bottom}>\r\n                    <h3 />\r\n                    <button\r\n                     className={classes.test}>\r\n                        더 알아보기\r\n                    </button>\r\n                </Grid> */}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainSide.js",["144"],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainWordOfTheDay.js",["145","146"],"import React, { useEffect } from \"react\";\r\nimport { } from \"../redux\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingLeft: theme.spacing(5),\r\n        paddingRight: theme.spacing(5),\r\n        paddingBottom: theme.spacing(5),\r\n        // width: '100%',\r\n        // maxWidth: '100ch',\r\n        height: '42ch',\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: '20px',\r\n        border: '1px solid #D9D9D9',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    paper: {\r\n        // padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        // height: '7ch',\r\n        color: theme.palette.text.secondary,\r\n        display: 'flex',\r\n        borderBottom: '1px solid #D9D9D9',\r\n    },\r\n    button: {\r\n        float: 'right',\r\n    },\r\n    test: {\r\n        border: '1px solid #D9D9D9',\r\n    }\r\n}));\r\n\r\n\r\nexport default function MainWordOfTheDay({ dailyWordsList }) {\r\n    useEffect(() => {\r\n        // 렌더링\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n    // 사용자에게 보여지는 부분\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={3}>\r\n                    <h3>오늘의 단어</h3>\r\n                </Grid>\r\n                <Grid item xs={7}></Grid>\r\n                <Grid item xs={2} className={classes.button}>\r\n                    <h3 />\r\n                    <button>더 알아보기</button>\r\n                </Grid>\r\n                {dailyWordsList.map((word, index) => (\r\n                    <Grid item xs={12} className={classes.paper}>\r\n                        <h4>{word.word}</h4>\r\n                        <h5>{word.morpheme}</h5>\r\n                        <h4>{word.mean}</h4>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\MainWordMeaning.js",["147","148","149","150"],"import React, { useState } from 'react';\r\nimport { Button, Divider, TextField } from \"@material-ui/core\";\r\nimport \"./MainWordMeaning.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function MainWordMeaning() {\r\n  const [checked, setChecked] = useState(false);\r\n  return (\r\n    <div className=\"header\">\r\n      <span className=\"title\"> 이건 무슨 뜻이지? </span>\r\n      {/* <Divider variant=\"middle\" /> */}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <div className=\"inputs\">\r\n            <div> 문장 / 단어</div>\r\n            <TextField\r\n              className=\"search\"\r\n              id=\"filled-basic\"\r\n              label=\"원하는 단어나 문장을 입력해 주세요.\"\r\n            // onChange={(e)}\r\n            />\r\n            <button\r\n              className=\"search_button\"\r\n            //  onClick = {setChecked(true)}\r\n            >\r\n              검색\r\n            </button>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div className=\"input\">\r\n            test\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n  )\r\n}","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordDefinition.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordExample.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\WordSide.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\reducer.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\types.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\page\\Main.js",["151","152","153","154"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TopBar from \"../components/TopBar\";\r\nimport MainWordOfTheDay from \"../components/MainWordOfTheDay\";\r\nimport MainThemeWord from \"../components/MainThemeWord\";\r\nimport MainWordMeaning from \"../components/MainWordMeaning\";\r\nimport { dailyWordsRequest } from \"../redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Main({ dailyWordsList, dailyWordsRequest }) {\r\n  useEffect(() => {\r\n    // 렌더링\r\n    dailyWordsRequest();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  console.log(dailyWordsList);\r\n\r\n  // 사용자에게 보여지는 부분\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={8}>\r\n            <MainWordOfTheDay dailyWordsList={dailyWordsList}></MainWordOfTheDay>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <MainThemeWord></MainThemeWord>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MainWordMeaning>\r\n            </MainWordMeaning>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // userID: state.authentication.status.currentUser,\r\n    dailyWordsList: state.dailyWords.status.dailyWordsList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dailyWordsRequest: () => {\r\n      return dispatch(dailyWordsRequest());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\SignUp.js",["155"],"/* 회원가입 */\r\nimport React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AuthSignUp from \"./AuthSignUp\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerRequest } from \"../../redux/signup/actions\";\r\n\r\nclass SignUp extends Component {\r\n  handleRegister = (body) => {\r\n    return this.props.registerRequest(body).then(() => {\r\n      console.log(this.props.history);\r\n      if (this.props.statusReg === \"SUCCESS\") {\r\n        // 회원가입 성공시 로그인 화면으로 돌아감.\r\n        this.props.history.push(\"/SignIn\");\r\n        return true;\r\n      } else {\r\n        console.log(\"회원가입 실패\");\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AuthSignUp onRegister={this.handleRegister} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    statusReg: state.register.register.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    registerRequest: (body) => {\r\n      return dispatch(registerRequest(body));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\Login.js",["156"],"import React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Authentication from \"./Authentication\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginRequest } from \"../../redux/authentication/actions\";\r\n\r\nclass Login extends Component {\r\n  handleLogin = (id, pw) => {\r\n    return this.props.loginRequest(id, pw).then(() => {\r\n      console.log(this.props.history);\r\n      if (this.props.status === \"SUCCESS\") {\r\n        // create session data\r\n        let loginData = {\r\n          isLoggedIn: true,\r\n          userId: id,\r\n        };\r\n        document.cookie = \"key=\" + btoa(JSON.stringify(loginData));\r\n        console.log(\"login-cookie : \");\r\n        console.log(document.cookie);\r\n\r\n        // 로그인 성공시 루트 화면으로 돌아감.\r\n        this.props.history.push(\"/\");\r\n        return true;\r\n      } else {\r\n        console.log(\"login-cookie-fail\");\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Authentication onLogin={this.handleLogin} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    status: state.authentication.login.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginRequest: (id, pw) => {\r\n      console.log(\"mapDispatchToProps\");\r\n      return dispatch(loginRequest(id, pw));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\signup\\AuthSignUp.js",["157","158","159","160"],"/* 회원가입 */\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./SignUp.css\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nclass AuthSignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userName: \"\",\r\n      birth: \"\",\r\n      work: \"\",\r\n      userId: \"\",\r\n      userPassword: \"\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeWork = (e) => {\r\n    this.setState({ work: e.target.value });\r\n  };\r\n\r\n  toastRegister_NotEnoughInfo = () => toast.error(\"모든 항목을 입력하세요.\");\r\n  toastRegister_Complete = () => toast(\"회원가입 되었습니다.\");\r\n  toastRegister_Failure = () => toast.error(\"회원가입 실패하였습니다.\");\r\n\r\n  handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      // 정보가 부족하면 오류 메시지 출력\r\n      this.state.userName === \"\" ||\r\n      this.state.work === \"\" ||\r\n      this.state.birth === \"\" ||\r\n      this.state.userId === \"\" ||\r\n      this.state.userPassword === \"\"\r\n    ) {\r\n      this.toastRegister_NotEnoughInfo();\r\n      return false;\r\n    }\r\n\r\n    let body = {\r\n      userName: this.state.userName,\r\n      birth: this.state.birth,\r\n      work: this.state.work,\r\n      userId: this.state.userId,\r\n      userPassword: this.state.userPassword,\r\n    };\r\n\r\n    this.props.onRegister(body).then((success) => {\r\n      if (!success) {\r\n        //실패하면 아이디 재입력 받음\r\n        this.toastRegister_Failure();\r\n        this.setState({\r\n          userId: \"\",\r\n          userPassword: \"\",\r\n        });\r\n      } else {\r\n        this.toastRegister_Complete();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={useStyles.paper}>\r\n            <Avatar className={useStyles.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              KOTUDY\r\n            </Typography>\r\n            <Typography component=\"subtitle2\" variant=\"subtitle2\">\r\n              문해력 향상 프로젝트\r\n            </Typography>\r\n            <form className={useStyles.form} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    autoComplete=\"userName\"\r\n                    name=\"userName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"userName\"\r\n                    label=\"이름\"\r\n                    autoFocus\r\n                    onChange={this.onChange}\r\n                    value={this.state.userName}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"birth\"\r\n                    name=\"birth\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"birth\"\r\n                    label=\"생년월일 ex) 980102\"\r\n                    autoFocus\r\n                    onChange={this.onChange}\r\n                    value={this.state.birth}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormControl\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    className={useStyles.formControl}\r\n                  >\r\n                    <InputLabel id=\"work\">직업</InputLabel>\r\n                    <Select\r\n                      labelId=\"work\"\r\n                      id=\"work\"\r\n                      value={this.state.work}\r\n                      onChange={this.onChangeWork}\r\n                      label=\"Work\"\r\n                    >\r\n                      <MenuItem value=\"preschooler\">유치원생</MenuItem>\r\n                      <MenuItem value=\"elementarySchoolStudent\">\r\n                        초등학생\r\n                      </MenuItem>\r\n                      <MenuItem value=\"middleSchoolStudent\">중학생</MenuItem>\r\n                      <MenuItem value=\"highSchoolStudent\">고등학생</MenuItem>\r\n                      <MenuItem value=\"universityStudent\">대학생</MenuItem>\r\n                      <MenuItem value=\"adult\">성인</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"userId\"\r\n                    label=\"ID\"\r\n                    type=\"userId\"\r\n                    id=\"userId\"\r\n                    autoComplete=\"userId\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.userId}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"userPassword\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"userPassword\"\r\n                    autoComplete=\"current-userPassword\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.userPassword}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={useStyles.submit}\r\n                onClick={this.handleRegister}\r\n              >\r\n                회원가입\r\n              </Button>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Link href=\"/SignIn\" variant=\"body2\">\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <Box mt={5}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n        <div>\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={2000}\r\n            hideProgressBar\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n            transition={Flip}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAuthSignUp.propTypes = {\r\n  onRegister: PropTypes.func,\r\n};\r\n\r\nAuthSignUp.defaultProps = {\r\n  onRegister: (body) => {\r\n    console.error(\"sign Up function not defined\");\r\n  },\r\n};\r\n\r\nexport default AuthSignUp;\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\components\\login\\Authentication.js",["161","162"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nclass Authentication extends Component {\r\n  state = {\r\n    userId: \"\",\r\n    userPassword: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  };\r\n\r\n  handleLogin = () => {\r\n    let id = this.state.userId;\r\n    let pw = this.state.userPassword;\r\n\r\n    // 정보가 부족하면 오류 메시지 출력\r\n    if (this.state.userId === \"\") {\r\n      this.toastCheckInfo_NotInfoID();\r\n      return false;\r\n    } else if (this.state.userPassword === \"\") {\r\n      this.toastCheckInfo_NotInfoPassword();\r\n      return false;\r\n    }\r\n\r\n    this.props.onLogin(id, pw).then((success) => {\r\n      // 실패하면 비밀번호 재입력 받음\r\n      console.log(\"Auth_handleLogin\");\r\n      if (!success) {\r\n        console.log(this.props);\r\n        this.toastCheckInfo_Fail();\r\n        this.setState({\r\n          userPassword: \"\",\r\n        });\r\n      } else {\r\n        this.toastCheckInfo_Complete();\r\n      }\r\n    });\r\n  };\r\n\r\n  toastCheckInfo_Complete = () => toast(this.state.userId + \"님 반갑습니다.\");\r\n  toastCheckInfo_NotInfoID = () => toast.error(\"아이디를 입력해주세요.\");\r\n  toastCheckInfo_NotInfoPassword = () =>\r\n    toast.error(\"비밀번호를 입력해주세요.\");\r\n  toastCheckInfo_Fail = () =>\r\n    toast.error(\"아이디 또는 패스워드가 잘못 입력되었습니다.\");\r\n\r\n  render() {\r\n    const button = {};\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={useStyles.paper}>\r\n          <Avatar className={useStyles.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            LOGIN\r\n          </Typography>\r\n          <form className={useStyles.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"userId\"\r\n              label=\"ID\"\r\n              name=\"userId\"\r\n              autoComplete=\"userId\"\r\n              autoFocus\r\n              value={this.state.userId}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"userPassword\"\r\n              label=\"PASSWORD\"\r\n              type=\"Password\"\r\n              id=\"userPassword\"\r\n              autoComplete=\"current-password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.userPassword}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={useStyles.submit}\r\n              onClick={this.handleLogin}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/SignUp\" variant=\"body2\">\r\n                  {\"계정이 없다면? 회원가입하러 가기\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <div>\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={2000}\r\n            hideProgressBar\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n            transition={Flip}\r\n          />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nAuthentication.propTypes = {\r\n  onLogin: PropTypes.func,\r\n};\r\n\r\nAuthentication.defaultProps = {\r\n  onLogin: (id, pw) => {\r\n    console.error(\"login function not defined\");\r\n  },\r\n};\r\n\r\nexport default Authentication;\r\n","C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\signup\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\authentication\\actions.js",[],"C:\\Users\\Jyeo\\Desktop\\project\\Literacy-Improvement-Project\\Literacy-Improvement-Web\\frontend\\Literacy-Web\\src\\redux\\dailyWords\\actions.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"163","replacedBy":"167"},{"ruleId":"165","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":1,"column":28,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"174","line":55,"column":6,"nodeType":"175","endLine":55,"endColumn":8,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":65,"column":21,"nodeType":"179","endLine":65,"endColumn":27},{"ruleId":"177","severity":1,"message":"178","line":73,"column":29,"nodeType":"179","endLine":73,"endColumn":33},{"ruleId":"169","severity":1,"message":"180","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":13},{"ruleId":"169","severity":1,"message":"180","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":13},{"ruleId":"177","severity":1,"message":"178","line":56,"column":21,"nodeType":"179","endLine":56,"endColumn":27},{"ruleId":"169","severity":1,"message":"181","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":16},{"ruleId":"169","severity":1,"message":"182","line":2,"column":18,"nodeType":"171","messageId":"172","endLine":2,"endColumn":25},{"ruleId":"169","severity":1,"message":"183","line":7,"column":10,"nodeType":"171","messageId":"172","endLine":7,"endColumn":17},{"ruleId":"169","severity":1,"message":"184","line":7,"column":19,"nodeType":"171","messageId":"172","endLine":7,"endColumn":29},{"ruleId":"169","severity":1,"message":"170","line":1,"column":28,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"185","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":19},{"ruleId":"169","severity":1,"message":"186","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":14},{"ruleId":"173","severity":1,"message":"187","line":24,"column":6,"nodeType":"175","endLine":24,"endColumn":8,"suggestions":"188"},{"ruleId":"169","severity":1,"message":"189","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":21},{"ruleId":"169","severity":1,"message":"189","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":21},{"ruleId":"169","severity":1,"message":"190","line":11,"column":8,"nodeType":"171","messageId":"172","endLine":11,"endColumn":24},{"ruleId":"169","severity":1,"message":"191","line":19,"column":8,"nodeType":"171","messageId":"172","endLine":19,"endColumn":13},{"ruleId":"169","severity":1,"message":"192","line":20,"column":8,"nodeType":"171","messageId":"172","endLine":20,"endColumn":18},{"ruleId":"169","severity":1,"message":"193","line":21,"column":8,"nodeType":"171","messageId":"172","endLine":21,"endColumn":17},{"ruleId":"169","severity":1,"message":"194","line":18,"column":10,"nodeType":"171","messageId":"172","endLine":18,"endColumn":19},{"ruleId":"169","severity":1,"message":"195","line":99,"column":11,"nodeType":"171","messageId":"172","endLine":99,"endColumn":17},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],["196"],["197"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkUserRequest', 'history', and 'thisPath'. Either include them or remove the dependency array. If 'checkUserRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["198"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Paper' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'useParams' is defined but never used.","'TopBar' is defined but never used.","React Hook useEffect has a missing dependency: 'dailyWordsRequest'. Either include it or remove the dependency array. If 'dailyWordsRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["199"],"'useSelector' is defined but never used.","'FormControlLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormLabel' is defined but never used.","'Copyright' is defined but never used.","'button' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [checkUserRequest, history, thisPath]",{"range":"204","text":"205"},"Update the dependencies array to be: [dailyWordsRequest]",{"range":"206","text":"207"},[1409,1411],"[checkUserRequest, history, thisPath]",[742,744],"[dailyWordsRequest]"]